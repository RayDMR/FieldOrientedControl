-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\untitled\CurrentController.vhd
-- Created: 2020-07-03 00:04:52
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: CurrentController
-- Source Path: untitled/CurrentController
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY CurrentController IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Idref                             :   IN    std_logic_vector(63 DOWNTO 0);  -- double
        Iqref                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Id                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        Iq                                :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        we                                :   IN    std_logic_vector(63 DOWNTO 0);  -- double
        Vdref                             :   OUT   std_logic_vector(63 DOWNTO 0);  -- double
        Vqref                             :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
        );
END CurrentController;


ARCHITECTURE rtl OF CurrentController IS

  -- Component Declarations
  COMPONENT Decoupling
    PORT( Id                              :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          Iq                              :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          we                              :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          VdFF                            :   OUT   std_logic_vector(63 DOWNTO 0);  -- double
          VqFF                            :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT nfp_convert_single2double
    PORT( nfp_in                          :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT nfp_sub_double
    PORT( nfp_in1                         :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          nfp_in2                         :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          nfp_out                         :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT IdController
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          u                               :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          y                               :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT nfp_add_double
    PORT( nfp_in1                         :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          nfp_in2                         :   IN    std_logic_vector(63 DOWNTO 0);  -- double
          nfp_out                         :   OUT   std_logic_vector(63 DOWNTO 0)  -- double
          );
  END COMPONENT;

  COMPONENT nfp_sub_single
    PORT( nfp_in1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_in2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          nfp_out                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT IqController
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          u                               :   IN    std_logic_vector(31 DOWNTO 0);  -- single
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Decoupling
    USE ENTITY work.Decoupling(rtl);

  FOR ALL : nfp_convert_single2double
    USE ENTITY work.nfp_convert_single2double(rtl);

  FOR ALL : nfp_sub_double
    USE ENTITY work.nfp_sub_double(rtl);

  FOR ALL : IdController
    USE ENTITY work.IdController(rtl);

  FOR ALL : nfp_add_double
    USE ENTITY work.nfp_add_double(rtl);

  FOR ALL : nfp_sub_single
    USE ENTITY work.nfp_sub_single(rtl);

  FOR ALL : IqController
    USE ENTITY work.IqController(rtl);

  -- Signals
  SIGNAL Decoupling_out1                  : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Decoupling_out2                  : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Cast_out1                        : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum4_out1                        : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL IdController_out1                : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum2_out1                        : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum1_out1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL IqController_out1                : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Cast2_out1                       : std_logic_vector(63 DOWNTO 0);  -- ufix64
  SIGNAL Sum3_out1                        : std_logic_vector(63 DOWNTO 0);  -- ufix64

BEGIN
  u_Decoupling : Decoupling
    PORT MAP( Id => Id,  -- single
              Iq => Iq,  -- single
              we => we,  -- double
              VdFF => Decoupling_out1,  -- double
              VqFF => Decoupling_out2  -- double
              );

  u_untitled_CurrentController_nfp_convert_single2double : nfp_convert_single2double
    PORT MAP( nfp_in => Id,  -- single
              nfp_out => Cast_out1  -- double
              );

  u_nfp_sub_comp : nfp_sub_double
    PORT MAP( nfp_in1 => Idref,  -- double
              nfp_in2 => Cast_out1,  -- double
              nfp_out => Sum4_out1  -- double
              );

  u_IdController : IdController
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              u => Sum4_out1,  -- double
              y => IdController_out1  -- double
              );

  u_nfp_add_comp : nfp_add_double
    PORT MAP( nfp_in1 => Decoupling_out1,  -- double
              nfp_in2 => IdController_out1,  -- double
              nfp_out => Sum2_out1  -- double
              );

  u_nfp_sub_comp_1 : nfp_sub_single
    PORT MAP( nfp_in1 => Iqref,  -- single
              nfp_in2 => Iq,  -- single
              nfp_out => Sum1_out1  -- single
              );

  u_IqController : IqController
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              u => Sum1_out1,  -- single
              y => IqController_out1  -- single
              );

  u_untitled_CurrentController_nfp_convert_single2double_1 : nfp_convert_single2double
    PORT MAP( nfp_in => IqController_out1,  -- single
              nfp_out => Cast2_out1  -- double
              );

  u_nfp_add_comp_1 : nfp_add_double
    PORT MAP( nfp_in1 => Decoupling_out2,  -- double
              nfp_in2 => Cast2_out1,  -- double
              nfp_out => Sum3_out1  -- double
              );

  Vdref <= Sum2_out1;

  Vqref <= Sum3_out1;

END rtl;

