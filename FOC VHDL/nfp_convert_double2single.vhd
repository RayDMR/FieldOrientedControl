-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\untitled\nfp_convert_double2single.vhd
-- Created: 2020-07-03 00:04:52
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: nfp_convert_double2single
-- Source Path: untitled/VelocityController/nfp_convert_double2single
-- Hierarchy Level: 2
-- 
-- {Latency Strategy = "Zero"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY nfp_convert_double2single IS
  PORT( nfp_in                            :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_out                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END nfp_convert_double2single;


ARCHITECTURE rtl OF nfp_convert_double2single IS

  -- Signals
  SIGNAL nfp_in_unsigned                  : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL inSign                           : std_logic;  -- ufix1
  SIGNAL inExponent                       : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL inMantissa                       : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL inExponent_inType_Exponent_out1  : std_logic;  -- ufix1
  SIGNAL inExponent_0_out1                : std_logic;  -- ufix1
  SIGNAL inMantissa_0_out1                : std_logic;  -- ufix1
  SIGNAL alphainExponent_0_inMantis_out1  : std_logic;  -- ufix1
  SIGNAL Exponent_0_out1                  : std_logic;  -- ufix1
  SIGNAL C_out1                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Exponent_0_out1               : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL inType_ExponentBias_out1         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL int32_storedInteger_ExpCorrect_sub_cast : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL int32_storedInteger_ExpCorrect_sub_cast_1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL int32_storedInteger_ExpCorrect_out1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Exponent_0_out1_1                : std_logic;  -- ufix1
  SIGNAL cfType_Exponent_Inf_or_NaN_out1  : std_logic;  -- ufix1
  SIGNAL alphaExponent_0_cfType_Exp_out1  : std_logic;  -- ufix1
  SIGNAL alpha1_out1                      : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1                 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL alpha0_out1                      : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_Exponent_0_cfType_Exp_out1    : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Bit_Slice2_out1                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Slice13_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1          : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_1                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice16_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_1        : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice16_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice16_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_3        : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice16_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_4        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice16_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_5        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_5        : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Bit_Slice8_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_1                : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_1                : std_logic;  -- ufix1
  SIGNAL Constant1_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch2_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant3_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant4_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator2_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch3_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant5_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant6_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant7_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant8_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator12_out1_5        : std_logic;  -- ufix1
  SIGNAL Switch9_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL Switch13_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator3_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_3                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_4                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_5                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL uint8_MantAppended_x_WordLengt_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL uint8_MantAppended_x_WordLengt_sub_cast : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL uint8_MantAppended_x_WordLengt_sub_cast_1 : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL uint8_MantAppended_x_WordLengt_sub_temp : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL uint8_MantAppended_x_WordLengt_out1_1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL e_int32_shift_length_sub_cast    : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL e_int32_shift_length_out1        : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL e_int32_255_out1                 : std_logic;  -- ufix1
  SIGNAL e_cfType_MantissaLength_out1     : std_logic;  -- ufix1
  SIGNAL C7_out1                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha0_out1_1                    : std_logic;  -- ufix1
  SIGNAL e_0_out1                         : std_logic;  -- ufix1
  SIGNAL bitsll_MantAppended_x_shift_l_out1 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL C1_out1                          : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL alpha1_e_out1                    : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Data_Type_Conversion_out1        : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsrl_MantExtended_x_shift_l_out1 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_e_0_MantExtended_x_out1       : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice1_out1                   : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Concat_out1_1                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL shift_length1_0_out1             : std_logic;  -- ufix1
  SIGNAL Bit_Slice33_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator11_out1          : std_logic;  -- ufix1
  SIGNAL C2_out1                          : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL MantExtended_x_WordLength_sub_cast : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL MantExtended_x_WordLength_sub_temp : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL MantExtended_x_WordLength_out1   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice32_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce12_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice30_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce11_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice24_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce10_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice28_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce9_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice22_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce8_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice20_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce7_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice16_out1_5               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce6_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_5               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce5_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice18_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce4_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce3_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce2_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_2                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce1_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_2                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator9_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator10_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice31_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1                   : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice25_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice29_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice23_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice21_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice17_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_15        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_5               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice19_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_15        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_7                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_2                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_12                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_19        : std_logic;  -- ufix1
  SIGNAL shift_length_MantExtended_x_out1 : std_logic;  -- ufix1
  SIGNAL Bit_Slice27_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_25        : std_logic;  -- ufix1
  SIGNAL Constant_out1_1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_24        : std_logic;  -- ufix1
  SIGNAL C4_out1                          : std_logic;  -- ufix1
  SIGNAL C3_out1                          : std_logic;  -- ufix1
  SIGNAL if_shift_length_MantExtended_out1 : std_logic;  -- ufix1
  SIGNAL if_shift_length1_0_out1          : std_logic;  -- ufix1
  SIGNAL C6_out1                          : std_logic;  -- ufix1
  SIGNAL Bit_Slice33_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator11_out1_1        : std_logic;  -- ufix1
  SIGNAL Constant_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice32_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce12_out1_1              : std_logic;  -- ufix1
  SIGNAL Bit_Slice30_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce11_out1_1              : std_logic;  -- ufix1
  SIGNAL Bit_Slice24_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce10_out1_1              : std_logic;  -- ufix1
  SIGNAL Bit_Slice28_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce9_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice22_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce8_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice20_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce7_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice16_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce6_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce5_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice18_out1_1               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce4_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_7               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce3_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_7               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce2_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_3                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce1_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_3                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator9_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator10_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_7        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_7        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_26        : std_logic;  -- ufix1
  SIGNAL Bit_Slice31_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_25        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_28        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_28        : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_3                : std_logic;  -- ufix1
  SIGNAL Bit_Slice25_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_18               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_26        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_18               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_30        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_15                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_29        : std_logic;  -- ufix1
  SIGNAL Bit_Slice29_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_19               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_27        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_19               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_31        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_16                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_30        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_30        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_27        : std_logic;  -- ufix1
  SIGNAL Bit_Slice23_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_20               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_29        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_20               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_32        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_17                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_31        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_31        : std_logic;  -- ufix1
  SIGNAL Bit_Slice21_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_21               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_30        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_21               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_33        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_18                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_26        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_31        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_30        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_32        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_32        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_33        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_33        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_30        : std_logic;  -- ufix1
  SIGNAL Bit_Slice17_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_22               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_32        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_22               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_31        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_35        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_19                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_27        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_31        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_34        : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_23               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_33        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_23               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_32        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_36        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_20                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_28        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_32        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_35        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_35        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_33        : std_logic;  -- ufix1
  SIGNAL Bit_Slice19_out1_1               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_24               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_35        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_24               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_37        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_21                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_29        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_33        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_36        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_36        : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_7               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_25               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_36        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_25               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_35        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_38        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_22                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_30        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_39        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_35        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_37        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_37        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_38        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_38        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_7               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_26               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_37        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_26               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_36        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_40        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_23                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_31        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_36        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_39        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_39        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_8                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_27               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_38        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_27               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_37        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_41        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_24                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_32        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_37        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_39        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_40        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_40        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_38        : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_3                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_28               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_40        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_28               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_39        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_42        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_25                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_33        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_38        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_41        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_41        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_26                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_29               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_41        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_29               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_40        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_27                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_34        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_39        : std_logic;  -- ufix1
  SIGNAL BitSlice_out1                    : std_logic;  -- ufix1
  SIGNAL bitget_Mant_tmp_1_0_out1         : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1_1                 : std_logic;  -- ufix1
  SIGNAL bitget_Mant_tmp_2_0_out1         : std_logic;  -- ufix1
  SIGNAL if_e_0_sticky_out1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice27_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_43        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_40        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_44        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_41        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_45        : std_logic;  -- ufix1
  SIGNAL Constant_out1_3                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_42        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_42        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_43        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_43        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_44        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_44        : std_logic;  -- ufix1
  SIGNAL sticky_bitsll_MantExtended_out1  : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_2_0_out1    : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_1_0_out1    : std_logic;  -- ufix1
  SIGNAL castout1                         : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Mant_tmp_cast                    : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL DTC_out1                         : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL if_bitget_Mant_tmp_1_0_out1      : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL BitSlice2_out1                   : std_logic;  -- ufix1
  SIGNAL bitget_Mant_tmp_Mant_tmp_Word_out1 : std_logic;  -- ufix1
  SIGNAL C5_out1                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL DTC2_out1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_e_0_Exponent_out1             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cast_1_1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Exp_cast                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL DTC1_out1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_Exp_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_e_cfType_MantissaLength_Exponent_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C8_out1                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_e_int32_255_Exponent_out1     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C11_out1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_inExponent_0_inMantis_Exponent_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C12_out1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL if_inExponent_inType_Exponent_Exponent_out1 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL C9_out1                          : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL BitSlice3_out1                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C_out1_1                         : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_MantRounded_out1 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_e_cfType_MantissaLength_Mantissa_out1 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C10_out1                         : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_e_int32_255_Mantissa_out1     : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL C13_out1                         : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_inExponent_0_inMantis_Mantissa_out1 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL inMantissa_0_out1_1              : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_1                  : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL BitSet_out1                      : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_inMantissa_0_out1             : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_inExponent_inType_Exponent_Mantissa_out1 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL nfp_out_pack                     : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  nfp_in_unsigned <= unsigned(nfp_in);

  -- Split 64 bit word into FP sign, exponent, mantissa
  inSign <= nfp_in_unsigned(63);
  inExponent <= nfp_in_unsigned(62 DOWNTO 52);
  inMantissa <= nfp_in_unsigned(51 DOWNTO 0);

  
  inExponent_inType_Exponent_out1 <= '1' WHEN inExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  
  inExponent_0_out1 <= '1' WHEN inExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  
  inMantissa_0_out1 <= '1' WHEN inMantissa = to_unsigned(0, 52) ELSE
      '0';

  alphainExponent_0_inMantis_out1 <= inExponent_0_out1 AND inMantissa_0_out1;

  
  Exponent_0_out1 <= '1' WHEN inExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  C_out1 <= to_unsigned(16#001#, 11);

  
  if_Exponent_0_out1 <= inExponent WHEN Exponent_0_out1 = '0' ELSE
      C_out1;

  inType_ExponentBias_out1 <= to_unsigned(16#380#, 11);

  int32_storedInteger_ExpCorrect_sub_cast <= signed(resize(if_Exponent_0_out1, 12));
  int32_storedInteger_ExpCorrect_sub_cast_1 <= signed(resize(inType_ExponentBias_out1, 12));
  int32_storedInteger_ExpCorrect_out1 <= int32_storedInteger_ExpCorrect_sub_cast - int32_storedInteger_ExpCorrect_sub_cast_1;

  
  Exponent_0_out1_1 <= '1' WHEN inExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  
  cfType_Exponent_Inf_or_NaN_out1 <= '1' WHEN inExponent = to_unsigned(16#0FF#, 11) ELSE
      '0';

  alphaExponent_0_cfType_Exp_out1 <= Exponent_0_out1_1 OR cfType_Exponent_Inf_or_NaN_out1;

  alpha1_out1 <= '1';

  Bit_Concat1_out1 <= alpha1_out1 & inMantissa;

  alpha0_out1 <= '0';

  Bit_Concat_out1 <= alpha0_out1 & inMantissa;

  
  if_Exponent_0_cfType_Exp_out1 <= Bit_Concat1_out1 WHEN alphaExponent_0_cfType_Exp_out1 = '0' ELSE
      Bit_Concat_out1;

  Bit_Slice2_out1 <= if_Exponent_0_cfType_Exp_out1(52 DOWNTO 48);

  Bit_Slice13_out1 <= Bit_Slice2_out1(4);

  Bit_Slice12_out1 <= Bit_Slice2_out1(3);

  Bit_Slice11_out1 <= Bit_Slice2_out1(2);

  Logical_Operator4_out1 <= Bit_Slice12_out1 OR Bit_Slice11_out1;

  Bit_Slice10_out1 <= Bit_Slice2_out1(1);

  Bit_Slice9_out1 <= Bit_Slice2_out1(0);

  Logical_Operator14_out1 <= Bit_Slice10_out1 OR Bit_Slice9_out1;

  Logical_Operator13_out1 <= Logical_Operator4_out1 OR Logical_Operator14_out1;

  Logical_Operator12_out1 <= Bit_Slice13_out1 OR Logical_Operator13_out1;

  Bit_Slice9_out1_1 <= if_Exponent_0_cfType_Exp_out1(47 DOWNTO 40);

  Bit_Slice16_out1 <= Bit_Slice9_out1_1(7);

  Bit_Slice15_out1 <= Bit_Slice9_out1_1(6);

  Logical_Operator5_out1 <= Bit_Slice16_out1 OR Bit_Slice15_out1;

  Bit_Slice14_out1 <= Bit_Slice9_out1_1(5);

  Bit_Slice13_out1_1 <= Bit_Slice9_out1_1(4);

  Logical_Operator7_out1 <= Bit_Slice14_out1 OR Bit_Slice13_out1_1;

  Logical_Operator6_out1 <= Logical_Operator5_out1 OR Logical_Operator7_out1;

  Bit_Slice12_out1_1 <= Bit_Slice9_out1_1(3);

  Bit_Slice11_out1_1 <= Bit_Slice9_out1_1(2);

  Logical_Operator4_out1_1 <= Bit_Slice12_out1_1 OR Bit_Slice11_out1_1;

  Bit_Slice10_out1_1 <= Bit_Slice9_out1_1(1);

  Bit_Slice9_out1_2 <= Bit_Slice9_out1_1(0);

  Logical_Operator14_out1_1 <= Bit_Slice10_out1_1 OR Bit_Slice9_out1_2;

  Logical_Operator13_out1_1 <= Logical_Operator4_out1_1 OR Logical_Operator14_out1_1;

  Logical_Operator12_out1_1 <= Logical_Operator6_out1 OR Logical_Operator13_out1_1;

  Bit_Slice8_out1 <= if_Exponent_0_cfType_Exp_out1(39 DOWNTO 32);

  Bit_Slice16_out1_1 <= Bit_Slice8_out1(7);

  Bit_Slice15_out1_1 <= Bit_Slice8_out1(6);

  Logical_Operator5_out1_1 <= Bit_Slice16_out1_1 OR Bit_Slice15_out1_1;

  Bit_Slice14_out1_1 <= Bit_Slice8_out1(5);

  Bit_Slice13_out1_2 <= Bit_Slice8_out1(4);

  Logical_Operator7_out1_1 <= Bit_Slice14_out1_1 OR Bit_Slice13_out1_2;

  Logical_Operator6_out1_1 <= Logical_Operator5_out1_1 OR Logical_Operator7_out1_1;

  Bit_Slice12_out1_2 <= Bit_Slice8_out1(3);

  Bit_Slice11_out1_2 <= Bit_Slice8_out1(2);

  Logical_Operator4_out1_2 <= Bit_Slice12_out1_2 OR Bit_Slice11_out1_2;

  Bit_Slice10_out1_2 <= Bit_Slice8_out1(1);

  Bit_Slice9_out1_3 <= Bit_Slice8_out1(0);

  Logical_Operator14_out1_2 <= Bit_Slice10_out1_2 OR Bit_Slice9_out1_3;

  Logical_Operator13_out1_2 <= Logical_Operator4_out1_2 OR Logical_Operator14_out1_2;

  Logical_Operator12_out1_2 <= Logical_Operator6_out1_1 OR Logical_Operator13_out1_2;

  Logical_Operator2_out1 <= Logical_Operator12_out1_1 OR Logical_Operator12_out1_2;

  Bit_Slice7_out1 <= if_Exponent_0_cfType_Exp_out1(31 DOWNTO 24);

  Bit_Slice16_out1_2 <= Bit_Slice7_out1(7);

  Bit_Slice15_out1_2 <= Bit_Slice7_out1(6);

  Logical_Operator5_out1_2 <= Bit_Slice16_out1_2 OR Bit_Slice15_out1_2;

  Bit_Slice14_out1_2 <= Bit_Slice7_out1(5);

  Bit_Slice13_out1_3 <= Bit_Slice7_out1(4);

  Logical_Operator7_out1_2 <= Bit_Slice14_out1_2 OR Bit_Slice13_out1_3;

  Logical_Operator6_out1_2 <= Logical_Operator5_out1_2 OR Logical_Operator7_out1_2;

  Bit_Slice12_out1_3 <= Bit_Slice7_out1(3);

  Bit_Slice11_out1_3 <= Bit_Slice7_out1(2);

  Logical_Operator4_out1_3 <= Bit_Slice12_out1_3 OR Bit_Slice11_out1_3;

  Bit_Slice10_out1_3 <= Bit_Slice7_out1(1);

  Bit_Slice9_out1_4 <= Bit_Slice7_out1(0);

  Logical_Operator14_out1_3 <= Bit_Slice10_out1_3 OR Bit_Slice9_out1_4;

  Logical_Operator13_out1_3 <= Logical_Operator4_out1_3 OR Logical_Operator14_out1_3;

  Logical_Operator12_out1_3 <= Logical_Operator6_out1_2 OR Logical_Operator13_out1_3;

  Bit_Slice6_out1 <= if_Exponent_0_cfType_Exp_out1(23 DOWNTO 16);

  Bit_Slice16_out1_3 <= Bit_Slice6_out1(7);

  Bit_Slice15_out1_3 <= Bit_Slice6_out1(6);

  Logical_Operator5_out1_3 <= Bit_Slice16_out1_3 OR Bit_Slice15_out1_3;

  Bit_Slice14_out1_3 <= Bit_Slice6_out1(5);

  Bit_Slice13_out1_4 <= Bit_Slice6_out1(4);

  Logical_Operator7_out1_3 <= Bit_Slice14_out1_3 OR Bit_Slice13_out1_4;

  Logical_Operator6_out1_3 <= Logical_Operator5_out1_3 OR Logical_Operator7_out1_3;

  Bit_Slice12_out1_4 <= Bit_Slice6_out1(3);

  Bit_Slice11_out1_4 <= Bit_Slice6_out1(2);

  Logical_Operator4_out1_4 <= Bit_Slice12_out1_4 OR Bit_Slice11_out1_4;

  Bit_Slice10_out1_4 <= Bit_Slice6_out1(1);

  Bit_Slice9_out1_5 <= Bit_Slice6_out1(0);

  Logical_Operator14_out1_4 <= Bit_Slice10_out1_4 OR Bit_Slice9_out1_5;

  Logical_Operator13_out1_4 <= Logical_Operator4_out1_4 OR Logical_Operator14_out1_4;

  Logical_Operator12_out1_4 <= Logical_Operator6_out1_3 OR Logical_Operator13_out1_4;

  Bit_Slice1_out1 <= if_Exponent_0_cfType_Exp_out1(15 DOWNTO 8);

  Bit_Slice16_out1_4 <= Bit_Slice1_out1(7);

  Bit_Slice15_out1_4 <= Bit_Slice1_out1(6);

  Logical_Operator5_out1_4 <= Bit_Slice16_out1_4 OR Bit_Slice15_out1_4;

  Bit_Slice14_out1_4 <= Bit_Slice1_out1(5);

  Bit_Slice13_out1_5 <= Bit_Slice1_out1(4);

  Logical_Operator7_out1_4 <= Bit_Slice14_out1_4 OR Bit_Slice13_out1_5;

  Logical_Operator6_out1_4 <= Logical_Operator5_out1_4 OR Logical_Operator7_out1_4;

  Bit_Slice12_out1_5 <= Bit_Slice1_out1(3);

  Bit_Slice11_out1_5 <= Bit_Slice1_out1(2);

  Logical_Operator4_out1_5 <= Bit_Slice12_out1_5 OR Bit_Slice11_out1_5;

  Bit_Slice10_out1_5 <= Bit_Slice1_out1(1);

  Bit_Slice9_out1_6 <= Bit_Slice1_out1(0);

  Logical_Operator14_out1_5 <= Bit_Slice10_out1_5 OR Bit_Slice9_out1_6;

  Logical_Operator13_out1_5 <= Logical_Operator4_out1_5 OR Logical_Operator14_out1_5;

  Bit_Slice4_out1 <= if_Exponent_0_cfType_Exp_out1(7 DOWNTO 0);

  Bit_Slice8_out1_1 <= Bit_Slice4_out1(7);

  Bit_Slice7_out1_1 <= Bit_Slice4_out1(6);

  Logical_Operator1_out1 <= Bit_Slice8_out1_1 OR Bit_Slice7_out1_1;

  Bit_Slice6_out1_1 <= Bit_Slice4_out1(5);

  Bit_Slice5_out1 <= Bit_Slice4_out1(4);

  Logical_Operator3_out1 <= Bit_Slice6_out1_1 OR Bit_Slice5_out1;

  Bit_Slice3_out1 <= Bit_Slice4_out1(3);

  Bit_Slice2_out1_1 <= Bit_Slice4_out1(2);

  Bit_Slice4_out1_1 <= Bit_Slice4_out1(0);

  Constant_out1 <= to_unsigned(16#00#, 6);

  Bit_Slice1_out1_1 <= Bit_Slice4_out1(1);

  Constant1_out1 <= to_unsigned(16#01#, 6);

  
  Switch2_out1 <= Constant_out1 WHEN Bit_Slice4_out1_1 = '0' ELSE
      Constant1_out1;

  Logical_Operator_out1 <= Bit_Slice3_out1 OR Bit_Slice2_out1_1;

  Constant2_out1 <= to_unsigned(16#02#, 6);

  
  Switch1_out1 <= Switch2_out1 WHEN Bit_Slice1_out1_1 = '0' ELSE
      Constant2_out1;

  Constant3_out1 <= to_unsigned(16#03#, 6);

  Constant4_out1 <= to_unsigned(16#04#, 6);

  Logical_Operator2_out1_1 <= Logical_Operator1_out1 OR Logical_Operator3_out1;

  
  Switch3_out1 <= Constant3_out1 WHEN Bit_Slice3_out1 = '0' ELSE
      Constant4_out1;

  
  Switch4_out1 <= Switch1_out1 WHEN Logical_Operator_out1 = '0' ELSE
      Switch3_out1;

  Constant5_out1 <= to_unsigned(16#05#, 6);

  Constant6_out1 <= to_unsigned(16#06#, 6);

  
  Switch6_out1 <= Constant5_out1 WHEN Bit_Slice6_out1_1 = '0' ELSE
      Constant6_out1;

  Constant7_out1 <= to_unsigned(16#07#, 6);

  Constant8_out1 <= to_unsigned(16#08#, 6);

  
  Switch8_out1 <= Constant7_out1 WHEN Bit_Slice8_out1_1 = '0' ELSE
      Constant8_out1;

  Logical_Operator12_out1_5 <= Logical_Operator6_out1_4 OR Logical_Operator13_out1_5;

  
  Switch9_out1 <= Switch6_out1 WHEN Logical_Operator1_out1 = '0' ELSE
      Switch8_out1;

  
  Switch10_out1 <= Switch4_out1 WHEN Logical_Operator2_out1_1 = '0' ELSE
      Switch9_out1;

  Constant9_out1 <= to_unsigned(16#09#, 6);

  Constant10_out1 <= to_unsigned(16#0A#, 6);

  
  Switch12_out1 <= Constant9_out1 WHEN Bit_Slice10_out1_5 = '0' ELSE
      Constant10_out1;

  Constant11_out1 <= to_unsigned(16#0B#, 6);

  Constant12_out1 <= to_unsigned(16#0C#, 6);

  
  Switch15_out1 <= Constant11_out1 WHEN Bit_Slice12_out1_5 = '0' ELSE
      Constant12_out1;

  
  Switch16_out1 <= Switch12_out1 WHEN Logical_Operator4_out1_5 = '0' ELSE
      Switch15_out1;

  Constant13_out1 <= to_unsigned(16#0D#, 6);

  Constant14_out1 <= to_unsigned(16#0E#, 6);

  
  Switch18_out1 <= Constant13_out1 WHEN Bit_Slice14_out1_4 = '0' ELSE
      Constant14_out1;

  Constant15_out1 <= to_unsigned(16#0F#, 6);

  Constant16_out1 <= to_unsigned(16#10#, 6);

  
  Switch20_out1 <= Constant15_out1 WHEN Bit_Slice16_out1_4 = '0' ELSE
      Constant16_out1;

  
  Switch21_out1 <= Switch18_out1 WHEN Logical_Operator5_out1_4 = '0' ELSE
      Switch20_out1;

  Logical_Operator_out1_1 <= Logical_Operator12_out1_3 OR Logical_Operator12_out1_4;

  
  Switch13_out1 <= Switch16_out1 WHEN Logical_Operator6_out1_4 = '0' ELSE
      Switch21_out1;

  
  Switch_out1 <= Switch10_out1 WHEN Logical_Operator12_out1_5 = '0' ELSE
      Switch13_out1;

  Constant9_out1_1 <= to_unsigned(16#11#, 6);

  Constant10_out1_1 <= to_unsigned(16#12#, 6);

  
  Switch12_out1_1 <= Constant9_out1_1 WHEN Bit_Slice10_out1_4 = '0' ELSE
      Constant10_out1_1;

  Constant11_out1_1 <= to_unsigned(16#13#, 6);

  Constant12_out1_1 <= to_unsigned(16#14#, 6);

  
  Switch15_out1_1 <= Constant11_out1_1 WHEN Bit_Slice12_out1_4 = '0' ELSE
      Constant12_out1_1;

  
  Switch16_out1_1 <= Switch12_out1_1 WHEN Logical_Operator4_out1_4 = '0' ELSE
      Switch15_out1_1;

  Constant13_out1_1 <= to_unsigned(16#15#, 6);

  Constant14_out1_1 <= to_unsigned(16#16#, 6);

  
  Switch18_out1_1 <= Constant13_out1_1 WHEN Bit_Slice14_out1_3 = '0' ELSE
      Constant14_out1_1;

  Constant15_out1_1 <= to_unsigned(16#17#, 6);

  Constant16_out1_1 <= to_unsigned(16#18#, 6);

  
  Switch20_out1_1 <= Constant15_out1_1 WHEN Bit_Slice16_out1_3 = '0' ELSE
      Constant16_out1_1;

  
  Switch21_out1_1 <= Switch18_out1_1 WHEN Logical_Operator5_out1_3 = '0' ELSE
      Switch20_out1_1;

  
  Switch13_out1_1 <= Switch16_out1_1 WHEN Logical_Operator6_out1_3 = '0' ELSE
      Switch21_out1_1;

  Constant9_out1_2 <= to_unsigned(16#19#, 6);

  Constant10_out1_2 <= to_unsigned(16#1A#, 6);

  
  Switch12_out1_2 <= Constant9_out1_2 WHEN Bit_Slice10_out1_3 = '0' ELSE
      Constant10_out1_2;

  Constant11_out1_2 <= to_unsigned(16#1B#, 6);

  Constant12_out1_2 <= to_unsigned(16#1C#, 6);

  
  Switch15_out1_2 <= Constant11_out1_2 WHEN Bit_Slice12_out1_3 = '0' ELSE
      Constant12_out1_2;

  
  Switch16_out1_2 <= Switch12_out1_2 WHEN Logical_Operator4_out1_3 = '0' ELSE
      Switch15_out1_2;

  Constant13_out1_2 <= to_unsigned(16#1D#, 6);

  Constant14_out1_2 <= to_unsigned(16#1E#, 6);

  
  Switch18_out1_2 <= Constant13_out1_2 WHEN Bit_Slice14_out1_2 = '0' ELSE
      Constant14_out1_2;

  Constant15_out1_2 <= to_unsigned(16#1F#, 6);

  Constant16_out1_2 <= to_unsigned(16#20#, 6);

  
  Switch20_out1_2 <= Constant15_out1_2 WHEN Bit_Slice16_out1_2 = '0' ELSE
      Constant16_out1_2;

  
  Switch21_out1_2 <= Switch18_out1_2 WHEN Logical_Operator5_out1_2 = '0' ELSE
      Switch20_out1_2;

  
  Switch13_out1_2 <= Switch16_out1_2 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Switch21_out1_2;

  Logical_Operator3_out1_1 <= Logical_Operator12_out1 OR Logical_Operator2_out1;

  
  Switch2_out1_1 <= Switch13_out1_1 WHEN Logical_Operator12_out1_3 = '0' ELSE
      Switch13_out1_2;

  
  Switch1_out1_1 <= Switch_out1 WHEN Logical_Operator_out1_1 = '0' ELSE
      Switch2_out1_1;

  Constant9_out1_3 <= to_unsigned(16#21#, 6);

  Constant10_out1_3 <= to_unsigned(16#22#, 6);

  
  Switch12_out1_3 <= Constant9_out1_3 WHEN Bit_Slice10_out1_2 = '0' ELSE
      Constant10_out1_3;

  Constant11_out1_3 <= to_unsigned(16#23#, 6);

  Constant12_out1_3 <= to_unsigned(16#24#, 6);

  
  Switch15_out1_3 <= Constant11_out1_3 WHEN Bit_Slice12_out1_2 = '0' ELSE
      Constant12_out1_3;

  
  Switch16_out1_3 <= Switch12_out1_3 WHEN Logical_Operator4_out1_2 = '0' ELSE
      Switch15_out1_3;

  Constant13_out1_3 <= to_unsigned(16#25#, 6);

  Constant14_out1_3 <= to_unsigned(16#26#, 6);

  
  Switch18_out1_3 <= Constant13_out1_3 WHEN Bit_Slice14_out1_1 = '0' ELSE
      Constant14_out1_3;

  Constant15_out1_3 <= to_unsigned(16#27#, 6);

  Constant16_out1_3 <= to_unsigned(16#28#, 6);

  
  Switch20_out1_3 <= Constant15_out1_3 WHEN Bit_Slice16_out1_1 = '0' ELSE
      Constant16_out1_3;

  
  Switch21_out1_3 <= Switch18_out1_3 WHEN Logical_Operator5_out1_1 = '0' ELSE
      Switch20_out1_3;

  
  Switch13_out1_3 <= Switch16_out1_3 WHEN Logical_Operator6_out1_1 = '0' ELSE
      Switch21_out1_3;

  Constant9_out1_4 <= to_unsigned(16#29#, 6);

  Constant10_out1_4 <= to_unsigned(16#2A#, 6);

  
  Switch12_out1_4 <= Constant9_out1_4 WHEN Bit_Slice10_out1_1 = '0' ELSE
      Constant10_out1_4;

  Constant11_out1_4 <= to_unsigned(16#2B#, 6);

  Constant12_out1_4 <= to_unsigned(16#2C#, 6);

  
  Switch15_out1_4 <= Constant11_out1_4 WHEN Bit_Slice12_out1_1 = '0' ELSE
      Constant12_out1_4;

  
  Switch16_out1_4 <= Switch12_out1_4 WHEN Logical_Operator4_out1_1 = '0' ELSE
      Switch15_out1_4;

  Constant13_out1_4 <= to_unsigned(16#2D#, 6);

  Constant14_out1_4 <= to_unsigned(16#2E#, 6);

  
  Switch18_out1_4 <= Constant13_out1_4 WHEN Bit_Slice14_out1 = '0' ELSE
      Constant14_out1_4;

  Constant15_out1_4 <= to_unsigned(16#2F#, 6);

  Constant16_out1_4 <= to_unsigned(16#30#, 6);

  
  Switch20_out1_4 <= Constant15_out1_4 WHEN Bit_Slice16_out1 = '0' ELSE
      Constant16_out1_4;

  
  Switch21_out1_4 <= Switch18_out1_4 WHEN Logical_Operator5_out1 = '0' ELSE
      Switch20_out1_4;

  
  Switch13_out1_4 <= Switch16_out1_4 WHEN Logical_Operator6_out1 = '0' ELSE
      Switch21_out1_4;

  
  Switch3_out1_1 <= Switch13_out1_3 WHEN Logical_Operator12_out1_1 = '0' ELSE
      Switch13_out1_4;

  Constant9_out1_5 <= to_unsigned(16#31#, 6);

  Constant10_out1_5 <= to_unsigned(16#32#, 6);

  
  Switch12_out1_5 <= Constant9_out1_5 WHEN Bit_Slice10_out1 = '0' ELSE
      Constant10_out1_5;

  Constant11_out1_5 <= to_unsigned(16#33#, 6);

  Constant12_out1_5 <= to_unsigned(16#34#, 6);

  
  Switch15_out1_5 <= Constant11_out1_5 WHEN Bit_Slice12_out1 = '0' ELSE
      Constant12_out1_5;

  
  Switch16_out1_5 <= Switch12_out1_5 WHEN Logical_Operator4_out1 = '0' ELSE
      Switch15_out1_5;

  Constant13_out1_5 <= to_unsigned(16#35#, 6);

  
  Switch13_out1_5 <= Switch16_out1_5 WHEN Bit_Slice13_out1 = '0' ELSE
      Constant13_out1_5;

  uint8_MantAppended_x_WordLengt_out1 <= to_unsigned(16#35#, 6);

  
  Switch5_out1 <= Switch3_out1_1 WHEN Logical_Operator12_out1 = '0' ELSE
      Switch13_out1_5;

  
  Switch6_out1_1 <= Switch1_out1_1 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch5_out1;

  uint8_MantAppended_x_WordLengt_sub_cast <= signed(resize(uint8_MantAppended_x_WordLengt_out1, 7));
  uint8_MantAppended_x_WordLengt_sub_cast_1 <= signed(resize(Switch6_out1_1, 7));
  uint8_MantAppended_x_WordLengt_sub_temp <= uint8_MantAppended_x_WordLengt_sub_cast - uint8_MantAppended_x_WordLengt_sub_cast_1;
  uint8_MantAppended_x_WordLengt_out1_1 <= unsigned(uint8_MantAppended_x_WordLengt_sub_temp(5 DOWNTO 0));

  e_int32_shift_length_sub_cast <= signed(resize(uint8_MantAppended_x_WordLengt_out1_1, 12));
  e_int32_shift_length_out1 <= int32_storedInteger_ExpCorrect_out1 - e_int32_shift_length_sub_cast;

  
  e_int32_255_out1 <= '1' WHEN e_int32_shift_length_out1 >= to_signed(16#0FF#, 12) ELSE
      '0';

  
  e_cfType_MantissaLength_out1 <= '1' WHEN e_int32_shift_length_out1 > to_signed(-16#019#, 12) ELSE
      '0';

  C7_out1 <= to_unsigned(16#00#, 8);

  alpha0_out1_1 <= '0';

  
  e_0_out1 <= '1' WHEN e_int32_shift_length_out1 > to_signed(16#000#, 12) ELSE
      '0';

  bitsll_MantAppended_x_shift_l_out1 <= if_Exponent_0_cfType_Exp_out1 sll to_integer(uint8_MantAppended_x_WordLengt_out1_1);

  C1_out1 <= to_signed(16#001#, 12);

  alpha1_e_out1 <= C1_out1 - e_int32_shift_length_out1;

  Data_Type_Conversion_out1 <= unsigned(alpha1_e_out1(5 DOWNTO 0));

  bitsrl_MantExtended_x_shift_l_out1 <= SHIFT_RIGHT(bitsll_MantAppended_x_shift_l_out1, to_integer(Data_Type_Conversion_out1));

  
  if_e_0_MantExtended_x_out1 <= bitsrl_MantExtended_x_shift_l_out1 WHEN e_0_out1 = '0' ELSE
      bitsll_MantAppended_x_shift_l_out1;

  BitSlice1_out1 <= if_e_0_MantExtended_x_out1(51 DOWNTO 28);

  Bit_Concat_out1_1 <= alpha0_out1_1 & BitSlice1_out1;

  
  shift_length1_0_out1 <= '1' WHEN alpha1_e_out1 > to_signed(16#000#, 12) ELSE
      '0';

  Bit_Slice33_out1 <= bitsll_MantAppended_x_shift_l_out1(52);

  Logical_Operator11_out1 <= Bit_Slice33_out1 OR Bit_Slice33_out1;

  C2_out1 <= to_unsigned(16#035#, 12);

  MantExtended_x_WordLength_sub_cast <= signed(resize(C2_out1, 14));
  MantExtended_x_WordLength_sub_temp <= MantExtended_x_WordLength_sub_cast - resize(alpha1_e_out1, 14);
  MantExtended_x_WordLength_out1 <= unsigned(MantExtended_x_WordLength_sub_temp(5 DOWNTO 0));

  Bit_Slice1_out1_2 <= MantExtended_x_WordLength_out1(2);

  Logical_Operator2_out1_2 <= Logical_Operator11_out1 AND Bit_Slice1_out1_2;

  Logical_Operator1_out1_1 <= Logical_Operator2_out1_2 OR Logical_Operator11_out1;

  Bit_Slice3_out1_1 <= MantExtended_x_WordLength_out1(3);

  Bit_Slice5_out1_1 <= MantExtended_x_WordLength_out1(0);

  Logical_Operator2_out1_3 <= Logical_Operator11_out1 AND Bit_Slice5_out1_1;

  Logical_Operator1_out1_2 <= Logical_Operator2_out1_3 OR Bit_Slice33_out1;

  Bit_Slice2_out1_2 <= MantExtended_x_WordLength_out1(1);

  Logical_Operator7_out1_5 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_2 <= Bit_Slice33_out1 AND Logical_Operator7_out1_5;

  Bit_Slice32_out1 <= bitsll_MantAppended_x_shift_l_out1(51 DOWNTO 48);

  Bit_Reduce12_out1 <= (Bit_Slice32_out1(3) OR Bit_Slice32_out1(2) OR Bit_Slice32_out1(1) OR Bit_Slice32_out1(0));

  Bit_Slice30_out1 <= bitsll_MantAppended_x_shift_l_out1(47 DOWNTO 44);

  Bit_Reduce11_out1 <= (Bit_Slice30_out1(3) OR Bit_Slice30_out1(2) OR Bit_Slice30_out1(1) OR Bit_Slice30_out1(0));

  Bit_Slice24_out1 <= bitsll_MantAppended_x_shift_l_out1(43 DOWNTO 40);

  Bit_Reduce10_out1 <= (Bit_Slice24_out1(3) OR Bit_Slice24_out1(2) OR Bit_Slice24_out1(1) OR Bit_Slice24_out1(0));

  Bit_Slice28_out1 <= bitsll_MantAppended_x_shift_l_out1(39 DOWNTO 36);

  Bit_Reduce9_out1 <= (Bit_Slice28_out1(3) OR Bit_Slice28_out1(2) OR Bit_Slice28_out1(1) OR Bit_Slice28_out1(0));

  Bit_Slice22_out1 <= bitsll_MantAppended_x_shift_l_out1(35 DOWNTO 32);

  Bit_Reduce8_out1 <= (Bit_Slice22_out1(3) OR Bit_Slice22_out1(2) OR Bit_Slice22_out1(1) OR Bit_Slice22_out1(0));

  Bit_Slice20_out1 <= bitsll_MantAppended_x_shift_l_out1(31 DOWNTO 28);

  Bit_Reduce7_out1 <= (Bit_Slice20_out1(3) OR Bit_Slice20_out1(2) OR Bit_Slice20_out1(1) OR Bit_Slice20_out1(0));

  Bit_Slice16_out1_5 <= bitsll_MantAppended_x_shift_l_out1(27 DOWNTO 24);

  Bit_Reduce6_out1 <= (Bit_Slice16_out1_5(3) OR Bit_Slice16_out1_5(2) OR Bit_Slice16_out1_5(1) OR Bit_Slice16_out1_5(0));

  Bit_Slice14_out1_5 <= bitsll_MantAppended_x_shift_l_out1(23 DOWNTO 20);

  Bit_Reduce5_out1 <= (Bit_Slice14_out1_5(3) OR Bit_Slice14_out1_5(2) OR Bit_Slice14_out1_5(1) OR Bit_Slice14_out1_5(0));

  Bit_Slice18_out1 <= bitsll_MantAppended_x_shift_l_out1(19 DOWNTO 16);

  Bit_Reduce4_out1 <= (Bit_Slice18_out1(3) OR Bit_Slice18_out1(2) OR Bit_Slice18_out1(1) OR Bit_Slice18_out1(0));

  Bit_Slice12_out1_6 <= bitsll_MantAppended_x_shift_l_out1(15 DOWNTO 12);

  Bit_Reduce3_out1 <= (Bit_Slice12_out1_6(3) OR Bit_Slice12_out1_6(2) OR Bit_Slice12_out1_6(1) OR Bit_Slice12_out1_6(0));

  Bit_Slice10_out1_6 <= bitsll_MantAppended_x_shift_l_out1(11 DOWNTO 8);

  Bit_Reduce2_out1 <= (Bit_Slice10_out1_6(3) OR Bit_Slice10_out1_6(2) OR Bit_Slice10_out1_6(1) OR Bit_Slice10_out1_6(0));

  Bit_Slice8_out1_2 <= bitsll_MantAppended_x_shift_l_out1(7 DOWNTO 4);

  Bit_Reduce1_out1 <= (Bit_Slice8_out1_2(3) OR Bit_Slice8_out1_2(2) OR Bit_Slice8_out1_2(1) OR Bit_Slice8_out1_2(0));

  Bit_Slice6_out1_2 <= bitsll_MantAppended_x_shift_l_out1(3 DOWNTO 0);

  Bit_Reduce_out1 <= (Bit_Slice6_out1_2(3) OR Bit_Slice6_out1_2(2) OR Bit_Slice6_out1_2(1) OR Bit_Slice6_out1_2(0));

  Logical_Operator1_out1_3 <= Bit_Reduce1_out1 OR Bit_Reduce_out1;

  Logical_Operator2_out1_4 <= Bit_Reduce2_out1 OR Logical_Operator1_out1_3;

  Logical_Operator3_out1_3 <= Bit_Reduce3_out1 OR Logical_Operator2_out1_4;

  Logical_Operator4_out1_6 <= Bit_Reduce4_out1 OR Logical_Operator3_out1_3;

  Logical_Operator5_out1_5 <= Bit_Reduce5_out1 OR Logical_Operator4_out1_6;

  Logical_Operator6_out1_5 <= Bit_Reduce6_out1 OR Logical_Operator5_out1_5;

  Logical_Operator7_out1_6 <= Bit_Reduce7_out1 OR Logical_Operator6_out1_5;

  Logical_Operator8_out1 <= Bit_Reduce8_out1 OR Logical_Operator7_out1_6;

  Logical_Operator9_out1 <= Bit_Reduce9_out1 OR Logical_Operator8_out1;

  Logical_Operator10_out1 <= Bit_Reduce10_out1 OR Logical_Operator9_out1;

  Logical_Operator12_out1_6 <= Bit_Reduce11_out1 OR Logical_Operator10_out1;

  Logical_Operator4_out1_7 <= Logical_Operator1_out1_2 AND Bit_Slice2_out1_2;

  Logical_Operator13_out1_6 <= Bit_Reduce12_out1 OR Logical_Operator12_out1_6;

  Logical_Operator6_out1_6 <= Logical_Operator3_out1_2 OR Logical_Operator13_out1_6;

  Logical_Operator5_out1_6 <= Logical_Operator4_out1_7 OR Logical_Operator6_out1_6;

  Bit_Slice31_out1 <= bitsll_MantAppended_x_shift_l_out1(50 DOWNTO 48);

  Bit_Slice2_out1_3 <= Bit_Slice31_out1(2);

  Logical_Operator2_out1_5 <= Bit_Slice2_out1_3 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_3 <= Bit_Slice31_out1(1);

  Logical_Operator1_out1_4 <= Logical_Operator2_out1_5 OR Bit_Slice1_out1_3;

  Logical_Operator4_out1_8 <= Logical_Operator1_out1_4 AND Bit_Slice2_out1_2;

  Bit_Slice_out1 <= Bit_Slice31_out1(0);

  Logical_Operator7_out1_7 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_4 <= Bit_Slice_out1 AND Logical_Operator7_out1_7;

  Logical_Operator4_out1_9 <= Logical_Operator1_out1_1 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_5 <= Logical_Operator5_out1_6 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_7 <= Logical_Operator3_out1_4 OR Logical_Operator12_out1_6;

  Logical_Operator5_out1_7 <= Logical_Operator4_out1_8 OR Logical_Operator6_out1_7;

  Logical_Operator6_out1_8 <= Logical_Operator3_out1_5 OR Logical_Operator5_out1_7;

  Logical_Operator5_out1_8 <= Logical_Operator4_out1_9 OR Logical_Operator6_out1_8;

  Bit_Slice4_out1_2 <= MantExtended_x_WordLength_out1(4);

  Bit_Slice25_out1 <= bitsll_MantAppended_x_shift_l_out1(46 DOWNTO 44);

  Bit_Slice2_out1_4 <= Bit_Slice25_out1(2);

  Logical_Operator2_out1_6 <= Bit_Slice2_out1_4 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_4 <= Bit_Slice25_out1(1);

  Logical_Operator1_out1_5 <= Logical_Operator2_out1_6 OR Bit_Slice1_out1_4;

  Logical_Operator4_out1_10 <= Logical_Operator1_out1_5 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_1 <= Bit_Slice25_out1(0);

  Logical_Operator7_out1_8 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_6 <= Bit_Slice_out1_1 AND Logical_Operator7_out1_8;

  Logical_Operator6_out1_9 <= Logical_Operator3_out1_6 OR Logical_Operator10_out1;

  Logical_Operator5_out1_9 <= Logical_Operator4_out1_10 OR Logical_Operator6_out1_9;

  Bit_Slice29_out1 <= bitsll_MantAppended_x_shift_l_out1(42 DOWNTO 40);

  Bit_Slice2_out1_5 <= Bit_Slice29_out1(2);

  Logical_Operator2_out1_7 <= Bit_Slice2_out1_5 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_5 <= Bit_Slice29_out1(1);

  Logical_Operator1_out1_6 <= Logical_Operator2_out1_7 OR Bit_Slice1_out1_5;

  Logical_Operator4_out1_11 <= Logical_Operator1_out1_6 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_2 <= Bit_Slice29_out1(0);

  Logical_Operator7_out1_9 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_7 <= Bit_Slice_out1_2 AND Logical_Operator7_out1_9;

  Logical_Operator2_out1_8 <= Logical_Operator5_out1_9 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_10 <= Logical_Operator3_out1_7 OR Logical_Operator9_out1;

  Logical_Operator5_out1_10 <= Logical_Operator4_out1_11 OR Logical_Operator6_out1_10;

  Logical_Operator1_out1_7 <= Logical_Operator2_out1_8 OR Logical_Operator5_out1_10;

  Bit_Slice23_out1 <= bitsll_MantAppended_x_shift_l_out1(38 DOWNTO 36);

  Bit_Slice2_out1_6 <= Bit_Slice23_out1(2);

  Logical_Operator2_out1_9 <= Bit_Slice2_out1_6 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_6 <= Bit_Slice23_out1(1);

  Logical_Operator1_out1_8 <= Logical_Operator2_out1_9 OR Bit_Slice1_out1_6;

  Logical_Operator4_out1_12 <= Logical_Operator1_out1_8 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_3 <= Bit_Slice23_out1(0);

  Logical_Operator7_out1_10 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_8 <= Bit_Slice_out1_3 AND Logical_Operator7_out1_10;

  Logical_Operator6_out1_11 <= Logical_Operator3_out1_8 OR Logical_Operator8_out1;

  Logical_Operator5_out1_11 <= Logical_Operator4_out1_12 OR Logical_Operator6_out1_11;

  Bit_Slice21_out1 <= bitsll_MantAppended_x_shift_l_out1(34 DOWNTO 32);

  Bit_Slice2_out1_7 <= Bit_Slice21_out1(2);

  Logical_Operator2_out1_10 <= Bit_Slice2_out1_7 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_7 <= Bit_Slice21_out1(1);

  Logical_Operator1_out1_9 <= Logical_Operator2_out1_10 OR Bit_Slice1_out1_7;

  Logical_Operator4_out1_13 <= Logical_Operator1_out1_9 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_4 <= Bit_Slice21_out1(0);

  Logical_Operator7_out1_11 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_9 <= Bit_Slice_out1_4 AND Logical_Operator7_out1_11;

  Logical_Operator2_out1_11 <= Logical_Operator5_out1_8 AND Bit_Slice4_out1_2;

  Logical_Operator4_out1_14 <= Logical_Operator1_out1_7 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_10 <= Logical_Operator5_out1_11 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_12 <= Logical_Operator3_out1_9 OR Logical_Operator7_out1_6;

  Logical_Operator5_out1_12 <= Logical_Operator4_out1_13 OR Logical_Operator6_out1_12;

  Logical_Operator6_out1_13 <= Logical_Operator3_out1_10 OR Logical_Operator5_out1_12;

  Logical_Operator5_out1_13 <= Logical_Operator4_out1_14 OR Logical_Operator6_out1_13;

  Logical_Operator1_out1_10 <= Logical_Operator2_out1_11 OR Logical_Operator5_out1_13;

  Bit_Slice17_out1 <= bitsll_MantAppended_x_shift_l_out1(30 DOWNTO 28);

  Bit_Slice2_out1_8 <= Bit_Slice17_out1(2);

  Logical_Operator2_out1_12 <= Bit_Slice2_out1_8 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_8 <= Bit_Slice17_out1(1);

  Logical_Operator1_out1_11 <= Logical_Operator2_out1_12 OR Bit_Slice1_out1_8;

  Logical_Operator4_out1_15 <= Logical_Operator1_out1_11 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_5 <= Bit_Slice17_out1(0);

  Logical_Operator7_out1_12 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_11 <= Bit_Slice_out1_5 AND Logical_Operator7_out1_12;

  Logical_Operator6_out1_14 <= Logical_Operator3_out1_11 OR Logical_Operator6_out1_5;

  Logical_Operator5_out1_14 <= Logical_Operator4_out1_15 OR Logical_Operator6_out1_14;

  Bit_Slice15_out1_5 <= bitsll_MantAppended_x_shift_l_out1(26 DOWNTO 24);

  Bit_Slice2_out1_9 <= Bit_Slice15_out1_5(2);

  Logical_Operator2_out1_13 <= Bit_Slice2_out1_9 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_9 <= Bit_Slice15_out1_5(1);

  Logical_Operator1_out1_12 <= Logical_Operator2_out1_13 OR Bit_Slice1_out1_9;

  Logical_Operator4_out1_16 <= Logical_Operator1_out1_12 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_6 <= Bit_Slice15_out1_5(0);

  Logical_Operator7_out1_13 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_12 <= Bit_Slice_out1_6 AND Logical_Operator7_out1_13;

  Logical_Operator2_out1_14 <= Logical_Operator5_out1_14 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_15 <= Logical_Operator3_out1_12 OR Logical_Operator5_out1_5;

  Logical_Operator5_out1_15 <= Logical_Operator4_out1_16 OR Logical_Operator6_out1_15;

  Logical_Operator1_out1_13 <= Logical_Operator2_out1_14 OR Logical_Operator5_out1_15;

  Bit_Slice19_out1 <= bitsll_MantAppended_x_shift_l_out1(22 DOWNTO 20);

  Bit_Slice2_out1_10 <= Bit_Slice19_out1(2);

  Logical_Operator2_out1_15 <= Bit_Slice2_out1_10 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_10 <= Bit_Slice19_out1(1);

  Logical_Operator1_out1_14 <= Logical_Operator2_out1_15 OR Bit_Slice1_out1_10;

  Logical_Operator4_out1_17 <= Logical_Operator1_out1_14 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_7 <= Bit_Slice19_out1(0);

  Logical_Operator7_out1_14 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_13 <= Bit_Slice_out1_7 AND Logical_Operator7_out1_14;

  Logical_Operator6_out1_16 <= Logical_Operator3_out1_13 OR Logical_Operator4_out1_6;

  Logical_Operator5_out1_16 <= Logical_Operator4_out1_17 OR Logical_Operator6_out1_16;

  Bit_Slice13_out1_6 <= bitsll_MantAppended_x_shift_l_out1(18 DOWNTO 16);

  Bit_Slice2_out1_11 <= Bit_Slice13_out1_6(2);

  Logical_Operator2_out1_16 <= Bit_Slice2_out1_11 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_11 <= Bit_Slice13_out1_6(1);

  Logical_Operator1_out1_15 <= Logical_Operator2_out1_16 OR Bit_Slice1_out1_11;

  Logical_Operator4_out1_18 <= Logical_Operator1_out1_15 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_8 <= Bit_Slice13_out1_6(0);

  Logical_Operator7_out1_15 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_14 <= Bit_Slice_out1_8 AND Logical_Operator7_out1_15;

  Logical_Operator4_out1_19 <= Logical_Operator1_out1_13 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_15 <= Logical_Operator5_out1_16 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_17 <= Logical_Operator3_out1_14 OR Logical_Operator3_out1_3;

  Logical_Operator5_out1_17 <= Logical_Operator4_out1_18 OR Logical_Operator6_out1_17;

  Logical_Operator6_out1_18 <= Logical_Operator3_out1_15 OR Logical_Operator5_out1_17;

  Logical_Operator5_out1_18 <= Logical_Operator4_out1_19 OR Logical_Operator6_out1_18;

  Bit_Slice11_out1_6 <= bitsll_MantAppended_x_shift_l_out1(14 DOWNTO 12);

  Bit_Slice2_out1_12 <= Bit_Slice11_out1_6(2);

  Logical_Operator2_out1_17 <= Bit_Slice2_out1_12 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_12 <= Bit_Slice11_out1_6(1);

  Logical_Operator1_out1_16 <= Logical_Operator2_out1_17 OR Bit_Slice1_out1_12;

  Logical_Operator4_out1_20 <= Logical_Operator1_out1_16 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_9 <= Bit_Slice11_out1_6(0);

  Logical_Operator7_out1_16 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_16 <= Bit_Slice_out1_9 AND Logical_Operator7_out1_16;

  Logical_Operator6_out1_19 <= Logical_Operator3_out1_16 OR Logical_Operator2_out1_4;

  Logical_Operator5_out1_19 <= Logical_Operator4_out1_20 OR Logical_Operator6_out1_19;

  Bit_Slice9_out1_7 <= bitsll_MantAppended_x_shift_l_out1(10 DOWNTO 8);

  Bit_Slice2_out1_13 <= Bit_Slice9_out1_7(2);

  Logical_Operator2_out1_18 <= Bit_Slice2_out1_13 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_13 <= Bit_Slice9_out1_7(1);

  Logical_Operator1_out1_17 <= Logical_Operator2_out1_18 OR Bit_Slice1_out1_13;

  Logical_Operator4_out1_21 <= Logical_Operator1_out1_17 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_10 <= Bit_Slice9_out1_7(0);

  Logical_Operator7_out1_17 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_17 <= Bit_Slice_out1_10 AND Logical_Operator7_out1_17;

  Logical_Operator2_out1_19 <= Logical_Operator5_out1_19 AND Bit_Slice1_out1_2;

  Logical_Operator6_out1_20 <= Logical_Operator3_out1_17 OR Logical_Operator1_out1_3;

  Logical_Operator5_out1_20 <= Logical_Operator4_out1_21 OR Logical_Operator6_out1_20;

  Logical_Operator1_out1_18 <= Logical_Operator2_out1_19 OR Logical_Operator5_out1_20;

  Bit_Slice7_out1_2 <= bitsll_MantAppended_x_shift_l_out1(6 DOWNTO 4);

  Bit_Slice2_out1_14 <= Bit_Slice7_out1_2(2);

  Logical_Operator2_out1_20 <= Bit_Slice2_out1_14 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_14 <= Bit_Slice7_out1_2(1);

  Logical_Operator1_out1_19 <= Logical_Operator2_out1_20 OR Bit_Slice1_out1_14;

  Logical_Operator4_out1_22 <= Logical_Operator1_out1_19 AND Bit_Slice2_out1_2;

  Bit_Slice_out1_11 <= Bit_Slice7_out1_2(0);

  Logical_Operator7_out1_18 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_18 <= Bit_Slice_out1_11 AND Logical_Operator7_out1_18;

  Logical_Operator6_out1_21 <= Logical_Operator3_out1_18 OR Bit_Reduce_out1;

  Logical_Operator5_out1_21 <= Logical_Operator4_out1_22 OR Logical_Operator6_out1_21;

  Bit_Slice_out1_12 <= bitsll_MantAppended_x_shift_l_out1(2 DOWNTO 0);

  Bit_Slice2_out1_15 <= Bit_Slice_out1_12(2);

  Logical_Operator2_out1_21 <= Bit_Slice2_out1_15 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_15 <= Bit_Slice_out1_12(1);

  Logical_Operator1_out1_20 <= Logical_Operator2_out1_21 OR Bit_Slice1_out1_15;

  Bit_Slice_out1_13 <= Bit_Slice_out1_12(0);

  Logical_Operator7_out1_19 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_2;

  Logical_Operator3_out1_19 <= Bit_Slice_out1_13 AND Logical_Operator7_out1_19;

  
  shift_length_MantExtended_x_out1 <= '1' WHEN uint8_MantAppended_x_WordLengt_out1_1 = to_unsigned(16#35#, 6) ELSE
      '0';

  Bit_Slice27_out1 <= MantExtended_x_WordLength_out1(5);

  Logical_Operator4_out1_23 <= Logical_Operator1_out1_10 AND Bit_Slice27_out1;

  Logical_Operator3_out1_20 <= Logical_Operator5_out1_18 AND Bit_Slice4_out1_2;

  Logical_Operator4_out1_24 <= Logical_Operator1_out1_18 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_21 <= Logical_Operator5_out1_21 AND Bit_Slice1_out1_2;

  Logical_Operator4_out1_25 <= Logical_Operator1_out1_20 AND Bit_Slice2_out1_2;

  Constant_out1_1 <= '0';

  Logical_Operator6_out1_22 <= Logical_Operator3_out1_19 OR Constant_out1_1;

  Logical_Operator5_out1_22 <= Logical_Operator4_out1_25 OR Logical_Operator6_out1_22;

  Logical_Operator6_out1_23 <= Logical_Operator3_out1_21 OR Logical_Operator5_out1_22;

  Logical_Operator5_out1_23 <= Logical_Operator4_out1_24 OR Logical_Operator6_out1_23;

  Logical_Operator6_out1_24 <= Logical_Operator3_out1_20 OR Logical_Operator5_out1_23;

  Logical_Operator5_out1_24 <= Logical_Operator4_out1_23 OR Logical_Operator6_out1_24;

  C4_out1 <= '0';

  C3_out1 <= '1';

  
  if_shift_length_MantExtended_out1 <= Logical_Operator5_out1_24 WHEN shift_length_MantExtended_x_out1 = '0' ELSE
      C3_out1;

  
  if_shift_length1_0_out1 <= C4_out1 WHEN shift_length1_0_out1 = '0' ELSE
      if_shift_length_MantExtended_out1;

  C6_out1 <= '0';

  Bit_Slice33_out1_1 <= if_e_0_MantExtended_x_out1(52);

  Logical_Operator11_out1_1 <= Bit_Slice33_out1_1 OR Bit_Slice33_out1_1;

  Constant_out1_2 <= to_unsigned(16#19#, 6);

  Bit_Slice1_out1_16 <= Constant_out1_2(2);

  Logical_Operator2_out1_22 <= Logical_Operator11_out1_1 AND Bit_Slice1_out1_16;

  Logical_Operator1_out1_21 <= Logical_Operator2_out1_22 OR Logical_Operator11_out1_1;

  Bit_Slice3_out1_2 <= Constant_out1_2(3);

  Bit_Slice5_out1_2 <= Constant_out1_2(0);

  Logical_Operator2_out1_23 <= Logical_Operator11_out1_1 AND Bit_Slice5_out1_2;

  Logical_Operator1_out1_22 <= Logical_Operator2_out1_23 OR Bit_Slice33_out1_1;

  Bit_Slice2_out1_16 <= Constant_out1_2(1);

  Logical_Operator7_out1_20 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_22 <= Bit_Slice33_out1_1 AND Logical_Operator7_out1_20;

  Bit_Slice32_out1_1 <= if_e_0_MantExtended_x_out1(51 DOWNTO 48);

  Bit_Reduce12_out1_1 <= (Bit_Slice32_out1_1(3) OR Bit_Slice32_out1_1(2) OR Bit_Slice32_out1_1(1) OR Bit_Slice32_out1_1(0));

  Bit_Slice30_out1_1 <= if_e_0_MantExtended_x_out1(47 DOWNTO 44);

  Bit_Reduce11_out1_1 <= (Bit_Slice30_out1_1(3) OR Bit_Slice30_out1_1(2) OR Bit_Slice30_out1_1(1) OR Bit_Slice30_out1_1(0));

  Bit_Slice24_out1_1 <= if_e_0_MantExtended_x_out1(43 DOWNTO 40);

  Bit_Reduce10_out1_1 <= (Bit_Slice24_out1_1(3) OR Bit_Slice24_out1_1(2) OR Bit_Slice24_out1_1(1) OR Bit_Slice24_out1_1(0));

  Bit_Slice28_out1_1 <= if_e_0_MantExtended_x_out1(39 DOWNTO 36);

  Bit_Reduce9_out1_1 <= (Bit_Slice28_out1_1(3) OR Bit_Slice28_out1_1(2) OR Bit_Slice28_out1_1(1) OR Bit_Slice28_out1_1(0));

  Bit_Slice22_out1_1 <= if_e_0_MantExtended_x_out1(35 DOWNTO 32);

  Bit_Reduce8_out1_1 <= (Bit_Slice22_out1_1(3) OR Bit_Slice22_out1_1(2) OR Bit_Slice22_out1_1(1) OR Bit_Slice22_out1_1(0));

  Bit_Slice20_out1_1 <= if_e_0_MantExtended_x_out1(31 DOWNTO 28);

  Bit_Reduce7_out1_1 <= (Bit_Slice20_out1_1(3) OR Bit_Slice20_out1_1(2) OR Bit_Slice20_out1_1(1) OR Bit_Slice20_out1_1(0));

  Bit_Slice16_out1_6 <= if_e_0_MantExtended_x_out1(27 DOWNTO 24);

  Bit_Reduce6_out1_1 <= (Bit_Slice16_out1_6(3) OR Bit_Slice16_out1_6(2) OR Bit_Slice16_out1_6(1) OR Bit_Slice16_out1_6(0));

  Bit_Slice14_out1_6 <= if_e_0_MantExtended_x_out1(23 DOWNTO 20);

  Bit_Reduce5_out1_1 <= (Bit_Slice14_out1_6(3) OR Bit_Slice14_out1_6(2) OR Bit_Slice14_out1_6(1) OR Bit_Slice14_out1_6(0));

  Bit_Slice18_out1_1 <= if_e_0_MantExtended_x_out1(19 DOWNTO 16);

  Bit_Reduce4_out1_1 <= (Bit_Slice18_out1_1(3) OR Bit_Slice18_out1_1(2) OR Bit_Slice18_out1_1(1) OR Bit_Slice18_out1_1(0));

  Bit_Slice12_out1_7 <= if_e_0_MantExtended_x_out1(15 DOWNTO 12);

  Bit_Reduce3_out1_1 <= (Bit_Slice12_out1_7(3) OR Bit_Slice12_out1_7(2) OR Bit_Slice12_out1_7(1) OR Bit_Slice12_out1_7(0));

  Bit_Slice10_out1_7 <= if_e_0_MantExtended_x_out1(11 DOWNTO 8);

  Bit_Reduce2_out1_1 <= (Bit_Slice10_out1_7(3) OR Bit_Slice10_out1_7(2) OR Bit_Slice10_out1_7(1) OR Bit_Slice10_out1_7(0));

  Bit_Slice8_out1_3 <= if_e_0_MantExtended_x_out1(7 DOWNTO 4);

  Bit_Reduce1_out1_1 <= (Bit_Slice8_out1_3(3) OR Bit_Slice8_out1_3(2) OR Bit_Slice8_out1_3(1) OR Bit_Slice8_out1_3(0));

  Bit_Slice6_out1_3 <= if_e_0_MantExtended_x_out1(3 DOWNTO 0);

  Bit_Reduce_out1_1 <= (Bit_Slice6_out1_3(3) OR Bit_Slice6_out1_3(2) OR Bit_Slice6_out1_3(1) OR Bit_Slice6_out1_3(0));

  Logical_Operator1_out1_23 <= Bit_Reduce1_out1_1 OR Bit_Reduce_out1_1;

  Logical_Operator2_out1_24 <= Bit_Reduce2_out1_1 OR Logical_Operator1_out1_23;

  Logical_Operator3_out1_23 <= Bit_Reduce3_out1_1 OR Logical_Operator2_out1_24;

  Logical_Operator4_out1_26 <= Bit_Reduce4_out1_1 OR Logical_Operator3_out1_23;

  Logical_Operator5_out1_25 <= Bit_Reduce5_out1_1 OR Logical_Operator4_out1_26;

  Logical_Operator6_out1_25 <= Bit_Reduce6_out1_1 OR Logical_Operator5_out1_25;

  Logical_Operator7_out1_21 <= Bit_Reduce7_out1_1 OR Logical_Operator6_out1_25;

  Logical_Operator8_out1_1 <= Bit_Reduce8_out1_1 OR Logical_Operator7_out1_21;

  Logical_Operator9_out1_1 <= Bit_Reduce9_out1_1 OR Logical_Operator8_out1_1;

  Logical_Operator10_out1_1 <= Bit_Reduce10_out1_1 OR Logical_Operator9_out1_1;

  Logical_Operator12_out1_7 <= Bit_Reduce11_out1_1 OR Logical_Operator10_out1_1;

  Logical_Operator4_out1_27 <= Logical_Operator1_out1_22 AND Bit_Slice2_out1_16;

  Logical_Operator13_out1_7 <= Bit_Reduce12_out1_1 OR Logical_Operator12_out1_7;

  Logical_Operator6_out1_26 <= Logical_Operator3_out1_22 OR Logical_Operator13_out1_7;

  Logical_Operator5_out1_26 <= Logical_Operator4_out1_27 OR Logical_Operator6_out1_26;

  Bit_Slice31_out1_1 <= if_e_0_MantExtended_x_out1(50 DOWNTO 48);

  Bit_Slice2_out1_17 <= Bit_Slice31_out1_1(2);

  Logical_Operator2_out1_25 <= Bit_Slice2_out1_17 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_17 <= Bit_Slice31_out1_1(1);

  Logical_Operator1_out1_24 <= Logical_Operator2_out1_25 OR Bit_Slice1_out1_17;

  Logical_Operator4_out1_28 <= Logical_Operator1_out1_24 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_14 <= Bit_Slice31_out1_1(0);

  Logical_Operator7_out1_22 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_24 <= Bit_Slice_out1_14 AND Logical_Operator7_out1_22;

  Logical_Operator4_out1_29 <= Logical_Operator1_out1_21 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_25 <= Logical_Operator5_out1_26 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_27 <= Logical_Operator3_out1_24 OR Logical_Operator12_out1_7;

  Logical_Operator5_out1_27 <= Logical_Operator4_out1_28 OR Logical_Operator6_out1_27;

  Logical_Operator6_out1_28 <= Logical_Operator3_out1_25 OR Logical_Operator5_out1_27;

  Logical_Operator5_out1_28 <= Logical_Operator4_out1_29 OR Logical_Operator6_out1_28;

  Bit_Slice4_out1_3 <= Constant_out1_2(4);

  Bit_Slice25_out1_1 <= if_e_0_MantExtended_x_out1(46 DOWNTO 44);

  Bit_Slice2_out1_18 <= Bit_Slice25_out1_1(2);

  Logical_Operator2_out1_26 <= Bit_Slice2_out1_18 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_18 <= Bit_Slice25_out1_1(1);

  Logical_Operator1_out1_25 <= Logical_Operator2_out1_26 OR Bit_Slice1_out1_18;

  Logical_Operator4_out1_30 <= Logical_Operator1_out1_25 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_15 <= Bit_Slice25_out1_1(0);

  Logical_Operator7_out1_23 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_26 <= Bit_Slice_out1_15 AND Logical_Operator7_out1_23;

  Logical_Operator6_out1_29 <= Logical_Operator3_out1_26 OR Logical_Operator10_out1_1;

  Logical_Operator5_out1_29 <= Logical_Operator4_out1_30 OR Logical_Operator6_out1_29;

  Bit_Slice29_out1_1 <= if_e_0_MantExtended_x_out1(42 DOWNTO 40);

  Bit_Slice2_out1_19 <= Bit_Slice29_out1_1(2);

  Logical_Operator2_out1_27 <= Bit_Slice2_out1_19 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_19 <= Bit_Slice29_out1_1(1);

  Logical_Operator1_out1_26 <= Logical_Operator2_out1_27 OR Bit_Slice1_out1_19;

  Logical_Operator4_out1_31 <= Logical_Operator1_out1_26 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_16 <= Bit_Slice29_out1_1(0);

  Logical_Operator7_out1_24 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_27 <= Bit_Slice_out1_16 AND Logical_Operator7_out1_24;

  Logical_Operator2_out1_28 <= Logical_Operator5_out1_29 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_30 <= Logical_Operator3_out1_27 OR Logical_Operator9_out1_1;

  Logical_Operator5_out1_30 <= Logical_Operator4_out1_31 OR Logical_Operator6_out1_30;

  Logical_Operator1_out1_27 <= Logical_Operator2_out1_28 OR Logical_Operator5_out1_30;

  Bit_Slice23_out1_1 <= if_e_0_MantExtended_x_out1(38 DOWNTO 36);

  Bit_Slice2_out1_20 <= Bit_Slice23_out1_1(2);

  Logical_Operator2_out1_29 <= Bit_Slice2_out1_20 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_20 <= Bit_Slice23_out1_1(1);

  Logical_Operator1_out1_28 <= Logical_Operator2_out1_29 OR Bit_Slice1_out1_20;

  Logical_Operator4_out1_32 <= Logical_Operator1_out1_28 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_17 <= Bit_Slice23_out1_1(0);

  Logical_Operator7_out1_25 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_28 <= Bit_Slice_out1_17 AND Logical_Operator7_out1_25;

  Logical_Operator6_out1_31 <= Logical_Operator3_out1_28 OR Logical_Operator8_out1_1;

  Logical_Operator5_out1_31 <= Logical_Operator4_out1_32 OR Logical_Operator6_out1_31;

  Bit_Slice21_out1_1 <= if_e_0_MantExtended_x_out1(34 DOWNTO 32);

  Bit_Slice2_out1_21 <= Bit_Slice21_out1_1(2);

  Logical_Operator2_out1_30 <= Bit_Slice2_out1_21 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_21 <= Bit_Slice21_out1_1(1);

  Logical_Operator1_out1_29 <= Logical_Operator2_out1_30 OR Bit_Slice1_out1_21;

  Logical_Operator4_out1_33 <= Logical_Operator1_out1_29 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_18 <= Bit_Slice21_out1_1(0);

  Logical_Operator7_out1_26 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_29 <= Bit_Slice_out1_18 AND Logical_Operator7_out1_26;

  Logical_Operator2_out1_31 <= Logical_Operator5_out1_28 AND Bit_Slice4_out1_3;

  Logical_Operator4_out1_34 <= Logical_Operator1_out1_27 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_30 <= Logical_Operator5_out1_31 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_32 <= Logical_Operator3_out1_29 OR Logical_Operator7_out1_21;

  Logical_Operator5_out1_32 <= Logical_Operator4_out1_33 OR Logical_Operator6_out1_32;

  Logical_Operator6_out1_33 <= Logical_Operator3_out1_30 OR Logical_Operator5_out1_32;

  Logical_Operator5_out1_33 <= Logical_Operator4_out1_34 OR Logical_Operator6_out1_33;

  Logical_Operator1_out1_30 <= Logical_Operator2_out1_31 OR Logical_Operator5_out1_33;

  Bit_Slice17_out1_1 <= if_e_0_MantExtended_x_out1(30 DOWNTO 28);

  Bit_Slice2_out1_22 <= Bit_Slice17_out1_1(2);

  Logical_Operator2_out1_32 <= Bit_Slice2_out1_22 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_22 <= Bit_Slice17_out1_1(1);

  Logical_Operator1_out1_31 <= Logical_Operator2_out1_32 OR Bit_Slice1_out1_22;

  Logical_Operator4_out1_35 <= Logical_Operator1_out1_31 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_19 <= Bit_Slice17_out1_1(0);

  Logical_Operator7_out1_27 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_31 <= Bit_Slice_out1_19 AND Logical_Operator7_out1_27;

  Logical_Operator6_out1_34 <= Logical_Operator3_out1_31 OR Logical_Operator6_out1_25;

  Logical_Operator5_out1_34 <= Logical_Operator4_out1_35 OR Logical_Operator6_out1_34;

  Bit_Slice15_out1_6 <= if_e_0_MantExtended_x_out1(26 DOWNTO 24);

  Bit_Slice2_out1_23 <= Bit_Slice15_out1_6(2);

  Logical_Operator2_out1_33 <= Bit_Slice2_out1_23 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_23 <= Bit_Slice15_out1_6(1);

  Logical_Operator1_out1_32 <= Logical_Operator2_out1_33 OR Bit_Slice1_out1_23;

  Logical_Operator4_out1_36 <= Logical_Operator1_out1_32 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_20 <= Bit_Slice15_out1_6(0);

  Logical_Operator7_out1_28 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_32 <= Bit_Slice_out1_20 AND Logical_Operator7_out1_28;

  Logical_Operator2_out1_34 <= Logical_Operator5_out1_34 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_35 <= Logical_Operator3_out1_32 OR Logical_Operator5_out1_25;

  Logical_Operator5_out1_35 <= Logical_Operator4_out1_36 OR Logical_Operator6_out1_35;

  Logical_Operator1_out1_33 <= Logical_Operator2_out1_34 OR Logical_Operator5_out1_35;

  Bit_Slice19_out1_1 <= if_e_0_MantExtended_x_out1(22 DOWNTO 20);

  Bit_Slice2_out1_24 <= Bit_Slice19_out1_1(2);

  Logical_Operator2_out1_35 <= Bit_Slice2_out1_24 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_24 <= Bit_Slice19_out1_1(1);

  Logical_Operator1_out1_34 <= Logical_Operator2_out1_35 OR Bit_Slice1_out1_24;

  Logical_Operator4_out1_37 <= Logical_Operator1_out1_34 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_21 <= Bit_Slice19_out1_1(0);

  Logical_Operator7_out1_29 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_33 <= Bit_Slice_out1_21 AND Logical_Operator7_out1_29;

  Logical_Operator6_out1_36 <= Logical_Operator3_out1_33 OR Logical_Operator4_out1_26;

  Logical_Operator5_out1_36 <= Logical_Operator4_out1_37 OR Logical_Operator6_out1_36;

  Bit_Slice13_out1_7 <= if_e_0_MantExtended_x_out1(18 DOWNTO 16);

  Bit_Slice2_out1_25 <= Bit_Slice13_out1_7(2);

  Logical_Operator2_out1_36 <= Bit_Slice2_out1_25 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_25 <= Bit_Slice13_out1_7(1);

  Logical_Operator1_out1_35 <= Logical_Operator2_out1_36 OR Bit_Slice1_out1_25;

  Logical_Operator4_out1_38 <= Logical_Operator1_out1_35 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_22 <= Bit_Slice13_out1_7(0);

  Logical_Operator7_out1_30 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_34 <= Bit_Slice_out1_22 AND Logical_Operator7_out1_30;

  Logical_Operator4_out1_39 <= Logical_Operator1_out1_33 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_35 <= Logical_Operator5_out1_36 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_37 <= Logical_Operator3_out1_34 OR Logical_Operator3_out1_23;

  Logical_Operator5_out1_37 <= Logical_Operator4_out1_38 OR Logical_Operator6_out1_37;

  Logical_Operator6_out1_38 <= Logical_Operator3_out1_35 OR Logical_Operator5_out1_37;

  Logical_Operator5_out1_38 <= Logical_Operator4_out1_39 OR Logical_Operator6_out1_38;

  Bit_Slice11_out1_7 <= if_e_0_MantExtended_x_out1(14 DOWNTO 12);

  Bit_Slice2_out1_26 <= Bit_Slice11_out1_7(2);

  Logical_Operator2_out1_37 <= Bit_Slice2_out1_26 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_26 <= Bit_Slice11_out1_7(1);

  Logical_Operator1_out1_36 <= Logical_Operator2_out1_37 OR Bit_Slice1_out1_26;

  Logical_Operator4_out1_40 <= Logical_Operator1_out1_36 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_23 <= Bit_Slice11_out1_7(0);

  Logical_Operator7_out1_31 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_36 <= Bit_Slice_out1_23 AND Logical_Operator7_out1_31;

  Logical_Operator6_out1_39 <= Logical_Operator3_out1_36 OR Logical_Operator2_out1_24;

  Logical_Operator5_out1_39 <= Logical_Operator4_out1_40 OR Logical_Operator6_out1_39;

  Bit_Slice9_out1_8 <= if_e_0_MantExtended_x_out1(10 DOWNTO 8);

  Bit_Slice2_out1_27 <= Bit_Slice9_out1_8(2);

  Logical_Operator2_out1_38 <= Bit_Slice2_out1_27 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_27 <= Bit_Slice9_out1_8(1);

  Logical_Operator1_out1_37 <= Logical_Operator2_out1_38 OR Bit_Slice1_out1_27;

  Logical_Operator4_out1_41 <= Logical_Operator1_out1_37 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_24 <= Bit_Slice9_out1_8(0);

  Logical_Operator7_out1_32 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_37 <= Bit_Slice_out1_24 AND Logical_Operator7_out1_32;

  Logical_Operator2_out1_39 <= Logical_Operator5_out1_39 AND Bit_Slice1_out1_16;

  Logical_Operator6_out1_40 <= Logical_Operator3_out1_37 OR Logical_Operator1_out1_23;

  Logical_Operator5_out1_40 <= Logical_Operator4_out1_41 OR Logical_Operator6_out1_40;

  Logical_Operator1_out1_38 <= Logical_Operator2_out1_39 OR Logical_Operator5_out1_40;

  Bit_Slice7_out1_3 <= if_e_0_MantExtended_x_out1(6 DOWNTO 4);

  Bit_Slice2_out1_28 <= Bit_Slice7_out1_3(2);

  Logical_Operator2_out1_40 <= Bit_Slice2_out1_28 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_28 <= Bit_Slice7_out1_3(1);

  Logical_Operator1_out1_39 <= Logical_Operator2_out1_40 OR Bit_Slice1_out1_28;

  Logical_Operator4_out1_42 <= Logical_Operator1_out1_39 AND Bit_Slice2_out1_16;

  Bit_Slice_out1_25 <= Bit_Slice7_out1_3(0);

  Logical_Operator7_out1_33 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_38 <= Bit_Slice_out1_25 AND Logical_Operator7_out1_33;

  Logical_Operator6_out1_41 <= Logical_Operator3_out1_38 OR Bit_Reduce_out1_1;

  Logical_Operator5_out1_41 <= Logical_Operator4_out1_42 OR Logical_Operator6_out1_41;

  Bit_Slice_out1_26 <= if_e_0_MantExtended_x_out1(2 DOWNTO 0);

  Bit_Slice2_out1_29 <= Bit_Slice_out1_26(2);

  Logical_Operator2_out1_41 <= Bit_Slice2_out1_29 AND Bit_Slice5_out1_2;

  Bit_Slice1_out1_29 <= Bit_Slice_out1_26(1);

  Logical_Operator1_out1_40 <= Logical_Operator2_out1_41 OR Bit_Slice1_out1_29;

  Bit_Slice_out1_27 <= Bit_Slice_out1_26(0);

  Logical_Operator7_out1_34 <= Bit_Slice5_out1_2 OR Bit_Slice2_out1_16;

  Logical_Operator3_out1_39 <= Bit_Slice_out1_27 AND Logical_Operator7_out1_34;

  BitSlice_out1 <= Bit_Concat_out1_1(0);

  
  bitget_Mant_tmp_1_0_out1 <= '1' WHEN BitSlice_out1 /= '0' ELSE
      '0';

  BitSlice1_out1_1 <= Bit_Concat_out1_1(1);

  
  bitget_Mant_tmp_2_0_out1 <= '1' WHEN BitSlice1_out1_1 /= '0' ELSE
      '0';

  
  if_e_0_sticky_out1 <= if_shift_length1_0_out1 WHEN e_0_out1 = '0' ELSE
      C6_out1;

  Bit_Slice27_out1_1 <= Constant_out1_2(5);

  Logical_Operator4_out1_43 <= Logical_Operator1_out1_30 AND Bit_Slice27_out1_1;

  Logical_Operator3_out1_40 <= Logical_Operator5_out1_38 AND Bit_Slice4_out1_3;

  Logical_Operator4_out1_44 <= Logical_Operator1_out1_38 AND Bit_Slice3_out1_2;

  Logical_Operator3_out1_41 <= Logical_Operator5_out1_41 AND Bit_Slice1_out1_16;

  Logical_Operator4_out1_45 <= Logical_Operator1_out1_40 AND Bit_Slice2_out1_16;

  Constant_out1_3 <= '0';

  Logical_Operator6_out1_42 <= Logical_Operator3_out1_39 OR Constant_out1_3;

  Logical_Operator5_out1_42 <= Logical_Operator4_out1_45 OR Logical_Operator6_out1_42;

  Logical_Operator6_out1_43 <= Logical_Operator3_out1_41 OR Logical_Operator5_out1_42;

  Logical_Operator5_out1_43 <= Logical_Operator4_out1_44 OR Logical_Operator6_out1_43;

  Logical_Operator6_out1_44 <= Logical_Operator3_out1_40 OR Logical_Operator5_out1_43;

  Logical_Operator5_out1_44 <= Logical_Operator4_out1_43 OR Logical_Operator6_out1_44;

  sticky_bitsll_MantExtended_out1 <= if_e_0_sticky_out1 OR Logical_Operator5_out1_44;

  alphabitget_Mant_tmp_2_0_out1 <= bitget_Mant_tmp_2_0_out1 OR sticky_bitsll_MantExtended_out1;

  alphabitget_Mant_tmp_1_0_out1 <= bitget_Mant_tmp_1_0_out1 AND alphabitget_Mant_tmp_2_0_out1;

  castout1 <= to_unsigned(16#0000002#, 25);

  Mant_tmp_cast <= resize(Bit_Concat_out1_1, 26) + resize(castout1, 26);

  DTC_out1 <= Mant_tmp_cast(24 DOWNTO 0);

  
  if_bitget_Mant_tmp_1_0_out1 <= Bit_Concat_out1_1 WHEN alphabitget_Mant_tmp_1_0_out1 = '0' ELSE
      DTC_out1;

  BitSlice2_out1 <= if_bitget_Mant_tmp_1_0_out1(24);

  
  bitget_Mant_tmp_Mant_tmp_Word_out1 <= '1' WHEN BitSlice2_out1 /= '0' ELSE
      '0';

  C5_out1 <= to_unsigned(16#00#, 8);

  DTC2_out1 <= unsigned(e_int32_shift_length_out1(7 DOWNTO 0));

  
  if_e_0_Exponent_out1 <= C5_out1 WHEN e_0_out1 = '0' ELSE
      DTC2_out1;

  cast_1_1 <= to_unsigned(16#01#, 8);

  Exp_cast <= resize(if_e_0_Exponent_out1, 9) + resize(cast_1_1, 9);

  DTC1_out1 <= Exp_cast(7 DOWNTO 0);

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_Exp_out1 <= if_e_0_Exponent_out1 WHEN bitget_Mant_tmp_Mant_tmp_Word_out1 = '0' ELSE
      DTC1_out1;

  
  if_e_cfType_MantissaLength_Exponent_out1 <= C7_out1 WHEN e_cfType_MantissaLength_out1 = '0' ELSE
      if_bitget_Mant_tmp_Mant_tmp_Wor_Exp_out1;

  C8_out1 <= to_unsigned(16#FF#, 8);

  
  if_e_int32_255_Exponent_out1 <= if_e_cfType_MantissaLength_Exponent_out1 WHEN e_int32_255_out1 = '0' ELSE
      C8_out1;

  C11_out1 <= to_unsigned(16#00#, 8);

  
  if_inExponent_0_inMantis_Exponent_out1 <= if_e_int32_255_Exponent_out1 WHEN alphainExponent_0_inMantis_out1 = '0' ELSE
      C11_out1;

  C12_out1 <= to_unsigned(16#FF#, 8);

  
  if_inExponent_inType_Exponent_Exponent_out1 <= if_inExponent_0_inMantis_Exponent_out1 WHEN inExponent_inType_Exponent_out1 = '0' ELSE
      C12_out1;

  C9_out1 <= to_unsigned(16#000000#, 23);

  BitSlice3_out1 <= if_bitget_Mant_tmp_1_0_out1(23 DOWNTO 1);

  C_out1_1 <= to_unsigned(16#000000#, 23);

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_MantRounded_out1 <= BitSlice3_out1 WHEN bitget_Mant_tmp_Mant_tmp_Word_out1 = '0' ELSE
      C_out1_1;

  
  if_e_cfType_MantissaLength_Mantissa_out1 <= C9_out1 WHEN e_cfType_MantissaLength_out1 = '0' ELSE
      if_bitget_Mant_tmp_Mant_tmp_Wor_MantRounded_out1;

  C10_out1 <= to_unsigned(16#000000#, 23);

  
  if_e_int32_255_Mantissa_out1 <= if_e_cfType_MantissaLength_Mantissa_out1 WHEN e_int32_255_out1 = '0' ELSE
      C10_out1;

  C13_out1 <= to_unsigned(16#000000#, 23);

  
  if_inExponent_0_inMantis_Mantissa_out1 <= if_e_int32_255_Mantissa_out1 WHEN alphainExponent_0_inMantis_out1 = '0' ELSE
      C13_out1;

  
  inMantissa_0_out1_1 <= '1' WHEN inMantissa /= to_unsigned(0, 52) ELSE
      '0';

  BitSlice_out1_1 <= inMantissa(22 DOWNTO 0);

  BitSet_out1 <= BitSlice_out1_1 OR to_unsigned(16#400000#, 23);

  
  if_inMantissa_0_out1 <= BitSlice_out1_1 WHEN inMantissa_0_out1_1 = '0' ELSE
      BitSet_out1;

  
  if_inExponent_inType_Exponent_Mantissa_out1 <= if_inExponent_0_inMantis_Mantissa_out1 WHEN inExponent_inType_Exponent_out1 = '0' ELSE
      if_inMantissa_0_out1;

  -- Combine FP sign, exponent, mantissa into 32 bit word
  nfp_out_pack <= inSign & if_inExponent_inType_Exponent_Exponent_out1 & if_inExponent_inType_Exponent_Mantissa_out1;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

