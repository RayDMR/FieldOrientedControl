-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\untitled\nfp_add_double.vhd
-- Created: 2020-07-03 00:04:52
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: nfp_add_double
-- Source Path: untitled/CurrentController/nfp_add_double
-- Hierarchy Level: 3
-- 
-- {Latency Strategy = "Zero"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY nfp_add_double IS
  PORT( nfp_in1                           :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_in2                           :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_out                           :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END nfp_add_double;


ARCHITECTURE rtl OF nfp_add_double IS

  -- Signals
  SIGNAL nfp_in1_unsigned                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL aSign                            : std_logic;  -- ufix1
  SIGNAL aExponent                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL aMantissa                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_in2_unsigned                 : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL bSign                            : std_logic;  -- ufix1
  SIGNAL bExponent                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL bMantissa                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Relational_Operator1_relop1      : std_logic;
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL bitconcat_aExponent_aMantissa_relop1 : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL if_bitconcat_aExponent_aMantiss_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL aExponent_cfType_Exponent_I_out1 : std_logic;  -- ufix1
  SIGNAL Exponent_0_out1                  : std_logic;  -- ufix1
  SIGNAL C_out1                           : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Exponent_0_out1               : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL exp_norm_cfType_Exponent_In_out1 : std_logic;  -- ufix1
  SIGNAL alphaExponent_0_cfType_Exp_out1  : std_logic;  -- ufix1
  SIGNAL alpha1_out1                      : std_logic;  -- ufix1
  SIGNAL alpha0_out1                      : std_logic;  -- ufix1
  SIGNAL if_Exponent_0_cfType_Exp_out1    : std_logic;  -- ufix1
  SIGNAL if_bitconcat_aExponent_aMantiss_1_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Concat1_out1                 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL alpha0_1_out1                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1                  : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion_out1        : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL if_bitconcat_aExponent_aMantiss_2_out1 : std_logic;  -- ufix1
  SIGNAL if_bitconcat_aExponent_aMantiss_5_out1 : std_logic;  -- ufix1
  SIGNAL bitxor_out1                      : std_logic;  -- ufix1
  SIGNAL if_bitconcat_aExponent_aMantiss_3_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Exponent_0_out1_1                : std_logic;  -- ufix1
  SIGNAL exp_b_cfType_Exponent_Inf_o_out1 : std_logic;  -- ufix1
  SIGNAL alphaExponent_0_cfType_Exp_out1_1 : std_logic;  -- ufix1
  SIGNAL alpha1_out1_1                    : std_logic;  -- ufix1
  SIGNAL alpha0_out1_1                    : std_logic;  -- ufix1
  SIGNAL if_Exponent_0_cfType_Exp_out1_1  : std_logic;  -- ufix1
  SIGNAL if_bitconcat_aExponent_aMantiss_4_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Concat1_out1_1               : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL alpha0_1_out1_1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat_out1_1                : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion_out1_1      : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL alphamant_b_ext_in0              : signed(57 DOWNTO 0);  -- sfix58
  SIGNAL alphamant_b_ext_out1             : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL if_opp_Sign_out1                 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL C_out1_1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Exponent_0_out1_1             : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL storedInteger_exp_a_cor_sto_sub_cast : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL storedInteger_exp_a_cor_sto_sub_cast_1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL storedInteger_exp_a_cor_sto_out1 : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Bit_Slice2_out1                  : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Compare_To_Zero_out1             : std_logic;  -- ufix1
  SIGNAL Constant_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_opp_Sign_1_out1               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsra_mant_b_ext_shift_lengt_out1 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL mant_a_ext_mant_b_shifted_add_temp : signed(57 DOWNTO 0);  -- sfix58
  SIGNAL mant_a_ext_mant_b_shifted_out1   : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL BitSlice_out1                    : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL BitSlice3_out1                   : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Bit_Slice2_out1_1                : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Slice15_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1          : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_1                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_1         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_1               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_2                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_1        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_1        : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_1               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_2               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_2        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_2               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_2         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_3               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_3        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_3        : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_3               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_4               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_4        : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_4        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1_4               : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_5               : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_5               : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_5        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_5        : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice8_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_1         : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Constant_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant1_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1                      : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_2          : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant3_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch2_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant4_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator2_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch3_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch4_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant5_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant6_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant7_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch7_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant8_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch8_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator12_out1_5        : std_logic;  -- ufix1
  SIGNAL Switch9_out1                     : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch10_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator_out1_3          : std_logic;  -- ufix1
  SIGNAL Switch13_out1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch_out1_1                    : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_1                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_2                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Logical_Operator3_out1_1         : std_logic;  -- ufix1
  SIGNAL Switch2_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch1_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_3                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_3                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_3                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_4                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant16_out1_4                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch20_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_4                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch3_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant9_out1_5                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch11_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant10_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch12_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant11_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch14_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant12_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch15_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch16_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant13_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch17_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant14_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch18_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant15_out1_5                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch19_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch21_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch13_out1_5                  : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch5_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Switch6_out1_1                   : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice_out1_2                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL shift_length_exp_a_cor_relop1    : std_logic;
  SIGNAL Bit_Slice1_out1_2                : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Compare_To_Zero_out1_1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_2         : std_logic;  -- ufix1
  SIGNAL C1_out1                          : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL exp_a_cor_1_out1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_shift_length_exp_a_cor_1_out1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL bitsll_Sum_shift_length_out1     : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL bitsrl_Sum_1_out1                : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL if_bitget_Sum_Sum_WordLength_out1 : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL C5_out1                          : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL if_exp_norm_cfType_Exponent_I_out1 : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL BitSlice6_out1                   : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice5_out1                   : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_4          : std_logic;  -- ufix1
  SIGNAL Bit_Slice35_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice33_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Reduce13_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice32_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce12_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice30_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce11_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice24_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce10_out1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice28_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce9_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice22_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce8_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice20_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce7_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice16_out1_5               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce6_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice14_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce5_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice18_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce4_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice12_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce3_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice10_out1_6               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce2_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice8_out1_2                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce1_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Slice6_out1_2                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Reduce_out1                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_2         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator8_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator9_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator10_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator12_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator13_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator14_out1_6        : std_logic;  -- ufix1
  SIGNAL Logical_Operator11_out1          : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_5          : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_3         : std_logic;  -- ufix1
  SIGNAL Bit_Slice5_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_4         : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_6          : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_4         : std_logic;  -- ufix1
  SIGNAL Switch_out1_2                    : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice3_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice2_out1_4                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_5         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_3         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice31_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_5                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_6         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_4         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_5         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice4_out1_1                : std_logic;  -- ufix1
  SIGNAL Bit_Slice25_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_6                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_7         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_6         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_9         : std_logic;  -- ufix1
  SIGNAL Bit_Slice29_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_7                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_8         : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_7         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice23_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_8                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_10        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_12        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_8         : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice21_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_9                : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_11        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_9         : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_10        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice17_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_10               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_13        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_15        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_11        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice15_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_11               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_14        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_12        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice19_out1                 : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_12               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_13        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_16        : std_logic;  -- ufix1
  SIGNAL Bit_Slice13_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_13               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_17        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_12                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_14        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_15        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice11_out1_6               : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_14               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_18        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_20        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_16        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice9_out1_7                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_15               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_17        : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice7_out1_2                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_16               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_15                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_19        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_18        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_21        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_16                : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Bit_Slice2_out1_17               : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1_22        : std_logic;  -- ufix1
  SIGNAL Bit_Slice1_out1_18               : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1_23        : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_17                : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_19        : std_logic;  -- ufix1
  SIGNAL Bit_Slice27_out1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_20        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1_21        : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1_25        : std_logic;  -- ufix1
  SIGNAL Constant_out1_2                  : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_22        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_24        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_23        : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1_25        : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1_24        : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1                   : std_logic;  -- ufix1
  SIGNAL sticky_bitget_Sum_1_out1         : std_logic;  -- ufix1
  SIGNAL BitSlice_out1_1                  : std_logic;  -- ufix1
  SIGNAL BitSlice1_out1_1                 : std_logic;  -- ufix1
  SIGNAL if_bitget_Sum_Sum_WordLength_2_out1 : std_logic;  -- ufix1
  SIGNAL sticky_bitget_Sum_1_out1_1       : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_2_0_out1    : std_logic;  -- ufix1
  SIGNAL alphabitget_Mant_tmp_1_0_out1    : std_logic;  -- ufix1
  SIGNAL alpha0_out1_2                    : std_logic;  -- ufix1
  SIGNAL BitSlice4_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Concat_out1_2                : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL cast_2_like_Mant_tmp_out1        : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Mant_tmp_cast_2_like_Man_out1    : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_bitget_Mant_tmp_1_0_out1      : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL BitSlice2_out1                   : std_logic;  -- ufix1
  SIGNAL BitSlice4_out1_1                 : std_logic;  -- ufix1
  SIGNAL C4_out1                          : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Sum_0_out1                       : std_logic;  -- ufix1
  SIGNAL exp_a_cor_shift_length_out1      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C2_out1                          : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_shift_length_exp_a_cor_out1   : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL BitSlice2_out1_1                 : std_logic;  -- ufix1
  SIGNAL C3_out1                          : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_Sum_0_out1                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bitget_Sum_Sum_WordLength_1_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL C_out1_2                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL exp_a_cor_1_out1_1               : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bitget_Sum_Sum_WordLength_1_out1_1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bitget_Sum_Sum_WordLength_out1_1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL cast_1_like_Exp_out1             : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Exp_cast_1_like_Exp_out1         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_bitget_Mant_tmp_Mant_tmp_Wor_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Exponent_0_out1_2                : std_logic;  -- ufix1
  SIGNAL BitSlice3_out1_1                 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Mantissa_0_out1                  : std_logic;  -- ufix1
  SIGNAL alphaExponent_0_Mantissa_out1    : std_logic;  -- ufix1
  SIGNAL Constant_out1_3                  : std_logic;  -- ufix1
  SIGNAL Switch_out1_3                    : std_logic;  -- ufix1
  SIGNAL alphaaSign_1_bSign_1_out1        : std_logic;  -- ufix1
  SIGNAL if_Exponent_0_Mantissa_out1      : std_logic;  -- ufix1
  SIGNAL if_aExponent_cfType_Exponent_out1 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL mant_a_0_out1                    : std_logic;  -- ufix1
  SIGNAL opp_signs_exp_b_cfType_out1      : std_logic;  -- ufix1
  SIGNAL alphamant_a_0_opp_signs_out1     : std_logic;  -- ufix1
  SIGNAL BitSet_out1                      : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_mant_a_0_opp_signs_out1       : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_aExponent_cfType_Exponent_1_out1 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_out_pack                     : unsigned(63 DOWNTO 0);  -- ufix64

BEGIN
  nfp_in1_unsigned <= unsigned(nfp_in1);

  -- Split 64 bit word into FP sign, exponent, mantissa
  aSign <= nfp_in1_unsigned(63);
  aExponent <= nfp_in1_unsigned(62 DOWNTO 52);
  aMantissa <= nfp_in1_unsigned(51 DOWNTO 0);

  nfp_in2_unsigned <= unsigned(nfp_in2);

  -- Split 64 bit word into FP sign, exponent, mantissa
  bSign <= nfp_in2_unsigned(63);
  bExponent <= nfp_in2_unsigned(62 DOWNTO 52);
  bMantissa <= nfp_in2_unsigned(51 DOWNTO 0);

  
  Relational_Operator1_relop1 <= '1' WHEN aExponent = bExponent ELSE
      '0';

  
  Relational_Operator_relop1 <= '1' WHEN aExponent > bExponent ELSE
      '0';

  
  bitconcat_aExponent_aMantissa_relop1 <= '1' WHEN aMantissa >= bMantissa ELSE
      '0';

  Logical_Operator_out1 <= Relational_Operator1_relop1 AND bitconcat_aExponent_aMantissa_relop1;

  Logical_Operator1_out1 <= Relational_Operator_relop1 OR Logical_Operator_out1;

  
  if_bitconcat_aExponent_aMantiss_out1 <= bExponent WHEN Logical_Operator1_out1 = '0' ELSE
      aExponent;

  
  aExponent_cfType_Exponent_I_out1 <= '1' WHEN if_bitconcat_aExponent_aMantiss_out1 = to_unsigned(16#7FF#, 11) ELSE
      '0';

  
  Exponent_0_out1 <= '1' WHEN if_bitconcat_aExponent_aMantiss_out1 = to_unsigned(16#000#, 11) ELSE
      '0';

  C_out1 <= to_unsigned(16#001#, 11);

  
  if_Exponent_0_out1 <= if_bitconcat_aExponent_aMantiss_out1 WHEN Exponent_0_out1 = '0' ELSE
      C_out1;

  
  exp_norm_cfType_Exponent_In_out1 <= '1' WHEN if_Exponent_0_out1 = to_unsigned(16#7FE#, 11) ELSE
      '0';

  alphaExponent_0_cfType_Exp_out1 <= Exponent_0_out1 OR aExponent_cfType_Exponent_I_out1;

  alpha1_out1 <= '1';

  alpha0_out1 <= '0';

  
  if_Exponent_0_cfType_Exp_out1 <= alpha1_out1 WHEN alphaExponent_0_cfType_Exp_out1 = '0' ELSE
      alpha0_out1;

  
  if_bitconcat_aExponent_aMantiss_1_out1 <= bMantissa WHEN Logical_Operator1_out1 = '0' ELSE
      aMantissa;

  Bit_Concat1_out1 <= if_Exponent_0_cfType_Exp_out1 & if_bitconcat_aExponent_aMantiss_1_out1;

  alpha0_1_out1 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1 <= Bit_Concat1_out1 & alpha0_1_out1;

  Data_Type_Conversion_out1 <= signed(resize(Bit_Concat_out1, 57));

  
  if_bitconcat_aExponent_aMantiss_2_out1 <= bSign WHEN Logical_Operator1_out1 = '0' ELSE
      aSign;

  
  if_bitconcat_aExponent_aMantiss_5_out1 <= aSign WHEN Logical_Operator1_out1 = '0' ELSE
      bSign;

  bitxor_out1 <= if_bitconcat_aExponent_aMantiss_2_out1 XOR if_bitconcat_aExponent_aMantiss_5_out1;

  
  if_bitconcat_aExponent_aMantiss_3_out1 <= aExponent WHEN Logical_Operator1_out1 = '0' ELSE
      bExponent;

  
  Exponent_0_out1_1 <= '1' WHEN if_bitconcat_aExponent_aMantiss_3_out1 = to_unsigned(16#000#, 11) ELSE
      '0';

  
  exp_b_cfType_Exponent_Inf_o_out1 <= '1' WHEN if_bitconcat_aExponent_aMantiss_3_out1 = to_unsigned(16#7FF#, 11) ELSE
      '0';

  alphaExponent_0_cfType_Exp_out1_1 <= Exponent_0_out1_1 OR exp_b_cfType_Exponent_Inf_o_out1;

  alpha1_out1_1 <= '1';

  alpha0_out1_1 <= '0';

  
  if_Exponent_0_cfType_Exp_out1_1 <= alpha1_out1_1 WHEN alphaExponent_0_cfType_Exp_out1_1 = '0' ELSE
      alpha0_out1_1;

  
  if_bitconcat_aExponent_aMantiss_4_out1 <= aMantissa WHEN Logical_Operator1_out1 = '0' ELSE
      bMantissa;

  Bit_Concat1_out1_1 <= if_Exponent_0_cfType_Exp_out1_1 & if_bitconcat_aExponent_aMantiss_4_out1;

  alpha0_1_out1_1 <= to_unsigned(16#0#, 2);

  Bit_Concat_out1_1 <= Bit_Concat1_out1_1 & alpha0_1_out1_1;

  Data_Type_Conversion_out1_1 <= signed(resize(Bit_Concat_out1_1, 57));

  alphamant_b_ext_in0 <=  - (resize(Data_Type_Conversion_out1_1, 58));
  alphamant_b_ext_out1 <= alphamant_b_ext_in0(56 DOWNTO 0);

  
  if_opp_Sign_out1 <= Data_Type_Conversion_out1_1 WHEN bitxor_out1 = '0' ELSE
      alphamant_b_ext_out1;

  C_out1_1 <= to_unsigned(16#001#, 11);

  
  if_Exponent_0_out1_1 <= if_bitconcat_aExponent_aMantiss_3_out1 WHEN Exponent_0_out1_1 = '0' ELSE
      C_out1_1;

  storedInteger_exp_a_cor_sto_sub_cast <= signed(resize(if_Exponent_0_out1, 12));
  storedInteger_exp_a_cor_sto_sub_cast_1 <= signed(resize(if_Exponent_0_out1_1, 12));
  storedInteger_exp_a_cor_sto_out1 <= storedInteger_exp_a_cor_sto_sub_cast - storedInteger_exp_a_cor_sto_sub_cast_1;

  Bit_Slice2_out1 <= unsigned(storedInteger_exp_a_cor_sto_out1(10 DOWNTO 6));

  
  Compare_To_Zero_out1 <= '1' WHEN Bit_Slice2_out1 = to_unsigned(16#00#, 5) ELSE
      '0';

  Constant_out1 <= to_unsigned(16#3F#, 6);

  Bit_Slice_out1 <= unsigned(storedInteger_exp_a_cor_sto_out1(5 DOWNTO 0));

  
  if_opp_Sign_1_out1 <= Constant_out1 WHEN Compare_To_Zero_out1 = '0' ELSE
      Bit_Slice_out1;

  bitsra_mant_b_ext_shift_lengt_out1 <= SHIFT_RIGHT(if_opp_Sign_out1, to_integer(if_opp_Sign_1_out1));

  mant_a_ext_mant_b_shifted_add_temp <= resize(Data_Type_Conversion_out1, 58) + resize(bitsra_mant_b_ext_shift_lengt_out1, 58);
  mant_a_ext_mant_b_shifted_out1 <= unsigned(mant_a_ext_mant_b_shifted_add_temp(55 DOWNTO 0));

  BitSlice_out1 <= mant_a_ext_mant_b_shifted_out1(55);

  Logical_Operator_out1_1 <= exp_norm_cfType_Exponent_In_out1 AND BitSlice_out1;

  BitSlice3_out1 <= mant_a_ext_mant_b_shifted_out1(54 DOWNTO 0);

  Bit_Slice2_out1_1 <= BitSlice3_out1(54 DOWNTO 48);

  Bit_Slice15_out1 <= Bit_Slice2_out1_1(6);

  Bit_Slice14_out1 <= Bit_Slice2_out1_1(5);

  Bit_Slice13_out1 <= Bit_Slice2_out1_1(4);

  Logical_Operator7_out1 <= Bit_Slice14_out1 OR Bit_Slice13_out1;

  Logical_Operator6_out1 <= Bit_Slice15_out1 OR Logical_Operator7_out1;

  Bit_Slice12_out1 <= Bit_Slice2_out1_1(3);

  Bit_Slice11_out1 <= Bit_Slice2_out1_1(2);

  Logical_Operator4_out1 <= Bit_Slice12_out1 OR Bit_Slice11_out1;

  Bit_Slice10_out1 <= Bit_Slice2_out1_1(1);

  Bit_Slice9_out1 <= Bit_Slice2_out1_1(0);

  Logical_Operator14_out1 <= Bit_Slice10_out1 OR Bit_Slice9_out1;

  Logical_Operator13_out1 <= Logical_Operator4_out1 OR Logical_Operator14_out1;

  Logical_Operator12_out1 <= Logical_Operator6_out1 OR Logical_Operator13_out1;

  Bit_Slice9_out1_1 <= BitSlice3_out1(47 DOWNTO 40);

  Bit_Slice16_out1 <= Bit_Slice9_out1_1(7);

  Bit_Slice15_out1_1 <= Bit_Slice9_out1_1(6);

  Logical_Operator5_out1 <= Bit_Slice16_out1 OR Bit_Slice15_out1_1;

  Bit_Slice14_out1_1 <= Bit_Slice9_out1_1(5);

  Bit_Slice13_out1_1 <= Bit_Slice9_out1_1(4);

  Logical_Operator7_out1_1 <= Bit_Slice14_out1_1 OR Bit_Slice13_out1_1;

  Logical_Operator6_out1_1 <= Logical_Operator5_out1 OR Logical_Operator7_out1_1;

  Bit_Slice12_out1_1 <= Bit_Slice9_out1_1(3);

  Bit_Slice11_out1_1 <= Bit_Slice9_out1_1(2);

  Logical_Operator4_out1_1 <= Bit_Slice12_out1_1 OR Bit_Slice11_out1_1;

  Bit_Slice10_out1_1 <= Bit_Slice9_out1_1(1);

  Bit_Slice9_out1_2 <= Bit_Slice9_out1_1(0);

  Logical_Operator14_out1_1 <= Bit_Slice10_out1_1 OR Bit_Slice9_out1_2;

  Logical_Operator13_out1_1 <= Logical_Operator4_out1_1 OR Logical_Operator14_out1_1;

  Logical_Operator12_out1_1 <= Logical_Operator6_out1_1 OR Logical_Operator13_out1_1;

  Bit_Slice8_out1 <= BitSlice3_out1(39 DOWNTO 32);

  Bit_Slice16_out1_1 <= Bit_Slice8_out1(7);

  Bit_Slice15_out1_2 <= Bit_Slice8_out1(6);

  Logical_Operator5_out1_1 <= Bit_Slice16_out1_1 OR Bit_Slice15_out1_2;

  Bit_Slice14_out1_2 <= Bit_Slice8_out1(5);

  Bit_Slice13_out1_2 <= Bit_Slice8_out1(4);

  Logical_Operator7_out1_2 <= Bit_Slice14_out1_2 OR Bit_Slice13_out1_2;

  Logical_Operator6_out1_2 <= Logical_Operator5_out1_1 OR Logical_Operator7_out1_2;

  Bit_Slice12_out1_2 <= Bit_Slice8_out1(3);

  Bit_Slice11_out1_2 <= Bit_Slice8_out1(2);

  Logical_Operator4_out1_2 <= Bit_Slice12_out1_2 OR Bit_Slice11_out1_2;

  Bit_Slice10_out1_2 <= Bit_Slice8_out1(1);

  Bit_Slice9_out1_3 <= Bit_Slice8_out1(0);

  Logical_Operator14_out1_2 <= Bit_Slice10_out1_2 OR Bit_Slice9_out1_3;

  Logical_Operator13_out1_2 <= Logical_Operator4_out1_2 OR Logical_Operator14_out1_2;

  Logical_Operator12_out1_2 <= Logical_Operator6_out1_2 OR Logical_Operator13_out1_2;

  Logical_Operator2_out1 <= Logical_Operator12_out1_1 OR Logical_Operator12_out1_2;

  Bit_Slice7_out1 <= BitSlice3_out1(31 DOWNTO 24);

  Bit_Slice16_out1_2 <= Bit_Slice7_out1(7);

  Bit_Slice15_out1_3 <= Bit_Slice7_out1(6);

  Logical_Operator5_out1_2 <= Bit_Slice16_out1_2 OR Bit_Slice15_out1_3;

  Bit_Slice14_out1_3 <= Bit_Slice7_out1(5);

  Bit_Slice13_out1_3 <= Bit_Slice7_out1(4);

  Logical_Operator7_out1_3 <= Bit_Slice14_out1_3 OR Bit_Slice13_out1_3;

  Logical_Operator6_out1_3 <= Logical_Operator5_out1_2 OR Logical_Operator7_out1_3;

  Bit_Slice12_out1_3 <= Bit_Slice7_out1(3);

  Bit_Slice11_out1_3 <= Bit_Slice7_out1(2);

  Logical_Operator4_out1_3 <= Bit_Slice12_out1_3 OR Bit_Slice11_out1_3;

  Bit_Slice10_out1_3 <= Bit_Slice7_out1(1);

  Bit_Slice9_out1_4 <= Bit_Slice7_out1(0);

  Logical_Operator14_out1_3 <= Bit_Slice10_out1_3 OR Bit_Slice9_out1_4;

  Logical_Operator13_out1_3 <= Logical_Operator4_out1_3 OR Logical_Operator14_out1_3;

  Logical_Operator12_out1_3 <= Logical_Operator6_out1_3 OR Logical_Operator13_out1_3;

  Bit_Slice6_out1 <= BitSlice3_out1(23 DOWNTO 16);

  Bit_Slice16_out1_3 <= Bit_Slice6_out1(7);

  Bit_Slice15_out1_4 <= Bit_Slice6_out1(6);

  Logical_Operator5_out1_3 <= Bit_Slice16_out1_3 OR Bit_Slice15_out1_4;

  Bit_Slice14_out1_4 <= Bit_Slice6_out1(5);

  Bit_Slice13_out1_4 <= Bit_Slice6_out1(4);

  Logical_Operator7_out1_4 <= Bit_Slice14_out1_4 OR Bit_Slice13_out1_4;

  Logical_Operator6_out1_4 <= Logical_Operator5_out1_3 OR Logical_Operator7_out1_4;

  Bit_Slice12_out1_4 <= Bit_Slice6_out1(3);

  Bit_Slice11_out1_4 <= Bit_Slice6_out1(2);

  Logical_Operator4_out1_4 <= Bit_Slice12_out1_4 OR Bit_Slice11_out1_4;

  Bit_Slice10_out1_4 <= Bit_Slice6_out1(1);

  Bit_Slice9_out1_5 <= Bit_Slice6_out1(0);

  Logical_Operator14_out1_4 <= Bit_Slice10_out1_4 OR Bit_Slice9_out1_5;

  Logical_Operator13_out1_4 <= Logical_Operator4_out1_4 OR Logical_Operator14_out1_4;

  Logical_Operator12_out1_4 <= Logical_Operator6_out1_4 OR Logical_Operator13_out1_4;

  Bit_Slice1_out1 <= BitSlice3_out1(15 DOWNTO 8);

  Bit_Slice16_out1_4 <= Bit_Slice1_out1(7);

  Bit_Slice15_out1_5 <= Bit_Slice1_out1(6);

  Logical_Operator5_out1_4 <= Bit_Slice16_out1_4 OR Bit_Slice15_out1_5;

  Bit_Slice14_out1_5 <= Bit_Slice1_out1(5);

  Bit_Slice13_out1_5 <= Bit_Slice1_out1(4);

  Logical_Operator7_out1_5 <= Bit_Slice14_out1_5 OR Bit_Slice13_out1_5;

  Logical_Operator6_out1_5 <= Logical_Operator5_out1_4 OR Logical_Operator7_out1_5;

  Bit_Slice12_out1_5 <= Bit_Slice1_out1(3);

  Bit_Slice11_out1_5 <= Bit_Slice1_out1(2);

  Logical_Operator4_out1_5 <= Bit_Slice12_out1_5 OR Bit_Slice11_out1_5;

  Bit_Slice10_out1_5 <= Bit_Slice1_out1(1);

  Bit_Slice9_out1_6 <= Bit_Slice1_out1(0);

  Logical_Operator14_out1_5 <= Bit_Slice10_out1_5 OR Bit_Slice9_out1_6;

  Logical_Operator13_out1_5 <= Logical_Operator4_out1_5 OR Logical_Operator14_out1_5;

  Bit_Slice4_out1 <= BitSlice3_out1(7 DOWNTO 0);

  Bit_Slice8_out1_1 <= Bit_Slice4_out1(7);

  Bit_Slice7_out1_1 <= Bit_Slice4_out1(6);

  Logical_Operator1_out1_1 <= Bit_Slice8_out1_1 OR Bit_Slice7_out1_1;

  Bit_Slice6_out1_1 <= Bit_Slice4_out1(5);

  Bit_Slice5_out1 <= Bit_Slice4_out1(4);

  Logical_Operator3_out1 <= Bit_Slice6_out1_1 OR Bit_Slice5_out1;

  Bit_Slice3_out1 <= Bit_Slice4_out1(3);

  Bit_Slice2_out1_2 <= Bit_Slice4_out1(2);

  Bit_Slice1_out1_1 <= Bit_Slice4_out1(1);

  Bit_Slice_out1_1 <= Bit_Slice4_out1(0);

  Constant_out1_1 <= to_unsigned(16#37#, 6);

  Constant1_out1 <= to_unsigned(16#36#, 6);

  
  Switch_out1 <= Constant_out1_1 WHEN Bit_Slice_out1_1 = '0' ELSE
      Constant1_out1;

  Logical_Operator_out1_2 <= Bit_Slice3_out1 OR Bit_Slice2_out1_2;

  Constant2_out1 <= to_unsigned(16#35#, 6);

  
  Switch1_out1 <= Switch_out1 WHEN Bit_Slice1_out1_1 = '0' ELSE
      Constant2_out1;

  Constant3_out1 <= to_unsigned(16#34#, 6);

  
  Switch2_out1 <= Constant_out1_1 WHEN Bit_Slice2_out1_2 = '0' ELSE
      Constant3_out1;

  Constant4_out1 <= to_unsigned(16#33#, 6);

  Logical_Operator2_out1_1 <= Logical_Operator1_out1_1 OR Logical_Operator3_out1;

  
  Switch3_out1 <= Switch2_out1 WHEN Bit_Slice3_out1 = '0' ELSE
      Constant4_out1;

  
  Switch4_out1 <= Switch1_out1 WHEN Logical_Operator_out1_2 = '0' ELSE
      Switch3_out1;

  Constant5_out1 <= to_unsigned(16#32#, 6);

  
  Switch5_out1 <= Constant_out1_1 WHEN Bit_Slice5_out1 = '0' ELSE
      Constant5_out1;

  Constant6_out1 <= to_unsigned(16#31#, 6);

  
  Switch6_out1 <= Switch5_out1 WHEN Bit_Slice6_out1_1 = '0' ELSE
      Constant6_out1;

  Constant7_out1 <= to_unsigned(16#30#, 6);

  
  Switch7_out1 <= Constant_out1_1 WHEN Bit_Slice7_out1_1 = '0' ELSE
      Constant7_out1;

  Constant8_out1 <= to_unsigned(16#2F#, 6);

  
  Switch8_out1 <= Switch7_out1 WHEN Bit_Slice8_out1_1 = '0' ELSE
      Constant8_out1;

  Logical_Operator12_out1_5 <= Logical_Operator6_out1_5 OR Logical_Operator13_out1_5;

  
  Switch9_out1 <= Switch6_out1 WHEN Logical_Operator1_out1_1 = '0' ELSE
      Switch8_out1;

  
  Switch10_out1 <= Switch4_out1 WHEN Logical_Operator2_out1_1 = '0' ELSE
      Switch9_out1;

  Constant9_out1 <= to_unsigned(16#2E#, 6);

  
  Switch11_out1 <= Constant_out1_1 WHEN Bit_Slice9_out1_6 = '0' ELSE
      Constant9_out1;

  Constant10_out1 <= to_unsigned(16#2D#, 6);

  
  Switch12_out1 <= Switch11_out1 WHEN Bit_Slice10_out1_5 = '0' ELSE
      Constant10_out1;

  Constant11_out1 <= to_unsigned(16#2C#, 6);

  
  Switch14_out1 <= Constant_out1_1 WHEN Bit_Slice11_out1_5 = '0' ELSE
      Constant11_out1;

  Constant12_out1 <= to_unsigned(16#2B#, 6);

  
  Switch15_out1 <= Switch14_out1 WHEN Bit_Slice12_out1_5 = '0' ELSE
      Constant12_out1;

  
  Switch16_out1 <= Switch12_out1 WHEN Logical_Operator4_out1_5 = '0' ELSE
      Switch15_out1;

  Constant13_out1 <= to_unsigned(16#2A#, 6);

  
  Switch17_out1 <= Constant_out1_1 WHEN Bit_Slice13_out1_5 = '0' ELSE
      Constant13_out1;

  Constant14_out1 <= to_unsigned(16#29#, 6);

  
  Switch18_out1 <= Switch17_out1 WHEN Bit_Slice14_out1_5 = '0' ELSE
      Constant14_out1;

  Constant15_out1 <= to_unsigned(16#28#, 6);

  
  Switch19_out1 <= Constant_out1_1 WHEN Bit_Slice15_out1_5 = '0' ELSE
      Constant15_out1;

  Constant16_out1 <= to_unsigned(16#27#, 6);

  
  Switch20_out1 <= Switch19_out1 WHEN Bit_Slice16_out1_4 = '0' ELSE
      Constant16_out1;

  
  Switch21_out1 <= Switch18_out1 WHEN Logical_Operator5_out1_4 = '0' ELSE
      Switch20_out1;

  Logical_Operator_out1_3 <= Logical_Operator12_out1_3 OR Logical_Operator12_out1_4;

  
  Switch13_out1 <= Switch16_out1 WHEN Logical_Operator6_out1_5 = '0' ELSE
      Switch21_out1;

  
  Switch_out1_1 <= Switch10_out1 WHEN Logical_Operator12_out1_5 = '0' ELSE
      Switch13_out1;

  Constant9_out1_1 <= to_unsigned(16#26#, 6);

  
  Switch11_out1_1 <= Constant_out1_1 WHEN Bit_Slice9_out1_5 = '0' ELSE
      Constant9_out1_1;

  Constant10_out1_1 <= to_unsigned(16#25#, 6);

  
  Switch12_out1_1 <= Switch11_out1_1 WHEN Bit_Slice10_out1_4 = '0' ELSE
      Constant10_out1_1;

  Constant11_out1_1 <= to_unsigned(16#24#, 6);

  
  Switch14_out1_1 <= Constant_out1_1 WHEN Bit_Slice11_out1_4 = '0' ELSE
      Constant11_out1_1;

  Constant12_out1_1 <= to_unsigned(16#23#, 6);

  
  Switch15_out1_1 <= Switch14_out1_1 WHEN Bit_Slice12_out1_4 = '0' ELSE
      Constant12_out1_1;

  
  Switch16_out1_1 <= Switch12_out1_1 WHEN Logical_Operator4_out1_4 = '0' ELSE
      Switch15_out1_1;

  Constant13_out1_1 <= to_unsigned(16#22#, 6);

  
  Switch17_out1_1 <= Constant_out1_1 WHEN Bit_Slice13_out1_4 = '0' ELSE
      Constant13_out1_1;

  Constant14_out1_1 <= to_unsigned(16#21#, 6);

  
  Switch18_out1_1 <= Switch17_out1_1 WHEN Bit_Slice14_out1_4 = '0' ELSE
      Constant14_out1_1;

  Constant15_out1_1 <= to_unsigned(16#20#, 6);

  
  Switch19_out1_1 <= Constant_out1_1 WHEN Bit_Slice15_out1_4 = '0' ELSE
      Constant15_out1_1;

  Constant16_out1_1 <= to_unsigned(16#1F#, 6);

  
  Switch20_out1_1 <= Switch19_out1_1 WHEN Bit_Slice16_out1_3 = '0' ELSE
      Constant16_out1_1;

  
  Switch21_out1_1 <= Switch18_out1_1 WHEN Logical_Operator5_out1_3 = '0' ELSE
      Switch20_out1_1;

  
  Switch13_out1_1 <= Switch16_out1_1 WHEN Logical_Operator6_out1_4 = '0' ELSE
      Switch21_out1_1;

  Constant9_out1_2 <= to_unsigned(16#1E#, 6);

  
  Switch11_out1_2 <= Constant_out1_1 WHEN Bit_Slice9_out1_4 = '0' ELSE
      Constant9_out1_2;

  Constant10_out1_2 <= to_unsigned(16#1D#, 6);

  
  Switch12_out1_2 <= Switch11_out1_2 WHEN Bit_Slice10_out1_3 = '0' ELSE
      Constant10_out1_2;

  Constant11_out1_2 <= to_unsigned(16#1C#, 6);

  
  Switch14_out1_2 <= Constant_out1_1 WHEN Bit_Slice11_out1_3 = '0' ELSE
      Constant11_out1_2;

  Constant12_out1_2 <= to_unsigned(16#1B#, 6);

  
  Switch15_out1_2 <= Switch14_out1_2 WHEN Bit_Slice12_out1_3 = '0' ELSE
      Constant12_out1_2;

  
  Switch16_out1_2 <= Switch12_out1_2 WHEN Logical_Operator4_out1_3 = '0' ELSE
      Switch15_out1_2;

  Constant13_out1_2 <= to_unsigned(16#1A#, 6);

  
  Switch17_out1_2 <= Constant_out1_1 WHEN Bit_Slice13_out1_3 = '0' ELSE
      Constant13_out1_2;

  Constant14_out1_2 <= to_unsigned(16#19#, 6);

  
  Switch18_out1_2 <= Switch17_out1_2 WHEN Bit_Slice14_out1_3 = '0' ELSE
      Constant14_out1_2;

  Constant15_out1_2 <= to_unsigned(16#18#, 6);

  
  Switch19_out1_2 <= Constant_out1_1 WHEN Bit_Slice15_out1_3 = '0' ELSE
      Constant15_out1_2;

  Constant16_out1_2 <= to_unsigned(16#17#, 6);

  
  Switch20_out1_2 <= Switch19_out1_2 WHEN Bit_Slice16_out1_2 = '0' ELSE
      Constant16_out1_2;

  
  Switch21_out1_2 <= Switch18_out1_2 WHEN Logical_Operator5_out1_2 = '0' ELSE
      Switch20_out1_2;

  
  Switch13_out1_2 <= Switch16_out1_2 WHEN Logical_Operator6_out1_3 = '0' ELSE
      Switch21_out1_2;

  Logical_Operator3_out1_1 <= Logical_Operator12_out1 OR Logical_Operator2_out1;

  
  Switch2_out1_1 <= Switch13_out1_1 WHEN Logical_Operator12_out1_3 = '0' ELSE
      Switch13_out1_2;

  
  Switch1_out1_1 <= Switch_out1_1 WHEN Logical_Operator_out1_3 = '0' ELSE
      Switch2_out1_1;

  Constant9_out1_3 <= to_unsigned(16#16#, 6);

  
  Switch11_out1_3 <= Constant_out1_1 WHEN Bit_Slice9_out1_3 = '0' ELSE
      Constant9_out1_3;

  Constant10_out1_3 <= to_unsigned(16#15#, 6);

  
  Switch12_out1_3 <= Switch11_out1_3 WHEN Bit_Slice10_out1_2 = '0' ELSE
      Constant10_out1_3;

  Constant11_out1_3 <= to_unsigned(16#14#, 6);

  
  Switch14_out1_3 <= Constant_out1_1 WHEN Bit_Slice11_out1_2 = '0' ELSE
      Constant11_out1_3;

  Constant12_out1_3 <= to_unsigned(16#13#, 6);

  
  Switch15_out1_3 <= Switch14_out1_3 WHEN Bit_Slice12_out1_2 = '0' ELSE
      Constant12_out1_3;

  
  Switch16_out1_3 <= Switch12_out1_3 WHEN Logical_Operator4_out1_2 = '0' ELSE
      Switch15_out1_3;

  Constant13_out1_3 <= to_unsigned(16#12#, 6);

  
  Switch17_out1_3 <= Constant_out1_1 WHEN Bit_Slice13_out1_2 = '0' ELSE
      Constant13_out1_3;

  Constant14_out1_3 <= to_unsigned(16#11#, 6);

  
  Switch18_out1_3 <= Switch17_out1_3 WHEN Bit_Slice14_out1_2 = '0' ELSE
      Constant14_out1_3;

  Constant15_out1_3 <= to_unsigned(16#10#, 6);

  
  Switch19_out1_3 <= Constant_out1_1 WHEN Bit_Slice15_out1_2 = '0' ELSE
      Constant15_out1_3;

  Constant16_out1_3 <= to_unsigned(16#0F#, 6);

  
  Switch20_out1_3 <= Switch19_out1_3 WHEN Bit_Slice16_out1_1 = '0' ELSE
      Constant16_out1_3;

  
  Switch21_out1_3 <= Switch18_out1_3 WHEN Logical_Operator5_out1_1 = '0' ELSE
      Switch20_out1_3;

  
  Switch13_out1_3 <= Switch16_out1_3 WHEN Logical_Operator6_out1_2 = '0' ELSE
      Switch21_out1_3;

  Constant9_out1_4 <= to_unsigned(16#0E#, 6);

  
  Switch11_out1_4 <= Constant_out1_1 WHEN Bit_Slice9_out1_2 = '0' ELSE
      Constant9_out1_4;

  Constant10_out1_4 <= to_unsigned(16#0D#, 6);

  
  Switch12_out1_4 <= Switch11_out1_4 WHEN Bit_Slice10_out1_1 = '0' ELSE
      Constant10_out1_4;

  Constant11_out1_4 <= to_unsigned(16#0C#, 6);

  
  Switch14_out1_4 <= Constant_out1_1 WHEN Bit_Slice11_out1_1 = '0' ELSE
      Constant11_out1_4;

  Constant12_out1_4 <= to_unsigned(16#0B#, 6);

  
  Switch15_out1_4 <= Switch14_out1_4 WHEN Bit_Slice12_out1_1 = '0' ELSE
      Constant12_out1_4;

  
  Switch16_out1_4 <= Switch12_out1_4 WHEN Logical_Operator4_out1_1 = '0' ELSE
      Switch15_out1_4;

  Constant13_out1_4 <= to_unsigned(16#0A#, 6);

  
  Switch17_out1_4 <= Constant_out1_1 WHEN Bit_Slice13_out1_1 = '0' ELSE
      Constant13_out1_4;

  Constant14_out1_4 <= to_unsigned(16#09#, 6);

  
  Switch18_out1_4 <= Switch17_out1_4 WHEN Bit_Slice14_out1_1 = '0' ELSE
      Constant14_out1_4;

  Constant15_out1_4 <= to_unsigned(16#08#, 6);

  
  Switch19_out1_4 <= Constant_out1_1 WHEN Bit_Slice15_out1_1 = '0' ELSE
      Constant15_out1_4;

  Constant16_out1_4 <= to_unsigned(16#07#, 6);

  
  Switch20_out1_4 <= Switch19_out1_4 WHEN Bit_Slice16_out1 = '0' ELSE
      Constant16_out1_4;

  
  Switch21_out1_4 <= Switch18_out1_4 WHEN Logical_Operator5_out1 = '0' ELSE
      Switch20_out1_4;

  
  Switch13_out1_4 <= Switch16_out1_4 WHEN Logical_Operator6_out1_1 = '0' ELSE
      Switch21_out1_4;

  
  Switch3_out1_1 <= Switch13_out1_3 WHEN Logical_Operator12_out1_1 = '0' ELSE
      Switch13_out1_4;

  Constant9_out1_5 <= to_unsigned(16#06#, 6);

  
  Switch11_out1_5 <= Constant_out1_1 WHEN Bit_Slice9_out1 = '0' ELSE
      Constant9_out1_5;

  Constant10_out1_5 <= to_unsigned(16#05#, 6);

  
  Switch12_out1_5 <= Switch11_out1_5 WHEN Bit_Slice10_out1 = '0' ELSE
      Constant10_out1_5;

  Constant11_out1_5 <= to_unsigned(16#04#, 6);

  
  Switch14_out1_5 <= Constant_out1_1 WHEN Bit_Slice11_out1 = '0' ELSE
      Constant11_out1_5;

  Constant12_out1_5 <= to_unsigned(16#03#, 6);

  
  Switch15_out1_5 <= Switch14_out1_5 WHEN Bit_Slice12_out1 = '0' ELSE
      Constant12_out1_5;

  
  Switch16_out1_5 <= Switch12_out1_5 WHEN Logical_Operator4_out1 = '0' ELSE
      Switch15_out1_5;

  Constant13_out1_5 <= to_unsigned(16#02#, 6);

  
  Switch17_out1_5 <= Constant_out1_1 WHEN Bit_Slice13_out1 = '0' ELSE
      Constant13_out1_5;

  Constant14_out1_5 <= to_unsigned(16#01#, 6);

  
  Switch18_out1_5 <= Switch17_out1_5 WHEN Bit_Slice14_out1 = '0' ELSE
      Constant14_out1_5;

  Constant15_out1_5 <= to_unsigned(16#00#, 6);

  
  Switch19_out1_5 <= Constant_out1_1 WHEN Bit_Slice15_out1 = '0' ELSE
      Constant15_out1_5;

  
  Switch21_out1_5 <= Switch18_out1_5 WHEN Bit_Slice15_out1 = '0' ELSE
      Switch19_out1_5;

  
  Switch13_out1_5 <= Switch16_out1_5 WHEN Logical_Operator6_out1 = '0' ELSE
      Switch21_out1_5;

  
  Switch5_out1_1 <= Switch3_out1_1 WHEN Logical_Operator12_out1 = '0' ELSE
      Switch13_out1_5;

  
  Switch6_out1_1 <= Switch1_out1_1 WHEN Logical_Operator3_out1_1 = '0' ELSE
      Switch5_out1_1;

  Bit_Slice_out1_2 <= if_Exponent_0_out1(5 DOWNTO 0);

  
  shift_length_exp_a_cor_relop1 <= '1' WHEN Switch6_out1_1 >= Bit_Slice_out1_2 ELSE
      '0';

  Bit_Slice1_out1_2 <= if_Exponent_0_out1(10 DOWNTO 6);

  
  Compare_To_Zero_out1_1 <= '1' WHEN Bit_Slice1_out1_2 = to_unsigned(16#00#, 5) ELSE
      '0';

  Logical_Operator1_out1_2 <= shift_length_exp_a_cor_relop1 AND Compare_To_Zero_out1_1;

  C1_out1 <= to_unsigned(16#01#, 8);

  exp_a_cor_1_out1 <= Bit_Slice_out1_2 - resize(C1_out1, 6);

  
  if_shift_length_exp_a_cor_1_out1 <= Switch6_out1_1 WHEN Logical_Operator1_out1_2 = '0' ELSE
      exp_a_cor_1_out1;

  bitsll_Sum_shift_length_out1 <= mant_a_ext_mant_b_shifted_out1 sll to_integer(if_shift_length_exp_a_cor_1_out1);

  bitsrl_Sum_1_out1 <= mant_a_ext_mant_b_shifted_out1 srl 1;

  
  if_bitget_Sum_Sum_WordLength_out1 <= bitsll_Sum_shift_length_out1 WHEN BitSlice_out1 = '0' ELSE
      bitsrl_Sum_1_out1;

  C5_out1 <= to_unsigned(0, 56);

  
  if_exp_norm_cfType_Exponent_I_out1 <= if_bitget_Sum_Sum_WordLength_out1 WHEN Logical_Operator_out1_1 = '0' ELSE
      C5_out1;

  BitSlice6_out1 <= if_exp_norm_cfType_Exponent_I_out1(53 DOWNTO 1);

  BitSlice5_out1 <= if_exp_norm_cfType_Exponent_I_out1(0);

  Bit_Slice1_out1_3 <= if_opp_Sign_out1(56);

  Logical_Operator_out1_4 <=  NOT Bit_Slice1_out1_3;

  Bit_Slice35_out1 <= if_opp_Sign_out1(55);

  Bit_Slice33_out1 <= unsigned(if_opp_Sign_out1(54 DOWNTO 52));

  Bit_Reduce13_out1 <= (Bit_Slice33_out1(2) OR Bit_Slice33_out1(1) OR Bit_Slice33_out1(0));

  Bit_Slice32_out1 <= unsigned(if_opp_Sign_out1(51 DOWNTO 48));

  Bit_Reduce12_out1 <= (Bit_Slice32_out1(3) OR Bit_Slice32_out1(2) OR Bit_Slice32_out1(1) OR Bit_Slice32_out1(0));

  Bit_Slice30_out1 <= unsigned(if_opp_Sign_out1(47 DOWNTO 44));

  Bit_Reduce11_out1 <= (Bit_Slice30_out1(3) OR Bit_Slice30_out1(2) OR Bit_Slice30_out1(1) OR Bit_Slice30_out1(0));

  Bit_Slice24_out1 <= unsigned(if_opp_Sign_out1(43 DOWNTO 40));

  Bit_Reduce10_out1 <= (Bit_Slice24_out1(3) OR Bit_Slice24_out1(2) OR Bit_Slice24_out1(1) OR Bit_Slice24_out1(0));

  Bit_Slice28_out1 <= unsigned(if_opp_Sign_out1(39 DOWNTO 36));

  Bit_Reduce9_out1 <= (Bit_Slice28_out1(3) OR Bit_Slice28_out1(2) OR Bit_Slice28_out1(1) OR Bit_Slice28_out1(0));

  Bit_Slice22_out1 <= unsigned(if_opp_Sign_out1(35 DOWNTO 32));

  Bit_Reduce8_out1 <= (Bit_Slice22_out1(3) OR Bit_Slice22_out1(2) OR Bit_Slice22_out1(1) OR Bit_Slice22_out1(0));

  Bit_Slice20_out1 <= unsigned(if_opp_Sign_out1(31 DOWNTO 28));

  Bit_Reduce7_out1 <= (Bit_Slice20_out1(3) OR Bit_Slice20_out1(2) OR Bit_Slice20_out1(1) OR Bit_Slice20_out1(0));

  Bit_Slice16_out1_5 <= unsigned(if_opp_Sign_out1(27 DOWNTO 24));

  Bit_Reduce6_out1 <= (Bit_Slice16_out1_5(3) OR Bit_Slice16_out1_5(2) OR Bit_Slice16_out1_5(1) OR Bit_Slice16_out1_5(0));

  Bit_Slice14_out1_6 <= unsigned(if_opp_Sign_out1(23 DOWNTO 20));

  Bit_Reduce5_out1 <= (Bit_Slice14_out1_6(3) OR Bit_Slice14_out1_6(2) OR Bit_Slice14_out1_6(1) OR Bit_Slice14_out1_6(0));

  Bit_Slice18_out1 <= unsigned(if_opp_Sign_out1(19 DOWNTO 16));

  Bit_Reduce4_out1 <= (Bit_Slice18_out1(3) OR Bit_Slice18_out1(2) OR Bit_Slice18_out1(1) OR Bit_Slice18_out1(0));

  Bit_Slice12_out1_6 <= unsigned(if_opp_Sign_out1(15 DOWNTO 12));

  Bit_Reduce3_out1 <= (Bit_Slice12_out1_6(3) OR Bit_Slice12_out1_6(2) OR Bit_Slice12_out1_6(1) OR Bit_Slice12_out1_6(0));

  Bit_Slice10_out1_6 <= unsigned(if_opp_Sign_out1(11 DOWNTO 8));

  Bit_Reduce2_out1 <= (Bit_Slice10_out1_6(3) OR Bit_Slice10_out1_6(2) OR Bit_Slice10_out1_6(1) OR Bit_Slice10_out1_6(0));

  Bit_Slice8_out1_2 <= unsigned(if_opp_Sign_out1(7 DOWNTO 4));

  Bit_Reduce1_out1 <= (Bit_Slice8_out1_2(3) OR Bit_Slice8_out1_2(2) OR Bit_Slice8_out1_2(1) OR Bit_Slice8_out1_2(0));

  Bit_Slice6_out1_2 <= unsigned(if_opp_Sign_out1(3 DOWNTO 0));

  Bit_Reduce_out1 <= (Bit_Slice6_out1_2(3) OR Bit_Slice6_out1_2(2) OR Bit_Slice6_out1_2(1) OR Bit_Slice6_out1_2(0));

  Logical_Operator1_out1_3 <= Bit_Reduce1_out1 OR Bit_Reduce_out1;

  Logical_Operator2_out1_2 <= Bit_Reduce2_out1 OR Logical_Operator1_out1_3;

  Logical_Operator3_out1_2 <= Bit_Reduce3_out1 OR Logical_Operator2_out1_2;

  Logical_Operator4_out1_6 <= Bit_Reduce4_out1 OR Logical_Operator3_out1_2;

  Logical_Operator5_out1_5 <= Bit_Reduce5_out1 OR Logical_Operator4_out1_6;

  Logical_Operator6_out1_6 <= Bit_Reduce6_out1 OR Logical_Operator5_out1_5;

  Logical_Operator7_out1_6 <= Bit_Reduce7_out1 OR Logical_Operator6_out1_6;

  Logical_Operator8_out1 <= Bit_Reduce8_out1 OR Logical_Operator7_out1_6;

  Logical_Operator9_out1 <= Bit_Reduce9_out1 OR Logical_Operator8_out1;

  Logical_Operator10_out1 <= Bit_Reduce10_out1 OR Logical_Operator9_out1;

  Logical_Operator12_out1_6 <= Bit_Reduce11_out1 OR Logical_Operator10_out1;

  Logical_Operator13_out1_6 <= Bit_Reduce12_out1 OR Logical_Operator12_out1_6;

  Logical_Operator14_out1_6 <= Bit_Reduce13_out1 OR Logical_Operator13_out1_6;

  Logical_Operator11_out1 <= Bit_Slice35_out1 OR Logical_Operator14_out1_6;

  Logical_Operator_out1_5 <= Logical_Operator_out1_4 AND Logical_Operator11_out1;

  Bit_Slice1_out1_4 <= if_opp_Sign_1_out1(2);

  Logical_Operator2_out1_3 <= Logical_Operator_out1_5 AND Bit_Slice1_out1_4;

  Bit_Slice5_out1_1 <= if_opp_Sign_1_out1(0);

  Logical_Operator2_out1_4 <=  NOT Bit_Slice5_out1_1;

  Bit_Slice2_out1_3 <= if_opp_Sign_1_out1(1);

  Logical_Operator_out1_6 <=  NOT Bit_Slice2_out1_3;

  Logical_Operator1_out1_4 <= Logical_Operator2_out1_4 AND Logical_Operator_out1_6;

  
  Switch_out1_2 <= Logical_Operator_out1_5 WHEN Logical_Operator1_out1_4 = '0' ELSE
      Logical_Operator11_out1;

  Logical_Operator1_out1_5 <= Logical_Operator2_out1_3 OR Switch_out1_2;

  Bit_Slice3_out1_1 <= if_opp_Sign_1_out1(3);

  Bit_Slice2_out1_4 <= Bit_Slice33_out1(2);

  Logical_Operator2_out1_5 <= Bit_Slice2_out1_4 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_5 <= Bit_Slice33_out1(1);

  Logical_Operator1_out1_6 <= Logical_Operator2_out1_5 OR Bit_Slice1_out1_5;

  Logical_Operator4_out1_7 <= Logical_Operator1_out1_6 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_3 <= Bit_Slice33_out1(0);

  Logical_Operator7_out1_7 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_3 <= Bit_Slice_out1_3 AND Logical_Operator7_out1_7;

  Logical_Operator6_out1_7 <= Logical_Operator3_out1_3 OR Logical_Operator13_out1_6;

  Logical_Operator5_out1_6 <= Logical_Operator4_out1_7 OR Logical_Operator6_out1_7;

  Bit_Slice31_out1 <= unsigned(if_opp_Sign_out1(50 DOWNTO 48));

  Bit_Slice2_out1_5 <= Bit_Slice31_out1(2);

  Logical_Operator2_out1_6 <= Bit_Slice2_out1_5 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_6 <= Bit_Slice31_out1(1);

  Logical_Operator1_out1_7 <= Logical_Operator2_out1_6 OR Bit_Slice1_out1_6;

  Logical_Operator4_out1_8 <= Logical_Operator1_out1_7 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_4 <= Bit_Slice31_out1(0);

  Logical_Operator7_out1_8 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_4 <= Bit_Slice_out1_4 AND Logical_Operator7_out1_8;

  Logical_Operator4_out1_9 <= Logical_Operator1_out1_5 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_5 <= Logical_Operator5_out1_6 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_8 <= Logical_Operator3_out1_4 OR Logical_Operator12_out1_6;

  Logical_Operator5_out1_7 <= Logical_Operator4_out1_8 OR Logical_Operator6_out1_8;

  Logical_Operator6_out1_9 <= Logical_Operator3_out1_5 OR Logical_Operator5_out1_7;

  Logical_Operator5_out1_8 <= Logical_Operator4_out1_9 OR Logical_Operator6_out1_9;

  Bit_Slice4_out1_1 <= if_opp_Sign_1_out1(4);

  Bit_Slice25_out1 <= unsigned(if_opp_Sign_out1(46 DOWNTO 44));

  Bit_Slice2_out1_6 <= Bit_Slice25_out1(2);

  Logical_Operator2_out1_7 <= Bit_Slice2_out1_6 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_7 <= Bit_Slice25_out1(1);

  Logical_Operator1_out1_8 <= Logical_Operator2_out1_7 OR Bit_Slice1_out1_7;

  Logical_Operator4_out1_10 <= Logical_Operator1_out1_8 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_5 <= Bit_Slice25_out1(0);

  Logical_Operator7_out1_9 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_6 <= Bit_Slice_out1_5 AND Logical_Operator7_out1_9;

  Logical_Operator6_out1_10 <= Logical_Operator3_out1_6 OR Logical_Operator10_out1;

  Logical_Operator5_out1_9 <= Logical_Operator4_out1_10 OR Logical_Operator6_out1_10;

  Bit_Slice29_out1 <= unsigned(if_opp_Sign_out1(42 DOWNTO 40));

  Bit_Slice2_out1_7 <= Bit_Slice29_out1(2);

  Logical_Operator2_out1_8 <= Bit_Slice2_out1_7 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_8 <= Bit_Slice29_out1(1);

  Logical_Operator1_out1_9 <= Logical_Operator2_out1_8 OR Bit_Slice1_out1_8;

  Logical_Operator4_out1_11 <= Logical_Operator1_out1_9 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_6 <= Bit_Slice29_out1(0);

  Logical_Operator7_out1_10 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_7 <= Bit_Slice_out1_6 AND Logical_Operator7_out1_10;

  Logical_Operator2_out1_9 <= Logical_Operator5_out1_9 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_11 <= Logical_Operator3_out1_7 OR Logical_Operator9_out1;

  Logical_Operator5_out1_10 <= Logical_Operator4_out1_11 OR Logical_Operator6_out1_11;

  Logical_Operator1_out1_10 <= Logical_Operator2_out1_9 OR Logical_Operator5_out1_10;

  Bit_Slice23_out1 <= unsigned(if_opp_Sign_out1(38 DOWNTO 36));

  Bit_Slice2_out1_8 <= Bit_Slice23_out1(2);

  Logical_Operator2_out1_10 <= Bit_Slice2_out1_8 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_9 <= Bit_Slice23_out1(1);

  Logical_Operator1_out1_11 <= Logical_Operator2_out1_10 OR Bit_Slice1_out1_9;

  Logical_Operator4_out1_12 <= Logical_Operator1_out1_11 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_7 <= Bit_Slice23_out1(0);

  Logical_Operator7_out1_11 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_8 <= Bit_Slice_out1_7 AND Logical_Operator7_out1_11;

  Logical_Operator6_out1_12 <= Logical_Operator3_out1_8 OR Logical_Operator8_out1;

  Logical_Operator5_out1_11 <= Logical_Operator4_out1_12 OR Logical_Operator6_out1_12;

  Bit_Slice21_out1 <= unsigned(if_opp_Sign_out1(34 DOWNTO 32));

  Bit_Slice2_out1_9 <= Bit_Slice21_out1(2);

  Logical_Operator2_out1_11 <= Bit_Slice2_out1_9 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_10 <= Bit_Slice21_out1(1);

  Logical_Operator1_out1_12 <= Logical_Operator2_out1_11 OR Bit_Slice1_out1_10;

  Logical_Operator4_out1_13 <= Logical_Operator1_out1_12 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_8 <= Bit_Slice21_out1(0);

  Logical_Operator7_out1_12 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_9 <= Bit_Slice_out1_8 AND Logical_Operator7_out1_12;

  Logical_Operator2_out1_12 <= Logical_Operator5_out1_8 AND Bit_Slice4_out1_1;

  Logical_Operator4_out1_14 <= Logical_Operator1_out1_10 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_10 <= Logical_Operator5_out1_11 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_13 <= Logical_Operator3_out1_9 OR Logical_Operator7_out1_6;

  Logical_Operator5_out1_12 <= Logical_Operator4_out1_13 OR Logical_Operator6_out1_13;

  Logical_Operator6_out1_14 <= Logical_Operator3_out1_10 OR Logical_Operator5_out1_12;

  Logical_Operator5_out1_13 <= Logical_Operator4_out1_14 OR Logical_Operator6_out1_14;

  Logical_Operator1_out1_13 <= Logical_Operator2_out1_12 OR Logical_Operator5_out1_13;

  Bit_Slice17_out1 <= unsigned(if_opp_Sign_out1(30 DOWNTO 28));

  Bit_Slice2_out1_10 <= Bit_Slice17_out1(2);

  Logical_Operator2_out1_13 <= Bit_Slice2_out1_10 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_11 <= Bit_Slice17_out1(1);

  Logical_Operator1_out1_14 <= Logical_Operator2_out1_13 OR Bit_Slice1_out1_11;

  Logical_Operator4_out1_15 <= Logical_Operator1_out1_14 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_9 <= Bit_Slice17_out1(0);

  Logical_Operator7_out1_13 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_11 <= Bit_Slice_out1_9 AND Logical_Operator7_out1_13;

  Logical_Operator6_out1_15 <= Logical_Operator3_out1_11 OR Logical_Operator6_out1_6;

  Logical_Operator5_out1_14 <= Logical_Operator4_out1_15 OR Logical_Operator6_out1_15;

  Bit_Slice15_out1_6 <= unsigned(if_opp_Sign_out1(26 DOWNTO 24));

  Bit_Slice2_out1_11 <= Bit_Slice15_out1_6(2);

  Logical_Operator2_out1_14 <= Bit_Slice2_out1_11 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_12 <= Bit_Slice15_out1_6(1);

  Logical_Operator1_out1_15 <= Logical_Operator2_out1_14 OR Bit_Slice1_out1_12;

  Logical_Operator4_out1_16 <= Logical_Operator1_out1_15 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_10 <= Bit_Slice15_out1_6(0);

  Logical_Operator7_out1_14 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_12 <= Bit_Slice_out1_10 AND Logical_Operator7_out1_14;

  Logical_Operator2_out1_15 <= Logical_Operator5_out1_14 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_16 <= Logical_Operator3_out1_12 OR Logical_Operator5_out1_5;

  Logical_Operator5_out1_15 <= Logical_Operator4_out1_16 OR Logical_Operator6_out1_16;

  Logical_Operator1_out1_16 <= Logical_Operator2_out1_15 OR Logical_Operator5_out1_15;

  Bit_Slice19_out1 <= unsigned(if_opp_Sign_out1(22 DOWNTO 20));

  Bit_Slice2_out1_12 <= Bit_Slice19_out1(2);

  Logical_Operator2_out1_16 <= Bit_Slice2_out1_12 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_13 <= Bit_Slice19_out1(1);

  Logical_Operator1_out1_17 <= Logical_Operator2_out1_16 OR Bit_Slice1_out1_13;

  Logical_Operator4_out1_17 <= Logical_Operator1_out1_17 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_11 <= Bit_Slice19_out1(0);

  Logical_Operator7_out1_15 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_13 <= Bit_Slice_out1_11 AND Logical_Operator7_out1_15;

  Logical_Operator6_out1_17 <= Logical_Operator3_out1_13 OR Logical_Operator4_out1_6;

  Logical_Operator5_out1_16 <= Logical_Operator4_out1_17 OR Logical_Operator6_out1_17;

  Bit_Slice13_out1_6 <= unsigned(if_opp_Sign_out1(18 DOWNTO 16));

  Bit_Slice2_out1_13 <= Bit_Slice13_out1_6(2);

  Logical_Operator2_out1_17 <= Bit_Slice2_out1_13 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_14 <= Bit_Slice13_out1_6(1);

  Logical_Operator1_out1_18 <= Logical_Operator2_out1_17 OR Bit_Slice1_out1_14;

  Logical_Operator4_out1_18 <= Logical_Operator1_out1_18 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_12 <= Bit_Slice13_out1_6(0);

  Logical_Operator7_out1_16 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_14 <= Bit_Slice_out1_12 AND Logical_Operator7_out1_16;

  Logical_Operator4_out1_19 <= Logical_Operator1_out1_16 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_15 <= Logical_Operator5_out1_16 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_18 <= Logical_Operator3_out1_14 OR Logical_Operator3_out1_2;

  Logical_Operator5_out1_17 <= Logical_Operator4_out1_18 OR Logical_Operator6_out1_18;

  Logical_Operator6_out1_19 <= Logical_Operator3_out1_15 OR Logical_Operator5_out1_17;

  Logical_Operator5_out1_18 <= Logical_Operator4_out1_19 OR Logical_Operator6_out1_19;

  Bit_Slice11_out1_6 <= unsigned(if_opp_Sign_out1(14 DOWNTO 12));

  Bit_Slice2_out1_14 <= Bit_Slice11_out1_6(2);

  Logical_Operator2_out1_18 <= Bit_Slice2_out1_14 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_15 <= Bit_Slice11_out1_6(1);

  Logical_Operator1_out1_19 <= Logical_Operator2_out1_18 OR Bit_Slice1_out1_15;

  Logical_Operator4_out1_20 <= Logical_Operator1_out1_19 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_13 <= Bit_Slice11_out1_6(0);

  Logical_Operator7_out1_17 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_16 <= Bit_Slice_out1_13 AND Logical_Operator7_out1_17;

  Logical_Operator6_out1_20 <= Logical_Operator3_out1_16 OR Logical_Operator2_out1_2;

  Logical_Operator5_out1_19 <= Logical_Operator4_out1_20 OR Logical_Operator6_out1_20;

  Bit_Slice9_out1_7 <= unsigned(if_opp_Sign_out1(10 DOWNTO 8));

  Bit_Slice2_out1_15 <= Bit_Slice9_out1_7(2);

  Logical_Operator2_out1_19 <= Bit_Slice2_out1_15 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_16 <= Bit_Slice9_out1_7(1);

  Logical_Operator1_out1_20 <= Logical_Operator2_out1_19 OR Bit_Slice1_out1_16;

  Logical_Operator4_out1_21 <= Logical_Operator1_out1_20 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_14 <= Bit_Slice9_out1_7(0);

  Logical_Operator7_out1_18 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_17 <= Bit_Slice_out1_14 AND Logical_Operator7_out1_18;

  Logical_Operator2_out1_20 <= Logical_Operator5_out1_19 AND Bit_Slice1_out1_4;

  Logical_Operator6_out1_21 <= Logical_Operator3_out1_17 OR Logical_Operator1_out1_3;

  Logical_Operator5_out1_20 <= Logical_Operator4_out1_21 OR Logical_Operator6_out1_21;

  Logical_Operator1_out1_21 <= Logical_Operator2_out1_20 OR Logical_Operator5_out1_20;

  Bit_Slice7_out1_2 <= unsigned(if_opp_Sign_out1(6 DOWNTO 4));

  Bit_Slice2_out1_16 <= Bit_Slice7_out1_2(2);

  Logical_Operator2_out1_21 <= Bit_Slice2_out1_16 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_17 <= Bit_Slice7_out1_2(1);

  Logical_Operator1_out1_22 <= Logical_Operator2_out1_21 OR Bit_Slice1_out1_17;

  Logical_Operator4_out1_22 <= Logical_Operator1_out1_22 AND Bit_Slice2_out1_3;

  Bit_Slice_out1_15 <= Bit_Slice7_out1_2(0);

  Logical_Operator7_out1_19 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_18 <= Bit_Slice_out1_15 AND Logical_Operator7_out1_19;

  Logical_Operator6_out1_22 <= Logical_Operator3_out1_18 OR Bit_Reduce_out1;

  Logical_Operator5_out1_21 <= Logical_Operator4_out1_22 OR Logical_Operator6_out1_22;

  Bit_Slice_out1_16 <= unsigned(if_opp_Sign_out1(2 DOWNTO 0));

  Bit_Slice2_out1_17 <= Bit_Slice_out1_16(2);

  Logical_Operator2_out1_22 <= Bit_Slice2_out1_17 AND Bit_Slice5_out1_1;

  Bit_Slice1_out1_18 <= Bit_Slice_out1_16(1);

  Logical_Operator1_out1_23 <= Logical_Operator2_out1_22 OR Bit_Slice1_out1_18;

  Bit_Slice_out1_17 <= Bit_Slice_out1_16(0);

  Logical_Operator7_out1_20 <= Bit_Slice5_out1_1 OR Bit_Slice2_out1_3;

  Logical_Operator3_out1_19 <= Bit_Slice_out1_17 AND Logical_Operator7_out1_20;

  Bit_Slice27_out1 <= if_opp_Sign_1_out1(5);

  Logical_Operator4_out1_23 <= Logical_Operator1_out1_13 AND Bit_Slice27_out1;

  Logical_Operator3_out1_20 <= Logical_Operator5_out1_18 AND Bit_Slice4_out1_1;

  Logical_Operator4_out1_24 <= Logical_Operator1_out1_21 AND Bit_Slice3_out1_1;

  Logical_Operator3_out1_21 <= Logical_Operator5_out1_21 AND Bit_Slice1_out1_4;

  Logical_Operator4_out1_25 <= Logical_Operator1_out1_23 AND Bit_Slice2_out1_3;

  Constant_out1_2 <= '0';

  Logical_Operator6_out1_23 <= Logical_Operator3_out1_19 OR Constant_out1_2;

  Logical_Operator5_out1_22 <= Logical_Operator4_out1_25 OR Logical_Operator6_out1_23;

  Logical_Operator6_out1_24 <= Logical_Operator3_out1_21 OR Logical_Operator5_out1_22;

  Logical_Operator5_out1_23 <= Logical_Operator4_out1_24 OR Logical_Operator6_out1_24;

  Logical_Operator6_out1_25 <= Logical_Operator3_out1_20 OR Logical_Operator5_out1_23;

  Logical_Operator5_out1_24 <= Logical_Operator4_out1_23 OR Logical_Operator6_out1_25;

  BitSlice1_out1 <= mant_a_ext_mant_b_shifted_out1(0);

  sticky_bitget_Sum_1_out1 <= BitSlice1_out1 OR Logical_Operator5_out1_24;

  BitSlice_out1_1 <= BitSlice6_out1(0);

  BitSlice1_out1_1 <= BitSlice6_out1(1);

  
  if_bitget_Sum_Sum_WordLength_2_out1 <= Logical_Operator5_out1_24 WHEN BitSlice_out1 = '0' ELSE
      sticky_bitget_Sum_1_out1;

  sticky_bitget_Sum_1_out1_1 <= BitSlice5_out1 OR if_bitget_Sum_Sum_WordLength_2_out1;

  alphabitget_Mant_tmp_2_0_out1 <= BitSlice1_out1_1 OR sticky_bitget_Sum_1_out1_1;

  alphabitget_Mant_tmp_1_0_out1 <= BitSlice_out1_1 AND alphabitget_Mant_tmp_2_0_out1;

  alpha0_out1_2 <= '0';

  BitSlice4_out1 <= BitSlice6_out1(52 DOWNTO 1);

  Bit_Concat_out1_2 <= alpha0_out1_2 & BitSlice4_out1;

  cast_2_like_Mant_tmp_out1 <= to_unsigned(1, 53);

  Mant_tmp_cast_2_like_Man_out1 <= Bit_Concat_out1_2 + cast_2_like_Mant_tmp_out1;

  
  if_bitget_Mant_tmp_1_0_out1 <= Bit_Concat_out1_2 WHEN alphabitget_Mant_tmp_1_0_out1 = '0' ELSE
      Mant_tmp_cast_2_like_Man_out1;

  BitSlice2_out1 <= if_bitget_Mant_tmp_1_0_out1(52);

  BitSlice4_out1_1 <= if_bitget_Sum_Sum_WordLength_out1(54);

  C4_out1 <= to_unsigned(16#000#, 11);

  
  Sum_0_out1 <= '1' WHEN mant_a_ext_mant_b_shifted_out1 = to_unsigned(0, 56) ELSE
      '0';

  exp_a_cor_shift_length_out1 <= if_Exponent_0_out1 - resize(Switch6_out1_1, 11);

  C2_out1 <= to_unsigned(16#001#, 11);

  
  if_shift_length_exp_a_cor_out1 <= exp_a_cor_shift_length_out1 WHEN Logical_Operator1_out1_2 = '0' ELSE
      C2_out1;

  BitSlice2_out1_1 <= mant_a_ext_mant_b_shifted_out1(54);

  C3_out1 <= to_unsigned(16#000#, 11);

  
  if_Sum_0_out1 <= if_shift_length_exp_a_cor_out1 WHEN Sum_0_out1 = '0' ELSE
      C3_out1;

  
  if_bitget_Sum_Sum_WordLength_1_out1 <= if_Sum_0_out1 WHEN BitSlice2_out1_1 = '0' ELSE
      if_Exponent_0_out1;

  C_out1_2 <= to_unsigned(16#001#, 11);

  exp_a_cor_1_out1_1 <= C_out1_2 + if_Exponent_0_out1;

  
  if_bitget_Sum_Sum_WordLength_1_out1_1 <= if_bitget_Sum_Sum_WordLength_1_out1 WHEN BitSlice_out1 = '0' ELSE
      exp_a_cor_1_out1_1;

  
  if_bitget_Sum_Sum_WordLength_out1_1 <= C4_out1 WHEN BitSlice4_out1_1 = '0' ELSE
      if_bitget_Sum_Sum_WordLength_1_out1_1;

  cast_1_like_Exp_out1 <= to_unsigned(16#001#, 11);

  Exp_cast_1_like_Exp_out1 <= if_bitget_Sum_Sum_WordLength_out1_1 + cast_1_like_Exp_out1;

  
  if_bitget_Mant_tmp_Mant_tmp_Wor_out1 <= if_bitget_Sum_Sum_WordLength_out1_1 WHEN BitSlice2_out1 = '0' ELSE
      Exp_cast_1_like_Exp_out1;

  
  Exponent_0_out1_2 <= '1' WHEN if_bitget_Mant_tmp_Mant_tmp_Wor_out1 = to_unsigned(16#000#, 11) ELSE
      '0';

  BitSlice3_out1_1 <= if_bitget_Mant_tmp_1_0_out1(51 DOWNTO 0);

  
  Mantissa_0_out1 <= '1' WHEN BitSlice3_out1_1 = to_unsigned(0, 52) ELSE
      '0';

  alphaExponent_0_Mantissa_out1 <= Exponent_0_out1_2 AND Mantissa_0_out1;

  Constant_out1_3 <= '0';

  
  Switch_out1_3 <= alphaExponent_0_Mantissa_out1 WHEN aExponent_cfType_Exponent_I_out1 = '0' ELSE
      Constant_out1_3;

  alphaaSign_1_bSign_1_out1 <= if_bitconcat_aExponent_aMantiss_2_out1 AND if_bitconcat_aExponent_aMantiss_5_out1;

  
  if_Exponent_0_Mantissa_out1 <= if_bitconcat_aExponent_aMantiss_2_out1 WHEN Switch_out1_3 = '0' ELSE
      alphaaSign_1_bSign_1_out1;

  
  if_aExponent_cfType_Exponent_out1 <= if_bitget_Mant_tmp_Mant_tmp_Wor_out1 WHEN aExponent_cfType_Exponent_I_out1 = '0' ELSE
      if_bitconcat_aExponent_aMantiss_out1;

  
  mant_a_0_out1 <= '1' WHEN if_bitconcat_aExponent_aMantiss_1_out1 /= to_unsigned(0, 52) ELSE
      '0';

  opp_signs_exp_b_cfType_out1 <= bitxor_out1 AND exp_b_cfType_Exponent_Inf_o_out1;

  alphamant_a_0_opp_signs_out1 <= mant_a_0_out1 OR opp_signs_exp_b_cfType_out1;

  BitSet_out1 <= if_bitconcat_aExponent_aMantiss_1_out1 OR unsigned'(X"8000000000000");

  
  if_mant_a_0_opp_signs_out1 <= if_bitconcat_aExponent_aMantiss_1_out1 WHEN alphamant_a_0_opp_signs_out1 = '0' ELSE
      BitSet_out1;

  
  if_aExponent_cfType_Exponent_1_out1 <= BitSlice3_out1_1 WHEN aExponent_cfType_Exponent_I_out1 = '0' ELSE
      if_mant_a_0_opp_signs_out1;

  -- Combine FP sign, exponent, mantissa into 64 bit word
  nfp_out_pack <= if_Exponent_0_Mantissa_out1 & if_aExponent_cfType_Exponent_out1 & if_aExponent_cfType_Exponent_1_out1;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

