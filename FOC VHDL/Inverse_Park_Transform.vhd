-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\untitled\Inverse_Park_Transform.vhd
-- Created: 2020-07-03 00:04:52
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Inverse_Park_Transform
-- Source Path: untitled/dq2abc/Inverse Park Transform
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.untitled_pkg.ALL;

ENTITY Inverse_Park_Transform IS
  PORT( dq0                               :   IN    vector_of_std_logic_vector32(0 TO 2);  -- single [3]
        theta                             :   IN    std_logic_vector(31 DOWNTO 0);  -- single
        abc                               :   OUT   vector_of_std_logic_vector32(0 TO 2)  -- single [3]
        );
END Inverse_Park_Transform;


ARCHITECTURE rtl OF Inverse_Park_Transform IS

  -- Component Declarations
  COMPONENT a
    PORT( u                               :   IN    vector_of_std_logic_vector32(0 TO 3);  -- single [4]
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT b
    PORT( u                               :   IN    vector_of_std_logic_vector32(0 TO 3);  -- single [4]
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  COMPONENT c
    PORT( u                               :   IN    vector_of_std_logic_vector32(0 TO 3);  -- single [4]
          y                               :   OUT   std_logic_vector(31 DOWNTO 0)  -- single
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : a
    USE ENTITY work.a(rtl);

  FOR ALL : b
    USE ENTITY work.b(rtl);

  FOR ALL : c
    USE ENTITY work.c(rtl);

  -- Signals
  SIGNAL Mux2_out1                        : vector_of_std_logic_vector32(0 TO 3);  -- ufix32 [4]
  SIGNAL Mux3_out1                        : vector_of_std_logic_vector32(0 TO 2);  -- ufix32 [3]

BEGIN
  u_a : a
    PORT MAP( u => Mux2_out1,  -- single [4]
              y => Mux3_out1(0)  -- single
              );

  u_b : b
    PORT MAP( u => Mux2_out1,  -- single [4]
              y => Mux3_out1(1)  -- single
              );

  u_c : c
    PORT MAP( u => Mux2_out1,  -- single [4]
              y => Mux3_out1(2)  -- single
              );

  Mux2_out1(0) <= dq0(0);
  Mux2_out1(1) <= dq0(1);
  Mux2_out1(2) <= dq0(2);
  Mux2_out1(3) <= theta;


  abc <= Mux3_out1;

END rtl;

