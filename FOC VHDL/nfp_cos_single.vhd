-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\untitled\nfp_cos_single.vhd
-- Created: 2020-07-03 00:04:52
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: nfp_cos_single
-- Source Path: untitled/abc2dq/Park Transform/q/nfp_cos_single
-- Hierarchy Level: 4
-- 
-- {Latency Strategy = "Zero"}
-- {Mantissa Multiply Strategy = "FullMultiplier"}
-- {Input Range Reduction = "on"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.untitled_pkg.ALL;

ENTITY nfp_cos_single IS
  PORT( nfp_in                            :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        nfp_out                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END nfp_cos_single;


ARCHITECTURE rtl OF nfp_cos_single IS

  -- Signals
  SIGNAL nfp_in_unsigned                  : unsigned(31 DOWNTO 0);  -- ufix32
  SIGNAL X_S                              : std_logic;  -- ufix1
  SIGNAL X_E                              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL X_M                              : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL alpha127_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Subtract_sub_cast                : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Subtract_sub_cast_1              : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Subtract_sub_temp                : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Subtract_out1                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Constant_out1                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL RelOp_relop1                     : std_logic;
  SIGNAL IsSin_out1                       : std_logic;  -- ufix1
  SIGNAL Data_Type_Conversion_out1        : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Constant6_out1                   : signed(7 DOWNTO 0);  -- int8
  SIGNAL Sum7_add_temp                    : signed(31 DOWNTO 0);  -- sfix32
  SIGNAL Sum7_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Constant5_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Relational_Operator_1_cast       : signed(15 DOWNTO 0);  -- sfix16
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Delay4_out1_dtc                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch24_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant4_out1                   : vector_of_unsigned79(0 TO 139);  -- ufix79_En54 [140]
  SIGNAL Selector2_out1                   : unsigned(78 DOWNTO 0);  -- ufix79_En54
  SIGNAL Bit_Slice_out1                   : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant_out1_1                  : std_logic;  -- ufix1
  SIGNAL Bit_Concat_out1                  : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Data_Type_Conversion_out1_1      : unsigned(23 DOWNTO 0);  -- ufix24_En23
  SIGNAL Bit_Slice2_out1                  : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Slice1_out1                  : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Slice2_out1_1                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Bit_Slice1_out1_1                : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Data_Type_Conversion1_out1       : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL z0_out1                          : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL z0_out1_1                        : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL z0_out1_2                        : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Data_Type_Conversion_out1_2      : unsigned(75 DOWNTO 0);  -- ufix76
  SIGNAL Bit_Shift_out1                   : unsigned(75 DOWNTO 0);  -- ufix76
  SIGNAL Sum_out1                         : unsigned(76 DOWNTO 0);  -- ufix77
  SIGNAL Data_Type_Conversion2_out1       : unsigned(103 DOWNTO 0);  -- ufix104
  SIGNAL Bit_Shift_out1_1                 : unsigned(103 DOWNTO 0);  -- ufix104
  SIGNAL Sum_out1_1                       : unsigned(104 DOWNTO 0);  -- ufix105
  SIGNAL Data_Type_Conversion_out1_3      : unsigned(104 DOWNTO 0);  -- ufix105_En77
  SIGNAL Data_Type_Conversion1_out1_1     : unsigned(78 DOWNTO 0);  -- ufix79_En54
  SIGNAL K                                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Slice1_out1_2                : std_logic;  -- ufix1
  SIGNAL Bit_Slice_out1_1                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL Constant1_out1                   : std_logic;
  SIGNAL Constant_out1_2                  : std_logic;
  SIGNAL Switch_out1                      : std_logic;
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL Switch1_out1                     : std_logic;
  SIGNAL Switch2_out1                     : std_logic;
  SIGNAL Constant_out1_3                  : std_logic;
  SIGNAL Switch3_out1                     : std_logic;
  SIGNAL Switch_out1_1                    : std_logic;
  SIGNAL Constant4_out1_1                 : std_logic;
  SIGNAL Switch7_out1                     : std_logic;
  SIGNAL Constant8_out1                   : std_logic;  -- ufix1
  SIGNAL Constant_out1_4                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alpha127_out1_1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice1_out1_3                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_1          : std_logic;
  SIGNAL Bit_Slice2_out1_2                : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Data_Type_Conversion_out1_4      : unsigned(52 DOWNTO 0);  -- ufix53_En53
  SIGNAL Data_Type_Conversion_out1_dtc    : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Constant1_out1_1                 : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Sum1_sub_cast                    : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Sum1_out1                        : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Switch2_out1_1                   : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Data_Type_Conversion_out1_dtc_1  : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Switch1_out1_1                   : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Switch3_out1_1                   : unsigned(54 DOWNTO 0);  -- ufix55_En53
  SIGNAL Data_Type_Conversion_out1_5      : unsigned(53 DOWNTO 0);  -- ufix54_En52
  SIGNAL Bit_Slice2_out1_3                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Data_Type_Conversion_out1_6      : unsigned(26 DOWNTO 0);  -- ufix27_En27
  SIGNAL Bit_Slice2_out1_4                : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Data_Type_Conversion1_out1_2     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL coeffs_3_out1                    : vector_of_signed27(0 TO 127);  -- sfix27_En26 [128]
  SIGNAL Selector_out1                    : signed(26 DOWNTO 0);  -- sfix27_En26
  SIGNAL Data_Type_Conversion6_out1       : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL Data_Type_Conversion5_out1       : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Product1_cast                    : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL Product1_mul_temp                : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Product1_out1                    : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL Data_Type_Conversion2_out1_1     : signed(53 DOWNTO 0);  -- sfix54_En53
  SIGNAL coeffs_2_out1                    : vector_of_signed27(0 TO 127);  -- sfix27_En26 [128]
  SIGNAL Selector1_out1                   : signed(26 DOWNTO 0);  -- sfix27_En26
  SIGNAL Add1_add_cast                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Add1_add_cast_1                  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Add1_add_temp                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Add1_out1                        : signed(26 DOWNTO 0);  -- sfix27_En26
  SIGNAL Data_Type_Conversion3_out1       : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL Data_Type_Conversion10_out1      : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Product1_cast_1                  : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL Product1_mul_temp_1              : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Product1_out1_1                  : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL Data_Type_Conversion7_out1       : signed(53 DOWNTO 0);  -- sfix54_En53
  SIGNAL coeffs_1_out1                    : vector_of_signed27(0 TO 127);  -- sfix27_En25 [128]
  SIGNAL Selector2_out1_1                 : signed(26 DOWNTO 0);  -- sfix27_En25
  SIGNAL Add2_add_cast                    : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Add2_add_cast_1                  : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Add2_add_temp                    : signed(31 DOWNTO 0);  -- sfix32_En29
  SIGNAL Add2_out1                        : unsigned(26 DOWNTO 0);  -- ufix27_En26
  SIGNAL Bit_Slice_out1_2                 : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Bit_Slice1_out1_4                : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Product1_out1_2                  : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Product1_out1_3                  : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Data_Type_Conversion_out1_7      : unsigned(81 DOWNTO 0);  -- ufix82
  SIGNAL Bit_Shift_out1_2                 : unsigned(81 DOWNTO 0);  -- ufix82
  SIGNAL Sum_out1_2                       : unsigned(95 DOWNTO 0);  -- ufix96
  SIGNAL Data_Type_Conversion4_out1       : unsigned(95 DOWNTO 0);  -- ufix96_En78
  SIGNAL Data_Type_Conversion3_out1_1     : unsigned(54 DOWNTO 0);  -- ufix55_En54
  SIGNAL Data_Type_Conversion_out1_8      : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Bit_Slice35_out1                 : std_logic;  -- ufix1
  SIGNAL Constant45_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice34_out1                 : std_logic;  -- ufix1
  SIGNAL Constant44_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch46_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice33_out1                 : std_logic;  -- ufix1
  SIGNAL Constant43_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch45_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice32_out1                 : std_logic;  -- ufix1
  SIGNAL Constant42_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch44_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice31_out1                 : std_logic;  -- ufix1
  SIGNAL Constant41_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch43_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice42_out1                 : std_logic;  -- ufix1
  SIGNAL Constant39_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch42_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice41_out1                 : std_logic;  -- ufix1
  SIGNAL Constant38_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch41_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice40_out1                 : std_logic;  -- ufix1
  SIGNAL Constant37_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch40_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice39_out1                 : std_logic;  -- ufix1
  SIGNAL Constant36_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch39_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice37_out1                 : std_logic;  -- ufix1
  SIGNAL Constant35_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch34_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice36_out1                 : std_logic;  -- ufix1
  SIGNAL Constant34_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch33_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice30_out1                 : std_logic;  -- ufix1
  SIGNAL Constant33_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch32_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice29_out1                 : std_logic;  -- ufix1
  SIGNAL Constant32_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch31_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice53_out1                 : std_logic;  -- ufix1
  SIGNAL Constant31_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch30_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice52_out1                 : std_logic;  -- ufix1
  SIGNAL Constant30_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch29_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice51_out1                 : std_logic;  -- ufix1
  SIGNAL Constant55_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch53_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice49_out1                 : std_logic;  -- ufix1
  SIGNAL Constant54_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch52_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice48_out1                 : std_logic;  -- ufix1
  SIGNAL Constant53_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch51_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice47_out1                 : std_logic;  -- ufix1
  SIGNAL Constant52_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch50_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice38_out1                 : std_logic;  -- ufix1
  SIGNAL Constant51_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch49_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice28_out1                 : std_logic;  -- ufix1
  SIGNAL Constant50_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch48_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice17_out1                 : std_logic;  -- ufix1
  SIGNAL Constant49_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch47_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice45_out1                 : std_logic;  -- ufix1
  SIGNAL Constant40_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch38_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice44_out1                 : std_logic;  -- ufix1
  SIGNAL Constant29_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch28_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice43_out1                 : std_logic;  -- ufix1
  SIGNAL Constant27_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch19_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice46_out1                 : std_logic;  -- ufix1
  SIGNAL Constant56_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch55_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice16_out1                 : std_logic;  -- ufix1
  SIGNAL Constant28_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch54_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice15_out1                 : std_logic;  -- ufix1
  SIGNAL Constant26_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch18_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice14_out1                 : std_logic;  -- ufix1
  SIGNAL Constant25_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch17_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice13_out1                 : std_logic;  -- ufix1
  SIGNAL Constant24_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch16_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice12_out1                 : std_logic;  -- ufix1
  SIGNAL Constant23_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch27_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice23_out1                 : std_logic;  -- ufix1
  SIGNAL Constant22_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch26_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice22_out1                 : std_logic;  -- ufix1
  SIGNAL Constant21_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch25_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice21_out1                 : std_logic;  -- ufix1
  SIGNAL Constant20_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch24_out1_1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice20_out1                 : std_logic;  -- ufix1
  SIGNAL Constant19_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch23_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice19_out1                 : std_logic;  -- ufix1
  SIGNAL Constant18_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch22_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice18_out1                 : std_logic;  -- ufix1
  SIGNAL Constant17_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch21_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice11_out1                 : std_logic;  -- ufix1
  SIGNAL Constant16_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch20_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice10_out1                 : std_logic;  -- ufix1
  SIGNAL Constant15_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch15_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice9_out1                  : std_logic;  -- ufix1
  SIGNAL Constant14_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch14_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice8_out1                  : std_logic;  -- ufix1
  SIGNAL Constant13_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch13_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice7_out1                  : std_logic;  -- ufix1
  SIGNAL Constant12_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch12_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice6_out1                  : std_logic;  -- ufix1
  SIGNAL Constant11_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch11_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice5_out1                  : std_logic;  -- ufix1
  SIGNAL Constant10_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch10_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice4_out1                  : std_logic;  -- ufix1
  SIGNAL Constant9_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch9_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice3_out1                  : std_logic;  -- ufix1
  SIGNAL Constant8_out1_1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch8_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice2_out1_5                : std_logic;  -- ufix1
  SIGNAL Constant7_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch7_out1_1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice1_out1_5                : std_logic;  -- ufix1
  SIGNAL Constant6_out1_1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch6_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Constant5_out1_1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch5_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice26_out1                 : std_logic;  -- ufix1
  SIGNAL Constant4_out1_2                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch4_out1                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice25_out1                 : std_logic;  -- ufix1
  SIGNAL Constant3_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch3_out1_2                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice24_out1                 : std_logic;  -- ufix1
  SIGNAL Constant2_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch2_out1_2                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice27_out1                 : std_logic;  -- ufix1
  SIGNAL Constant1_out1_2                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch1_out1_2                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice50_out1                 : std_logic;  -- ufix1
  SIGNAL Constant124_out1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch116_out1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant46_out1                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch35_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Sum_out1_3                       : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant1_out1_3                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Delay7_out1_dtc                  : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch4_out1_1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch1_out1_3                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant5_out1_2                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch8_out1_1                   : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch1_out1_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Constant1_out1_4                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Shift_Arithmetic_out1            : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Bit_Slice1_out1_6                : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant3_out1_1                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch5_out1_1                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch2_out1_3                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant2_out1_1                 : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch6_out1_1                   : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Switch_out1_2                    : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL nfp_out_pack                     : unsigned(31 DOWNTO 0);  -- ufix32

BEGIN
  nfp_in_unsigned <= unsigned(nfp_in);

  -- Split 32 bit word into FP sign, exponent, mantissa
  X_S <= nfp_in_unsigned(31);
  X_E <= nfp_in_unsigned(30 DOWNTO 23);
  X_M <= nfp_in_unsigned(22 DOWNTO 0);

  
  Compare_To_Constant_out1 <= '1' WHEN X_E = to_unsigned(16#FF#, 8) ELSE
      '0';

  alpha127_out1 <= to_unsigned(16#7F#, 8);

  Subtract_sub_cast <= signed(resize(X_E, 32));
  Subtract_sub_cast_1 <= signed(resize(alpha127_out1, 32));
  Subtract_sub_temp <= Subtract_sub_cast - Subtract_sub_cast_1;
  Subtract_out1 <= Subtract_sub_temp(7 DOWNTO 0);

  Constant_out1 <= to_signed(-16#0B#, 8);

  
  RelOp_relop1 <= '1' WHEN Subtract_out1 < Constant_out1 ELSE
      '0';

  IsSin_out1 <= '0';

  Data_Type_Conversion_out1 <= resize(Subtract_out1, 9);

  Constant6_out1 <= to_signed(16#0D#, 8);

  Sum7_add_temp <= resize(Data_Type_Conversion_out1, 32) + resize(Constant6_out1, 32);
  Sum7_out1 <= Sum7_add_temp(15 DOWNTO 0);

  Constant5_out1 <= to_unsigned(16#01#, 8);

  Relational_Operator_1_cast <= signed(resize(Constant5_out1, 16));
  
  Relational_Operator_relop1 <= '1' WHEN Sum7_out1 < Relational_Operator_1_cast ELSE
      '0';

  Delay4_out1_dtc <= unsigned(Sum7_out1(7 DOWNTO 0));

  
  Switch24_out1 <= Delay4_out1_dtc WHEN Relational_Operator_relop1 = '0' ELSE
      Constant5_out1;

  Constant4_out1(0) <= unsigned'("0000000000000000000000000000000000000101000101111100110000011011011100100111001");
  Constant4_out1(1) <= unsigned'("0000000000000000000000000000000000001010001011111001100000110110111001001110010");
  Constant4_out1(2) <= unsigned'("0000000000000000000000000000000000010100010111110011000001101101110010011100100");
  Constant4_out1(3) <= unsigned'("0000000000000000000000000000000000101000101111100110000011011011100100111001000");
  Constant4_out1(4) <= unsigned'("0000000000000000000000000000000001010001011111001100000110110111001001110010001");
  Constant4_out1(5) <= unsigned'("0000000000000000000000000000000010100010111110011000001101101110010011100100010");
  Constant4_out1(6) <= unsigned'("0000000000000000000000000000000101000101111100110000011011011100100111001000100");
  Constant4_out1(7) <= unsigned'("0000000000000000000000000000001010001011111001100000110110111001001110010001000");
  Constant4_out1(8) <= unsigned'("0000000000000000000000000000010100010111110011000001101101110010011100100010000");
  Constant4_out1(9) <= unsigned'("0000000000000000000000000000101000101111100110000011011011100100111001000100000");
  Constant4_out1(10) <= unsigned'("0000000000000000000000000001010001011111001100000110110111001001110010001000001");
  Constant4_out1(11) <= unsigned'("0000000000000000000000000010100010111110011000001101101110010011100100010000010");
  Constant4_out1(12) <= unsigned'("0000000000000000000000000101000101111100110000011011011100100111001000100000101");
  Constant4_out1(13) <= unsigned'("0000000000000000000000001010001011111001100000110110111001001110010001000001010");
  Constant4_out1(14) <= unsigned'("0000000000000000000000010100010111110011000001101101110010011100100010000010101");
  Constant4_out1(15) <= unsigned'("0000000000000000000000101000101111100110000011011011100100111001000100000101010");
  Constant4_out1(16) <= unsigned'("0000000000000000000001010001011111001100000110110111001001110010001000001010100");
  Constant4_out1(17) <= unsigned'("0000000000000000000010100010111110011000001101101110010011100100010000010101001");
  Constant4_out1(18) <= unsigned'("0000000000000000000101000101111100110000011011011100100111001000100000101010010");
  Constant4_out1(19) <= unsigned'("0000000000000000001010001011111001100000110110111001001110010001000001010100101");
  Constant4_out1(20) <= unsigned'("0000000000000000010100010111110011000001101101110010011100100010000010101001010");
  Constant4_out1(21) <= unsigned'("0000000000000000101000101111100110000011011011100100111001000100000101010010100");
  Constant4_out1(22) <= unsigned'("0000000000000001010001011111001100000110110111001001110010001000001010100101001");
  Constant4_out1(23) <= unsigned'("0000000000000010100010111110011000001101101110010011100100010000010101001010011");
  Constant4_out1(24) <= unsigned'("0000000000000101000101111100110000011011011100100111001000100000101010010100111");
  Constant4_out1(25) <= unsigned'("0000000000001010001011111001100000110110111001001110010001000001010100101001111");
  Constant4_out1(26) <= unsigned'("0000000000010100010111110011000001101101110010011100100010000010101001010011111");
  Constant4_out1(27) <= unsigned'("0000000000101000101111100110000011011011100100111001000100000101010010100111111");
  Constant4_out1(28) <= unsigned'("0000000001010001011111001100000110110111001001110010001000001010100101001111111");
  Constant4_out1(29) <= unsigned'("0000000010100010111110011000001101101110010011100100010000010101001010011111110");
  Constant4_out1(30) <= unsigned'("0000000101000101111100110000011011011100100111001000100000101010010100111111100");
  Constant4_out1(31) <= unsigned'("0000001010001011111001100000110110111001001110010001000001010100101001111111000");
  Constant4_out1(32) <= unsigned'("0000010100010111110011000001101101110010011100100010000010101001010011111110000");
  Constant4_out1(33) <= unsigned'("0000101000101111100110000011011011100100111001000100000101010010100111111100001");
  Constant4_out1(34) <= unsigned'("0001010001011111001100000110110111001001110010001000001010100101001111111000010");
  Constant4_out1(35) <= unsigned'("0010100010111110011000001101101110010011100100010000010101001010011111110000100");
  Constant4_out1(36) <= unsigned'("0101000101111100110000011011011100100111001000100000101010010100111111100001001");
  Constant4_out1(37) <= unsigned'("1010001011111001100000110110111001001110010001000001010100101001111111000010011");
  Constant4_out1(38) <= unsigned'("0100010111110011000001101101110010011100100010000010101001010011111110000100111");
  Constant4_out1(39) <= unsigned'("1000101111100110000011011011100100111001000100000101010010100111111100001001110");
  Constant4_out1(40) <= unsigned'("0001011111001100000110110111001001110010001000001010100101001111111000010011101");
  Constant4_out1(41) <= unsigned'("0010111110011000001101101110010011100100010000010101001010011111110000100111010");
  Constant4_out1(42) <= unsigned'("0101111100110000011011011100100111001000100000101010010100111111100001001110101");
  Constant4_out1(43) <= unsigned'("1011111001100000110110111001001110010001000001010100101001111111000010011101010");
  Constant4_out1(44) <= unsigned'("0111110011000001101101110010011100100010000010101001010011111110000100111010101");
  Constant4_out1(45) <= unsigned'("1111100110000011011011100100111001000100000101010010100111111100001001110101011");
  Constant4_out1(46) <= unsigned'("1111001100000110110111001001110010001000001010100101001111111000010011101010111");
  Constant4_out1(47) <= unsigned'("1110011000001101101110010011100100010000010101001010011111110000100111010101111");
  Constant4_out1(48) <= unsigned'("1100110000011011011100100111001000100000101010010100111111100001001110101011111");
  Constant4_out1(49) <= unsigned'("1001100000110110111001001110010001000001010100101001111111000010011101010111110");
  Constant4_out1(50) <= unsigned'("0011000001101101110010011100100010000010101001010011111110000100111010101111101");
  Constant4_out1(51) <= unsigned'("0110000011011011100100111001000100000101010010100111111100001001110101011111010");
  Constant4_out1(52) <= unsigned'("1100000110110111001001110010001000001010100101001111111000010011101010111110100");
  Constant4_out1(53) <= unsigned'("1000001101101110010011100100010000010101001010011111110000100111010101111101000");
  Constant4_out1(54) <= unsigned'("0000011011011100100111001000100000101010010100111111100001001110101011111010001");
  Constant4_out1(55) <= unsigned'("0000110110111001001110010001000001010100101001111111000010011101010111110100011");
  Constant4_out1(56) <= unsigned'("0001101101110010011100100010000010101001010011111110000100111010101111101000111");
  Constant4_out1(57) <= unsigned'("0011011011100100111001000100000101010010100111111100001001110101011111010001111");
  Constant4_out1(58) <= unsigned'("0110110111001001110010001000001010100101001111111000010011101010111110100011111");
  Constant4_out1(59) <= unsigned'("1101101110010011100100010000010101001010011111110000100111010101111101000111110");
  Constant4_out1(60) <= unsigned'("1011011100100111001000100000101010010100111111100001001110101011111010001111101");
  Constant4_out1(61) <= unsigned'("0110111001001110010001000001010100101001111111000010011101010111110100011111010");
  Constant4_out1(62) <= unsigned'("1101110010011100100010000010101001010011111110000100111010101111101000111110101");
  Constant4_out1(63) <= unsigned'("1011100100111001000100000101010010100111111100001001110101011111010001111101010");
  Constant4_out1(64) <= unsigned'("0111001001110010001000001010100101001111111000010011101010111110100011111010100");
  Constant4_out1(65) <= unsigned'("1110010011100100010000010101001010011111110000100111010101111101000111110101001");
  Constant4_out1(66) <= unsigned'("1100100111001000100000101010010100111111100001001110101011111010001111101010011");
  Constant4_out1(67) <= unsigned'("1001001110010001000001010100101001111111000010011101010111110100011111010100110");
  Constant4_out1(68) <= unsigned'("0010011100100010000010101001010011111110000100111010101111101000111110101001101");
  Constant4_out1(69) <= unsigned'("0100111001000100000101010010100111111100001001110101011111010001111101010011010");
  Constant4_out1(70) <= unsigned'("1001110010001000001010100101001111111000010011101010111110100011111010100110100");
  Constant4_out1(71) <= unsigned'("0011100100010000010101001010011111110000100111010101111101000111110101001101001");
  Constant4_out1(72) <= unsigned'("0111001000100000101010010100111111100001001110101011111010001111101010011010011");
  Constant4_out1(73) <= unsigned'("1110010001000001010100101001111111000010011101010111110100011111010100110100110");
  Constant4_out1(74) <= unsigned'("1100100010000010101001010011111110000100111010101111101000111110101001101001101");
  Constant4_out1(75) <= unsigned'("1001000100000101010010100111111100001001110101011111010001111101010011010011011");
  Constant4_out1(76) <= unsigned'("0010001000001010100101001111111000010011101010111110100011111010100110100110111");
  Constant4_out1(77) <= unsigned'("0100010000010101001010011111110000100111010101111101000111110101001101001101110");
  Constant4_out1(78) <= unsigned'("1000100000101010010100111111100001001110101011111010001111101010011010011011101");
  Constant4_out1(79) <= unsigned'("0001000001010100101001111111000010011101010111110100011111010100110100110111011");
  Constant4_out1(80) <= unsigned'("0010000010101001010011111110000100111010101111101000111110101001101001101110111");
  Constant4_out1(81) <= unsigned'("0100000101010010100111111100001001110101011111010001111101010011010011011101110");
  Constant4_out1(82) <= unsigned'("1000001010100101001111111000010011101010111110100011111010100110100110111011100");
  Constant4_out1(83) <= unsigned'("0000010101001010011111110000100111010101111101000111110101001101001101110111000");
  Constant4_out1(84) <= unsigned'("0000101010010100111111100001001110101011111010001111101010011010011011101110000");
  Constant4_out1(85) <= unsigned'("0001010100101001111111000010011101010111110100011111010100110100110111011100000");
  Constant4_out1(86) <= unsigned'("0010101001010011111110000100111010101111101000111110101001101001101110111000000");
  Constant4_out1(87) <= unsigned'("0101010010100111111100001001110101011111010001111101010011010011011101110000001");
  Constant4_out1(88) <= unsigned'("1010100101001111111000010011101010111110100011111010100110100110111011100000011");
  Constant4_out1(89) <= unsigned'("0101001010011111110000100111010101111101000111110101001101001101110111000000110");
  Constant4_out1(90) <= unsigned'("1010010100111111100001001110101011111010001111101010011010011011101110000001101");
  Constant4_out1(91) <= unsigned'("0100101001111111000010011101010111110100011111010100110100110111011100000011011");
  Constant4_out1(92) <= unsigned'("1001010011111110000100111010101111101000111110101001101001101110111000000110110");
  Constant4_out1(93) <= unsigned'("0010100111111100001001110101011111010001111101010011010011011101110000001101101");
  Constant4_out1(94) <= unsigned'("0101001111111000010011101010111110100011111010100110100110111011100000011011011");
  Constant4_out1(95) <= unsigned'("1010011111110000100111010101111101000111110101001101001101110111000000110110110");
  Constant4_out1(96) <= unsigned'("0100111111100001001110101011111010001111101010011010011011101110000001101101101");
  Constant4_out1(97) <= unsigned'("1001111111000010011101010111110100011111010100110100110111011100000011011011011");
  Constant4_out1(98) <= unsigned'("0011111110000100111010101111101000111110101001101001101110111000000110110110110");
  Constant4_out1(99) <= unsigned'("0111111100001001110101011111010001111101010011010011011101110000001101101101100");
  Constant4_out1(100) <= unsigned'("1111111000010011101010111110100011111010100110100110111011100000011011011011000");
  Constant4_out1(101) <= unsigned'("1111110000100111010101111101000111110101001101001101110111000000110110110110001");
  Constant4_out1(102) <= unsigned'("1111100001001110101011111010001111101010011010011011101110000001101101101100010");
  Constant4_out1(103) <= unsigned'("1111000010011101010111110100011111010100110100110111011100000011011011011000101");
  Constant4_out1(104) <= unsigned'("1110000100111010101111101000111110101001101001101110111000000110110110110001010");
  Constant4_out1(105) <= unsigned'("1100001001110101011111010001111101010011010011011101110000001101101101100010100");
  Constant4_out1(106) <= unsigned'("1000010011101010111110100011111010100110100110111011100000011011011011000101001");
  Constant4_out1(107) <= unsigned'("0000100111010101111101000111110101001101001101110111000000110110110110001010010");
  Constant4_out1(108) <= unsigned'("0001001110101011111010001111101010011010011011101110000001101101101100010100101");
  Constant4_out1(109) <= unsigned'("0010011101010111110100011111010100110100110111011100000011011011011000101001010");
  Constant4_out1(110) <= unsigned'("0100111010101111101000111110101001101001101110111000000110110110110001010010101");
  Constant4_out1(111) <= unsigned'("1001110101011111010001111101010011010011011101110000001101101101100010100101011");
  Constant4_out1(112) <= unsigned'("0011101010111110100011111010100110100110111011100000011011011011000101001010110");
  Constant4_out1(113) <= unsigned'("0111010101111101000111110101001101001101110111000000110110110110001010010101100");
  Constant4_out1(114) <= unsigned'("1110101011111010001111101010011010011011101110000001101101101100010100101011001");
  Constant4_out1(115) <= unsigned'("1101010111110100011111010100110100110111011100000011011011011000101001010110011");
  Constant4_out1(116) <= unsigned'("1010101111101000111110101001101001101110111000000110110110110001010010101100110");
  Constant4_out1(117) <= unsigned'("0101011111010001111101010011010011011101110000001101101101100010100101011001100");
  Constant4_out1(118) <= unsigned'("1010111110100011111010100110100110111011100000011011011011000101001010110011001");
  Constant4_out1(119) <= unsigned'("0101111101000111110101001101001101110111000000110110110110001010010101100110010");
  Constant4_out1(120) <= unsigned'("1011111010001111101010011010011011101110000001101101101100010100101011001100100");
  Constant4_out1(121) <= unsigned'("0111110100011111010100110100110111011100000011011011011000101001010110011001001");
  Constant4_out1(122) <= unsigned'("1111101000111110101001101001101110111000000110110110110001010010101100110010011");
  Constant4_out1(123) <= unsigned'("1111010001111101010011010011011101110000001101101101100010100101011001100100111");
  Constant4_out1(124) <= unsigned'("1110100011111010100110100110111011100000011011011011000101001010110011001001111");
  Constant4_out1(125) <= unsigned'("1101000111110101001101001101110111000000110110110110001010010101100110010011110");
  Constant4_out1(126) <= unsigned'("1010001111101010011010011011101110000001101101101100010100101011001100100111100");
  Constant4_out1(127) <= unsigned'("0100011111010100110100110111011100000011011011011000101001010110011001001111000");
  Constant4_out1(128) <= unsigned'("1000111110101001101001101110111000000110110110110001010010101100110010011110001");
  Constant4_out1(129) <= unsigned'("0001111101010011010011011101110000001101101101100010100101011001100100111100010");
  Constant4_out1(130) <= unsigned'("0011111010100110100110111011100000011011011011000101001010110011001001111000100");
  Constant4_out1(131) <= unsigned'("0111110101001101001101110111000000110110110110001010010101100110010011110001000");
  Constant4_out1(132) <= unsigned'("1111101010011010011011101110000001101101101100010100101011001100100111100010000");
  Constant4_out1(133) <= unsigned'("1111010100110100110111011100000011011011011000101001010110011001001111000100001");
  Constant4_out1(134) <= unsigned'("1110101001101001101110111000000110110110110001010010101100110010011110001000011");
  Constant4_out1(135) <= unsigned'("1101010011010011011101110000001101101101100010100101011001100100111100010000111");
  Constant4_out1(136) <= unsigned'("1010100110100110111011100000011011011011000101001010110011001001111000100001110");
  Constant4_out1(137) <= unsigned'("0101001101001101110111000000110110110110001010010101100110010011110001000011100");
  Constant4_out1(138) <= unsigned'("1010011010011011101110000001101101101100010100101011001100100111100010000111001");
  Constant4_out1(139) <= unsigned'("0100110100110111011100000011011011011000101001010110011001001111000100001110010");

  
  Selector2_out1 <= Constant4_out1(0) WHEN Switch24_out1 = to_unsigned(16#01#, 8) ELSE
      Constant4_out1(1) WHEN Switch24_out1 = to_unsigned(16#02#, 8) ELSE
      Constant4_out1(2) WHEN Switch24_out1 = to_unsigned(16#03#, 8) ELSE
      Constant4_out1(3) WHEN Switch24_out1 = to_unsigned(16#04#, 8) ELSE
      Constant4_out1(4) WHEN Switch24_out1 = to_unsigned(16#05#, 8) ELSE
      Constant4_out1(5) WHEN Switch24_out1 = to_unsigned(16#06#, 8) ELSE
      Constant4_out1(6) WHEN Switch24_out1 = to_unsigned(16#07#, 8) ELSE
      Constant4_out1(7) WHEN Switch24_out1 = to_unsigned(16#08#, 8) ELSE
      Constant4_out1(8) WHEN Switch24_out1 = to_unsigned(16#09#, 8) ELSE
      Constant4_out1(9) WHEN Switch24_out1 = to_unsigned(16#0A#, 8) ELSE
      Constant4_out1(10) WHEN Switch24_out1 = to_unsigned(16#0B#, 8) ELSE
      Constant4_out1(11) WHEN Switch24_out1 = to_unsigned(16#0C#, 8) ELSE
      Constant4_out1(12) WHEN Switch24_out1 = to_unsigned(16#0D#, 8) ELSE
      Constant4_out1(13) WHEN Switch24_out1 = to_unsigned(16#0E#, 8) ELSE
      Constant4_out1(14) WHEN Switch24_out1 = to_unsigned(16#0F#, 8) ELSE
      Constant4_out1(15) WHEN Switch24_out1 = to_unsigned(16#10#, 8) ELSE
      Constant4_out1(16) WHEN Switch24_out1 = to_unsigned(16#11#, 8) ELSE
      Constant4_out1(17) WHEN Switch24_out1 = to_unsigned(16#12#, 8) ELSE
      Constant4_out1(18) WHEN Switch24_out1 = to_unsigned(16#13#, 8) ELSE
      Constant4_out1(19) WHEN Switch24_out1 = to_unsigned(16#14#, 8) ELSE
      Constant4_out1(20) WHEN Switch24_out1 = to_unsigned(16#15#, 8) ELSE
      Constant4_out1(21) WHEN Switch24_out1 = to_unsigned(16#16#, 8) ELSE
      Constant4_out1(22) WHEN Switch24_out1 = to_unsigned(16#17#, 8) ELSE
      Constant4_out1(23) WHEN Switch24_out1 = to_unsigned(16#18#, 8) ELSE
      Constant4_out1(24) WHEN Switch24_out1 = to_unsigned(16#19#, 8) ELSE
      Constant4_out1(25) WHEN Switch24_out1 = to_unsigned(16#1A#, 8) ELSE
      Constant4_out1(26) WHEN Switch24_out1 = to_unsigned(16#1B#, 8) ELSE
      Constant4_out1(27) WHEN Switch24_out1 = to_unsigned(16#1C#, 8) ELSE
      Constant4_out1(28) WHEN Switch24_out1 = to_unsigned(16#1D#, 8) ELSE
      Constant4_out1(29) WHEN Switch24_out1 = to_unsigned(16#1E#, 8) ELSE
      Constant4_out1(30) WHEN Switch24_out1 = to_unsigned(16#1F#, 8) ELSE
      Constant4_out1(31) WHEN Switch24_out1 = to_unsigned(16#20#, 8) ELSE
      Constant4_out1(32) WHEN Switch24_out1 = to_unsigned(16#21#, 8) ELSE
      Constant4_out1(33) WHEN Switch24_out1 = to_unsigned(16#22#, 8) ELSE
      Constant4_out1(34) WHEN Switch24_out1 = to_unsigned(16#23#, 8) ELSE
      Constant4_out1(35) WHEN Switch24_out1 = to_unsigned(16#24#, 8) ELSE
      Constant4_out1(36) WHEN Switch24_out1 = to_unsigned(16#25#, 8) ELSE
      Constant4_out1(37) WHEN Switch24_out1 = to_unsigned(16#26#, 8) ELSE
      Constant4_out1(38) WHEN Switch24_out1 = to_unsigned(16#27#, 8) ELSE
      Constant4_out1(39) WHEN Switch24_out1 = to_unsigned(16#28#, 8) ELSE
      Constant4_out1(40) WHEN Switch24_out1 = to_unsigned(16#29#, 8) ELSE
      Constant4_out1(41) WHEN Switch24_out1 = to_unsigned(16#2A#, 8) ELSE
      Constant4_out1(42) WHEN Switch24_out1 = to_unsigned(16#2B#, 8) ELSE
      Constant4_out1(43) WHEN Switch24_out1 = to_unsigned(16#2C#, 8) ELSE
      Constant4_out1(44) WHEN Switch24_out1 = to_unsigned(16#2D#, 8) ELSE
      Constant4_out1(45) WHEN Switch24_out1 = to_unsigned(16#2E#, 8) ELSE
      Constant4_out1(46) WHEN Switch24_out1 = to_unsigned(16#2F#, 8) ELSE
      Constant4_out1(47) WHEN Switch24_out1 = to_unsigned(16#30#, 8) ELSE
      Constant4_out1(48) WHEN Switch24_out1 = to_unsigned(16#31#, 8) ELSE
      Constant4_out1(49) WHEN Switch24_out1 = to_unsigned(16#32#, 8) ELSE
      Constant4_out1(50) WHEN Switch24_out1 = to_unsigned(16#33#, 8) ELSE
      Constant4_out1(51) WHEN Switch24_out1 = to_unsigned(16#34#, 8) ELSE
      Constant4_out1(52) WHEN Switch24_out1 = to_unsigned(16#35#, 8) ELSE
      Constant4_out1(53) WHEN Switch24_out1 = to_unsigned(16#36#, 8) ELSE
      Constant4_out1(54) WHEN Switch24_out1 = to_unsigned(16#37#, 8) ELSE
      Constant4_out1(55) WHEN Switch24_out1 = to_unsigned(16#38#, 8) ELSE
      Constant4_out1(56) WHEN Switch24_out1 = to_unsigned(16#39#, 8) ELSE
      Constant4_out1(57) WHEN Switch24_out1 = to_unsigned(16#3A#, 8) ELSE
      Constant4_out1(58) WHEN Switch24_out1 = to_unsigned(16#3B#, 8) ELSE
      Constant4_out1(59) WHEN Switch24_out1 = to_unsigned(16#3C#, 8) ELSE
      Constant4_out1(60) WHEN Switch24_out1 = to_unsigned(16#3D#, 8) ELSE
      Constant4_out1(61) WHEN Switch24_out1 = to_unsigned(16#3E#, 8) ELSE
      Constant4_out1(62) WHEN Switch24_out1 = to_unsigned(16#3F#, 8) ELSE
      Constant4_out1(63) WHEN Switch24_out1 = to_unsigned(16#40#, 8) ELSE
      Constant4_out1(64) WHEN Switch24_out1 = to_unsigned(16#41#, 8) ELSE
      Constant4_out1(65) WHEN Switch24_out1 = to_unsigned(16#42#, 8) ELSE
      Constant4_out1(66) WHEN Switch24_out1 = to_unsigned(16#43#, 8) ELSE
      Constant4_out1(67) WHEN Switch24_out1 = to_unsigned(16#44#, 8) ELSE
      Constant4_out1(68) WHEN Switch24_out1 = to_unsigned(16#45#, 8) ELSE
      Constant4_out1(69) WHEN Switch24_out1 = to_unsigned(16#46#, 8) ELSE
      Constant4_out1(70) WHEN Switch24_out1 = to_unsigned(16#47#, 8) ELSE
      Constant4_out1(71) WHEN Switch24_out1 = to_unsigned(16#48#, 8) ELSE
      Constant4_out1(72) WHEN Switch24_out1 = to_unsigned(16#49#, 8) ELSE
      Constant4_out1(73) WHEN Switch24_out1 = to_unsigned(16#4A#, 8) ELSE
      Constant4_out1(74) WHEN Switch24_out1 = to_unsigned(16#4B#, 8) ELSE
      Constant4_out1(75) WHEN Switch24_out1 = to_unsigned(16#4C#, 8) ELSE
      Constant4_out1(76) WHEN Switch24_out1 = to_unsigned(16#4D#, 8) ELSE
      Constant4_out1(77) WHEN Switch24_out1 = to_unsigned(16#4E#, 8) ELSE
      Constant4_out1(78) WHEN Switch24_out1 = to_unsigned(16#4F#, 8) ELSE
      Constant4_out1(79) WHEN Switch24_out1 = to_unsigned(16#50#, 8) ELSE
      Constant4_out1(80) WHEN Switch24_out1 = to_unsigned(16#51#, 8) ELSE
      Constant4_out1(81) WHEN Switch24_out1 = to_unsigned(16#52#, 8) ELSE
      Constant4_out1(82) WHEN Switch24_out1 = to_unsigned(16#53#, 8) ELSE
      Constant4_out1(83) WHEN Switch24_out1 = to_unsigned(16#54#, 8) ELSE
      Constant4_out1(84) WHEN Switch24_out1 = to_unsigned(16#55#, 8) ELSE
      Constant4_out1(85) WHEN Switch24_out1 = to_unsigned(16#56#, 8) ELSE
      Constant4_out1(86) WHEN Switch24_out1 = to_unsigned(16#57#, 8) ELSE
      Constant4_out1(87) WHEN Switch24_out1 = to_unsigned(16#58#, 8) ELSE
      Constant4_out1(88) WHEN Switch24_out1 = to_unsigned(16#59#, 8) ELSE
      Constant4_out1(89) WHEN Switch24_out1 = to_unsigned(16#5A#, 8) ELSE
      Constant4_out1(90) WHEN Switch24_out1 = to_unsigned(16#5B#, 8) ELSE
      Constant4_out1(91) WHEN Switch24_out1 = to_unsigned(16#5C#, 8) ELSE
      Constant4_out1(92) WHEN Switch24_out1 = to_unsigned(16#5D#, 8) ELSE
      Constant4_out1(93) WHEN Switch24_out1 = to_unsigned(16#5E#, 8) ELSE
      Constant4_out1(94) WHEN Switch24_out1 = to_unsigned(16#5F#, 8) ELSE
      Constant4_out1(95) WHEN Switch24_out1 = to_unsigned(16#60#, 8) ELSE
      Constant4_out1(96) WHEN Switch24_out1 = to_unsigned(16#61#, 8) ELSE
      Constant4_out1(97) WHEN Switch24_out1 = to_unsigned(16#62#, 8) ELSE
      Constant4_out1(98) WHEN Switch24_out1 = to_unsigned(16#63#, 8) ELSE
      Constant4_out1(99) WHEN Switch24_out1 = to_unsigned(16#64#, 8) ELSE
      Constant4_out1(100) WHEN Switch24_out1 = to_unsigned(16#65#, 8) ELSE
      Constant4_out1(101) WHEN Switch24_out1 = to_unsigned(16#66#, 8) ELSE
      Constant4_out1(102) WHEN Switch24_out1 = to_unsigned(16#67#, 8) ELSE
      Constant4_out1(103) WHEN Switch24_out1 = to_unsigned(16#68#, 8) ELSE
      Constant4_out1(104) WHEN Switch24_out1 = to_unsigned(16#69#, 8) ELSE
      Constant4_out1(105) WHEN Switch24_out1 = to_unsigned(16#6A#, 8) ELSE
      Constant4_out1(106) WHEN Switch24_out1 = to_unsigned(16#6B#, 8) ELSE
      Constant4_out1(107) WHEN Switch24_out1 = to_unsigned(16#6C#, 8) ELSE
      Constant4_out1(108) WHEN Switch24_out1 = to_unsigned(16#6D#, 8) ELSE
      Constant4_out1(109) WHEN Switch24_out1 = to_unsigned(16#6E#, 8) ELSE
      Constant4_out1(110) WHEN Switch24_out1 = to_unsigned(16#6F#, 8) ELSE
      Constant4_out1(111) WHEN Switch24_out1 = to_unsigned(16#70#, 8) ELSE
      Constant4_out1(112) WHEN Switch24_out1 = to_unsigned(16#71#, 8) ELSE
      Constant4_out1(113) WHEN Switch24_out1 = to_unsigned(16#72#, 8) ELSE
      Constant4_out1(114) WHEN Switch24_out1 = to_unsigned(16#73#, 8) ELSE
      Constant4_out1(115) WHEN Switch24_out1 = to_unsigned(16#74#, 8) ELSE
      Constant4_out1(116) WHEN Switch24_out1 = to_unsigned(16#75#, 8) ELSE
      Constant4_out1(117) WHEN Switch24_out1 = to_unsigned(16#76#, 8) ELSE
      Constant4_out1(118) WHEN Switch24_out1 = to_unsigned(16#77#, 8) ELSE
      Constant4_out1(119) WHEN Switch24_out1 = to_unsigned(16#78#, 8) ELSE
      Constant4_out1(120) WHEN Switch24_out1 = to_unsigned(16#79#, 8) ELSE
      Constant4_out1(121) WHEN Switch24_out1 = to_unsigned(16#7A#, 8) ELSE
      Constant4_out1(122) WHEN Switch24_out1 = to_unsigned(16#7B#, 8) ELSE
      Constant4_out1(123) WHEN Switch24_out1 = to_unsigned(16#7C#, 8) ELSE
      Constant4_out1(124) WHEN Switch24_out1 = to_unsigned(16#7D#, 8) ELSE
      Constant4_out1(125) WHEN Switch24_out1 = to_unsigned(16#7E#, 8) ELSE
      Constant4_out1(126) WHEN Switch24_out1 = to_unsigned(16#7F#, 8) ELSE
      Constant4_out1(127) WHEN Switch24_out1 = to_unsigned(16#80#, 8) ELSE
      Constant4_out1(128) WHEN Switch24_out1 = to_unsigned(16#81#, 8) ELSE
      Constant4_out1(129) WHEN Switch24_out1 = to_unsigned(16#82#, 8) ELSE
      Constant4_out1(130) WHEN Switch24_out1 = to_unsigned(16#83#, 8) ELSE
      Constant4_out1(131) WHEN Switch24_out1 = to_unsigned(16#84#, 8) ELSE
      Constant4_out1(132) WHEN Switch24_out1 = to_unsigned(16#85#, 8) ELSE
      Constant4_out1(133) WHEN Switch24_out1 = to_unsigned(16#86#, 8) ELSE
      Constant4_out1(134) WHEN Switch24_out1 = to_unsigned(16#87#, 8) ELSE
      Constant4_out1(135) WHEN Switch24_out1 = to_unsigned(16#88#, 8) ELSE
      Constant4_out1(136) WHEN Switch24_out1 = to_unsigned(16#89#, 8) ELSE
      Constant4_out1(137) WHEN Switch24_out1 = to_unsigned(16#8A#, 8) ELSE
      Constant4_out1(138) WHEN Switch24_out1 = to_unsigned(16#8B#, 8) ELSE
      Constant4_out1(139);

  Bit_Slice_out1 <= Selector2_out1(26 DOWNTO 0);

  Constant_out1_1 <= '1';

  Bit_Concat_out1 <= Constant_out1_1 & X_M;

  Data_Type_Conversion_out1_1 <= Bit_Concat_out1;

  Bit_Slice2_out1 <= Data_Type_Conversion_out1_1;

  Bit_Slice1_out1 <= Selector2_out1(78 DOWNTO 27);

  Bit_Slice2_out1_1 <= Bit_Slice1_out1(26 DOWNTO 0);

  Bit_Slice1_out1_1 <= Bit_Slice1_out1(51 DOWNTO 27);

  Data_Type_Conversion1_out1 <= resize(Bit_Slice1_out1_1, 27);

  z0_out1 <= Bit_Slice_out1 * Bit_Slice2_out1;

  z0_out1_1 <= Bit_Slice2_out1_1 * Bit_Slice2_out1;

  z0_out1_2 <= Data_Type_Conversion1_out1 * Bit_Slice2_out1;

  Data_Type_Conversion_out1_2 <= resize(z0_out1_2, 76);

  Bit_Shift_out1 <= Data_Type_Conversion_out1_2 sll 27;

  Sum_out1 <= resize(z0_out1_1, 77) + resize(Bit_Shift_out1, 77);

  Data_Type_Conversion2_out1 <= resize(Sum_out1, 104);

  Bit_Shift_out1_1 <= Data_Type_Conversion2_out1 sll 27;

  Sum_out1_1 <= resize(z0_out1, 105) + resize(Bit_Shift_out1_1, 105);

  Data_Type_Conversion_out1_3 <= Sum_out1_1;

  Data_Type_Conversion1_out1_1 <= Data_Type_Conversion_out1_3(101 DOWNTO 23);

  K <= Data_Type_Conversion1_out1_1(55 DOWNTO 54);

  Bit_Slice1_out1_2 <= K(0);

  Bit_Slice_out1_1 <= K(1);

  Logical_Operator1_out1 <= Bit_Slice1_out1_2 XOR Bit_Slice_out1_1;

  Constant1_out1 <= '0';

  Constant_out1_2 <= '1';

  
  Switch_out1 <= Constant1_out1 WHEN Logical_Operator1_out1 = '0' ELSE
      Constant_out1_2;

  Logical_Operator_out1 <=  NOT X_S;

  
  Switch1_out1 <= X_S WHEN Bit_Slice_out1_1 = '0' ELSE
      Logical_Operator_out1;

  
  Switch2_out1 <= Switch_out1 WHEN IsSin_out1 = '0' ELSE
      Switch1_out1;

  Constant_out1_3 <= '0';

  
  Switch3_out1 <= Constant_out1_3 WHEN IsSin_out1 = '0' ELSE
      X_S;

  
  Switch_out1_1 <= Switch2_out1 WHEN RelOp_relop1 = '0' ELSE
      Switch3_out1;

  Constant4_out1_1 <= '1';

  
  Switch7_out1 <= Switch_out1_1 WHEN Compare_To_Constant_out1 = '0' ELSE
      Constant4_out1_1;

  Constant8_out1 <= '1';

  Constant_out1_4 <= to_unsigned(16#00#, 8);

  alpha127_out1_1 <= to_unsigned(16#7F#, 8);

  Bit_Slice1_out1_3 <= K(0);

  Logical_Operator_out1_1 <=  NOT Bit_Slice1_out1_3;

  Bit_Slice2_out1_2 <= Data_Type_Conversion1_out1_1(53 DOWNTO 1);

  Data_Type_Conversion_out1_4 <= Bit_Slice2_out1_2;

  Data_Type_Conversion_out1_dtc <= resize(Data_Type_Conversion_out1_4, 55);

  Constant1_out1_1 <= unsigned'("0100000000000000000000000000000000000000000000000000000");

  Sum1_sub_cast <= resize(Data_Type_Conversion_out1_4, 55);
  Sum1_out1 <= Constant1_out1_1 - Sum1_sub_cast;

  
  Switch2_out1_1 <= Data_Type_Conversion_out1_dtc WHEN Logical_Operator_out1_1 = '0' ELSE
      Sum1_out1;

  Data_Type_Conversion_out1_dtc_1 <= resize(Data_Type_Conversion_out1_4, 55);

  
  Switch1_out1_1 <= Data_Type_Conversion_out1_dtc_1 WHEN Bit_Slice1_out1_3 = '0' ELSE
      Sum1_out1;

  
  Switch3_out1_1 <= Switch2_out1_1 WHEN IsSin_out1 = '0' ELSE
      Switch1_out1_1;

  Data_Type_Conversion_out1_5 <= Switch3_out1_1(54 DOWNTO 1);

  Bit_Slice2_out1_3 <= Data_Type_Conversion_out1_5(26 DOWNTO 0);

  Data_Type_Conversion_out1_6 <= Data_Type_Conversion_out1_5(51 DOWNTO 25);

  Bit_Slice2_out1_4 <= Data_Type_Conversion_out1_6(26 DOWNTO 20);

  Data_Type_Conversion1_out1_2 <= resize(Bit_Slice2_out1_4, 8);

  coeffs_3_out1(0) <= to_signed(-16#295754D#, 27);
  coeffs_3_out1(1) <= to_signed(-16#2956600#, 27);
  coeffs_3_out1(2) <= to_signed(-16#2954767#, 27);
  coeffs_3_out1(3) <= to_signed(-16#2951982#, 27);
  coeffs_3_out1(4) <= to_signed(-16#294DC52#, 27);
  coeffs_3_out1(5) <= to_signed(-16#2948FDA#, 27);
  coeffs_3_out1(6) <= to_signed(-16#294341B#, 27);
  coeffs_3_out1(7) <= to_signed(-16#293C918#, 27);
  coeffs_3_out1(8) <= to_signed(-16#2934ED3#, 27);
  coeffs_3_out1(9) <= to_signed(-16#292C551#, 27);
  coeffs_3_out1(10) <= to_signed(-16#2922C95#, 27);
  coeffs_3_out1(11) <= to_signed(-16#29184A3#, 27);
  coeffs_3_out1(12) <= to_signed(-16#290CD80#, 27);
  coeffs_3_out1(13) <= to_signed(-16#2900731#, 27);
  coeffs_3_out1(14) <= to_signed(-16#28F31BB#, 27);
  coeffs_3_out1(15) <= to_signed(-16#28E4D25#, 27);
  coeffs_3_out1(16) <= to_signed(-16#28D5973#, 27);
  coeffs_3_out1(17) <= to_signed(-16#28C56AF#, 27);
  coeffs_3_out1(18) <= to_signed(-16#28B44DD#, 27);
  coeffs_3_out1(19) <= to_signed(-16#28A2406#, 27);
  coeffs_3_out1(20) <= to_signed(-16#288F432#, 27);
  coeffs_3_out1(21) <= to_signed(-16#287B569#, 27);
  coeffs_3_out1(22) <= to_signed(-16#28667B4#, 27);
  coeffs_3_out1(23) <= to_signed(-16#2850B1D#, 27);
  coeffs_3_out1(24) <= to_signed(-16#2839FAC#, 27);
  coeffs_3_out1(25) <= to_signed(-16#282256B#, 27);
  coeffs_3_out1(26) <= to_signed(-16#2809C66#, 27);
  coeffs_3_out1(27) <= to_signed(-16#27F04A7#, 27);
  coeffs_3_out1(28) <= to_signed(-16#27D5E39#, 27);
  coeffs_3_out1(29) <= to_signed(-16#27BA927#, 27);
  coeffs_3_out1(30) <= to_signed(-16#279E57F#, 27);
  coeffs_3_out1(31) <= to_signed(-16#278134B#, 27);
  coeffs_3_out1(32) <= to_signed(-16#276329A#, 27);
  coeffs_3_out1(33) <= to_signed(-16#2744378#, 27);
  coeffs_3_out1(34) <= to_signed(-16#27245F3#, 27);
  coeffs_3_out1(35) <= to_signed(-16#2703A18#, 27);
  coeffs_3_out1(36) <= to_signed(-16#26E1FF7#, 27);
  coeffs_3_out1(37) <= to_signed(-16#26BF79E#, 27);
  coeffs_3_out1(38) <= to_signed(-16#269C11C#, 27);
  coeffs_3_out1(39) <= to_signed(-16#2677C81#, 27);
  coeffs_3_out1(40) <= to_signed(-16#26529DD#, 27);
  coeffs_3_out1(41) <= to_signed(-16#262C93F#, 27);
  coeffs_3_out1(42) <= to_signed(-16#2605ABA#, 27);
  coeffs_3_out1(43) <= to_signed(-16#25DDE5D#, 27);
  coeffs_3_out1(44) <= to_signed(-16#25B543B#, 27);
  coeffs_3_out1(45) <= to_signed(-16#258BC64#, 27);
  coeffs_3_out1(46) <= to_signed(-16#25616ED#, 27);
  coeffs_3_out1(47) <= to_signed(-16#25363E6#, 27);
  coeffs_3_out1(48) <= to_signed(-16#250A363#, 27);
  coeffs_3_out1(49) <= to_signed(-16#24DD578#, 27);
  coeffs_3_out1(50) <= to_signed(-16#24AFA37#, 27);
  coeffs_3_out1(51) <= to_signed(-16#24811B5#, 27);
  coeffs_3_out1(52) <= to_signed(-16#2451C07#, 27);
  coeffs_3_out1(53) <= to_signed(-16#2421942#, 27);
  coeffs_3_out1(54) <= to_signed(-16#23F0979#, 27);
  coeffs_3_out1(55) <= to_signed(-16#23BECC3#, 27);
  coeffs_3_out1(56) <= to_signed(-16#238C336#, 27);
  coeffs_3_out1(57) <= to_signed(-16#2358CE8#, 27);
  coeffs_3_out1(58) <= to_signed(-16#23249F0#, 27);
  coeffs_3_out1(59) <= to_signed(-16#22EFA63#, 27);
  coeffs_3_out1(60) <= to_signed(-16#22B9E5A#, 27);
  coeffs_3_out1(61) <= to_signed(-16#22835EC#, 27);
  coeffs_3_out1(62) <= to_signed(-16#224C131#, 27);
  coeffs_3_out1(63) <= to_signed(-16#2214040#, 27);
  coeffs_3_out1(64) <= to_signed(-16#21DB334#, 27);
  coeffs_3_out1(65) <= to_signed(-16#21A1A24#, 27);
  coeffs_3_out1(66) <= to_signed(-16#2167529#, 27);
  coeffs_3_out1(67) <= to_signed(-16#212C45E#, 27);
  coeffs_3_out1(68) <= to_signed(-16#20F07DC#, 27);
  coeffs_3_out1(69) <= to_signed(-16#20B3FBC#, 27);
  coeffs_3_out1(70) <= to_signed(-16#2076C1B#, 27);
  coeffs_3_out1(71) <= to_signed(-16#2038D12#, 27);
  coeffs_3_out1(72) <= to_signed(-16#1FFA2BC#, 27);
  coeffs_3_out1(73) <= to_signed(-16#1FBAD35#, 27);
  coeffs_3_out1(74) <= to_signed(-16#1F7AC98#, 27);
  coeffs_3_out1(75) <= to_signed(-16#1F3A102#, 27);
  coeffs_3_out1(76) <= to_signed(-16#1EF8A8E#, 27);
  coeffs_3_out1(77) <= to_signed(-16#1EB6959#, 27);
  coeffs_3_out1(78) <= to_signed(-16#1E73D81#, 27);
  coeffs_3_out1(79) <= to_signed(-16#1E30721#, 27);
  coeffs_3_out1(80) <= to_signed(-16#1DEC658#, 27);
  coeffs_3_out1(81) <= to_signed(-16#1DA7B44#, 27);
  coeffs_3_out1(82) <= to_signed(-16#1D62601#, 27);
  coeffs_3_out1(83) <= to_signed(-16#1D1C6AE#, 27);
  coeffs_3_out1(84) <= to_signed(-16#1CD5D6B#, 27);
  coeffs_3_out1(85) <= to_signed(-16#1C8EA54#, 27);
  coeffs_3_out1(86) <= to_signed(-16#1C46D8A#, 27);
  coeffs_3_out1(87) <= to_signed(-16#1BFE72C#, 27);
  coeffs_3_out1(88) <= to_signed(-16#1BB5759#, 27);
  coeffs_3_out1(89) <= to_signed(-16#1B6BE31#, 27);
  coeffs_3_out1(90) <= to_signed(-16#1B21BD4#, 27);
  coeffs_3_out1(91) <= to_signed(-16#1AD7062#, 27);
  coeffs_3_out1(92) <= to_signed(-16#1A8BBFB#, 27);
  coeffs_3_out1(93) <= to_signed(-16#1A3FEC1#, 27);
  coeffs_3_out1(94) <= to_signed(-16#19F38D4#, 27);
  coeffs_3_out1(95) <= to_signed(-16#19A6A55#, 27);
  coeffs_3_out1(96) <= to_signed(-16#1959365#, 27);
  coeffs_3_out1(97) <= to_signed(-16#190B427#, 27);
  coeffs_3_out1(98) <= to_signed(-16#18BCCBC#, 27);
  coeffs_3_out1(99) <= to_signed(-16#186DD46#, 27);
  coeffs_3_out1(100) <= to_signed(-16#181E5E7#, 27);
  coeffs_3_out1(101) <= to_signed(-16#17CE6C2#, 27);
  coeffs_3_out1(102) <= to_signed(-16#177DFF9#, 27);
  coeffs_3_out1(103) <= to_signed(-16#172D1AF#, 27);
  coeffs_3_out1(104) <= to_signed(-16#16DBC07#, 27);
  coeffs_3_out1(105) <= to_signed(-16#1689F24#, 27);
  coeffs_3_out1(106) <= to_signed(-16#1637B29#, 27);
  coeffs_3_out1(107) <= to_signed(-16#15E503B#, 27);
  coeffs_3_out1(108) <= to_signed(-16#1591E7C#, 27);
  coeffs_3_out1(109) <= to_signed(-16#153E611#, 27);
  coeffs_3_out1(110) <= to_signed(-16#14EA71D#, 27);
  coeffs_3_out1(111) <= to_signed(-16#14961C5#, 27);
  coeffs_3_out1(112) <= to_signed(-16#144162D#, 27);
  coeffs_3_out1(113) <= to_signed(-16#13EC47A#, 27);
  coeffs_3_out1(114) <= to_signed(-16#1396CD0#, 27);
  coeffs_3_out1(115) <= to_signed(-16#1340F54#, 27);
  coeffs_3_out1(116) <= to_signed(-16#12EAC2B#, 27);
  coeffs_3_out1(117) <= to_signed(-16#129437A#, 27);
  coeffs_3_out1(118) <= to_signed(-16#123D566#, 27);
  coeffs_3_out1(119) <= to_signed(-16#11E6215#, 27);
  coeffs_3_out1(120) <= to_signed(-16#118E9AC#, 27);
  coeffs_3_out1(121) <= to_signed(-16#1136C50#, 27);
  coeffs_3_out1(122) <= to_signed(-16#10DEA28#, 27);
  coeffs_3_out1(123) <= to_signed(-16#1086358#, 27);
  coeffs_3_out1(124) <= to_signed(-16#102D807#, 27);
  coeffs_3_out1(125) <= to_signed(-16#0FD485B#, 27);
  coeffs_3_out1(126) <= to_signed(-16#0F7B47A#, 27);
  coeffs_3_out1(127) <= to_signed(-16#0F21C8A#, 27);

  
  Selector_out1 <= coeffs_3_out1(0) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#00#, 8) ELSE
      coeffs_3_out1(1) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#01#, 8) ELSE
      coeffs_3_out1(2) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#02#, 8) ELSE
      coeffs_3_out1(3) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#03#, 8) ELSE
      coeffs_3_out1(4) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#04#, 8) ELSE
      coeffs_3_out1(5) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#05#, 8) ELSE
      coeffs_3_out1(6) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#06#, 8) ELSE
      coeffs_3_out1(7) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#07#, 8) ELSE
      coeffs_3_out1(8) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#08#, 8) ELSE
      coeffs_3_out1(9) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#09#, 8) ELSE
      coeffs_3_out1(10) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0A#, 8) ELSE
      coeffs_3_out1(11) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0B#, 8) ELSE
      coeffs_3_out1(12) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0C#, 8) ELSE
      coeffs_3_out1(13) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0D#, 8) ELSE
      coeffs_3_out1(14) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0E#, 8) ELSE
      coeffs_3_out1(15) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0F#, 8) ELSE
      coeffs_3_out1(16) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#10#, 8) ELSE
      coeffs_3_out1(17) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#11#, 8) ELSE
      coeffs_3_out1(18) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#12#, 8) ELSE
      coeffs_3_out1(19) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#13#, 8) ELSE
      coeffs_3_out1(20) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#14#, 8) ELSE
      coeffs_3_out1(21) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#15#, 8) ELSE
      coeffs_3_out1(22) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#16#, 8) ELSE
      coeffs_3_out1(23) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#17#, 8) ELSE
      coeffs_3_out1(24) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#18#, 8) ELSE
      coeffs_3_out1(25) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#19#, 8) ELSE
      coeffs_3_out1(26) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1A#, 8) ELSE
      coeffs_3_out1(27) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1B#, 8) ELSE
      coeffs_3_out1(28) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1C#, 8) ELSE
      coeffs_3_out1(29) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1D#, 8) ELSE
      coeffs_3_out1(30) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1E#, 8) ELSE
      coeffs_3_out1(31) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1F#, 8) ELSE
      coeffs_3_out1(32) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#20#, 8) ELSE
      coeffs_3_out1(33) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#21#, 8) ELSE
      coeffs_3_out1(34) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#22#, 8) ELSE
      coeffs_3_out1(35) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#23#, 8) ELSE
      coeffs_3_out1(36) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#24#, 8) ELSE
      coeffs_3_out1(37) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#25#, 8) ELSE
      coeffs_3_out1(38) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#26#, 8) ELSE
      coeffs_3_out1(39) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#27#, 8) ELSE
      coeffs_3_out1(40) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#28#, 8) ELSE
      coeffs_3_out1(41) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#29#, 8) ELSE
      coeffs_3_out1(42) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2A#, 8) ELSE
      coeffs_3_out1(43) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2B#, 8) ELSE
      coeffs_3_out1(44) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2C#, 8) ELSE
      coeffs_3_out1(45) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2D#, 8) ELSE
      coeffs_3_out1(46) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2E#, 8) ELSE
      coeffs_3_out1(47) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2F#, 8) ELSE
      coeffs_3_out1(48) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#30#, 8) ELSE
      coeffs_3_out1(49) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#31#, 8) ELSE
      coeffs_3_out1(50) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#32#, 8) ELSE
      coeffs_3_out1(51) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#33#, 8) ELSE
      coeffs_3_out1(52) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#34#, 8) ELSE
      coeffs_3_out1(53) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#35#, 8) ELSE
      coeffs_3_out1(54) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#36#, 8) ELSE
      coeffs_3_out1(55) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#37#, 8) ELSE
      coeffs_3_out1(56) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#38#, 8) ELSE
      coeffs_3_out1(57) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#39#, 8) ELSE
      coeffs_3_out1(58) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3A#, 8) ELSE
      coeffs_3_out1(59) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3B#, 8) ELSE
      coeffs_3_out1(60) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3C#, 8) ELSE
      coeffs_3_out1(61) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3D#, 8) ELSE
      coeffs_3_out1(62) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3E#, 8) ELSE
      coeffs_3_out1(63) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3F#, 8) ELSE
      coeffs_3_out1(64) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#40#, 8) ELSE
      coeffs_3_out1(65) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#41#, 8) ELSE
      coeffs_3_out1(66) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#42#, 8) ELSE
      coeffs_3_out1(67) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#43#, 8) ELSE
      coeffs_3_out1(68) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#44#, 8) ELSE
      coeffs_3_out1(69) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#45#, 8) ELSE
      coeffs_3_out1(70) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#46#, 8) ELSE
      coeffs_3_out1(71) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#47#, 8) ELSE
      coeffs_3_out1(72) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#48#, 8) ELSE
      coeffs_3_out1(73) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#49#, 8) ELSE
      coeffs_3_out1(74) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4A#, 8) ELSE
      coeffs_3_out1(75) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4B#, 8) ELSE
      coeffs_3_out1(76) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4C#, 8) ELSE
      coeffs_3_out1(77) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4D#, 8) ELSE
      coeffs_3_out1(78) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4E#, 8) ELSE
      coeffs_3_out1(79) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4F#, 8) ELSE
      coeffs_3_out1(80) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#50#, 8) ELSE
      coeffs_3_out1(81) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#51#, 8) ELSE
      coeffs_3_out1(82) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#52#, 8) ELSE
      coeffs_3_out1(83) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#53#, 8) ELSE
      coeffs_3_out1(84) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#54#, 8) ELSE
      coeffs_3_out1(85) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#55#, 8) ELSE
      coeffs_3_out1(86) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#56#, 8) ELSE
      coeffs_3_out1(87) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#57#, 8) ELSE
      coeffs_3_out1(88) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#58#, 8) ELSE
      coeffs_3_out1(89) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#59#, 8) ELSE
      coeffs_3_out1(90) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5A#, 8) ELSE
      coeffs_3_out1(91) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5B#, 8) ELSE
      coeffs_3_out1(92) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5C#, 8) ELSE
      coeffs_3_out1(93) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5D#, 8) ELSE
      coeffs_3_out1(94) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5E#, 8) ELSE
      coeffs_3_out1(95) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5F#, 8) ELSE
      coeffs_3_out1(96) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#60#, 8) ELSE
      coeffs_3_out1(97) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#61#, 8) ELSE
      coeffs_3_out1(98) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#62#, 8) ELSE
      coeffs_3_out1(99) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#63#, 8) ELSE
      coeffs_3_out1(100) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#64#, 8) ELSE
      coeffs_3_out1(101) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#65#, 8) ELSE
      coeffs_3_out1(102) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#66#, 8) ELSE
      coeffs_3_out1(103) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#67#, 8) ELSE
      coeffs_3_out1(104) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#68#, 8) ELSE
      coeffs_3_out1(105) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#69#, 8) ELSE
      coeffs_3_out1(106) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6A#, 8) ELSE
      coeffs_3_out1(107) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6B#, 8) ELSE
      coeffs_3_out1(108) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6C#, 8) ELSE
      coeffs_3_out1(109) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6D#, 8) ELSE
      coeffs_3_out1(110) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6E#, 8) ELSE
      coeffs_3_out1(111) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6F#, 8) ELSE
      coeffs_3_out1(112) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#70#, 8) ELSE
      coeffs_3_out1(113) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#71#, 8) ELSE
      coeffs_3_out1(114) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#72#, 8) ELSE
      coeffs_3_out1(115) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#73#, 8) ELSE
      coeffs_3_out1(116) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#74#, 8) ELSE
      coeffs_3_out1(117) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#75#, 8) ELSE
      coeffs_3_out1(118) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#76#, 8) ELSE
      coeffs_3_out1(119) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#77#, 8) ELSE
      coeffs_3_out1(120) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#78#, 8) ELSE
      coeffs_3_out1(121) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#79#, 8) ELSE
      coeffs_3_out1(122) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7A#, 8) ELSE
      coeffs_3_out1(123) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7B#, 8) ELSE
      coeffs_3_out1(124) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7C#, 8) ELSE
      coeffs_3_out1(125) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7D#, 8) ELSE
      coeffs_3_out1(126) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7E#, 8) ELSE
      coeffs_3_out1(127);

  Data_Type_Conversion6_out1 <= Selector_out1;

  Data_Type_Conversion5_out1 <= Data_Type_Conversion_out1_6;

  Product1_cast <= signed(resize(Data_Type_Conversion5_out1, 28));
  Product1_mul_temp <= Data_Type_Conversion6_out1 * Product1_cast;
  Product1_out1 <= Product1_mul_temp(53 DOWNTO 0);

  Data_Type_Conversion2_out1_1 <= Product1_out1;

  coeffs_2_out1(0) <= to_signed(-16#0000002#, 27);
  coeffs_2_out1(1) <= to_signed(-16#0000044#, 27);
  coeffs_2_out1(2) <= to_signed(-16#000013E#, 27);
  coeffs_2_out1(3) <= to_signed(-16#0000369#, 27);
  coeffs_2_out1(4) <= to_signed(-16#0000741#, 27);
  coeffs_2_out1(5) <= to_signed(-16#0000D3F#, 27);
  coeffs_2_out1(6) <= to_signed(-16#00015DE#, 27);
  coeffs_2_out1(7) <= to_signed(-16#0002197#, 27);
  coeffs_2_out1(8) <= to_signed(-16#00030E4#, 27);
  coeffs_2_out1(9) <= to_signed(-16#0004440#, 27);
  coeffs_2_out1(10) <= to_signed(-16#0005C22#, 27);
  coeffs_2_out1(11) <= to_signed(-16#0007904#, 27);
  coeffs_2_out1(12) <= to_signed(-16#0009B5F#, 27);
  coeffs_2_out1(13) <= to_signed(-16#000C3AC#, 27);
  coeffs_2_out1(14) <= to_signed(-16#000F263#, 27);
  coeffs_2_out1(15) <= to_signed(-16#00127FB#, 27);
  coeffs_2_out1(16) <= to_signed(-16#00164EC#, 27);
  coeffs_2_out1(17) <= to_signed(-16#001A9AD#, 27);
  coeffs_2_out1(18) <= to_signed(-16#001F6B4#, 27);
  coeffs_2_out1(19) <= to_signed(-16#0024C79#, 27);
  coeffs_2_out1(20) <= to_signed(-16#002AB70#, 27);
  coeffs_2_out1(21) <= to_signed(-16#003140E#, 27);
  coeffs_2_out1(22) <= to_signed(-16#00386C9#, 27);
  coeffs_2_out1(23) <= to_signed(-16#0040414#, 27);
  coeffs_2_out1(24) <= to_signed(-16#0048C63#, 27);
  coeffs_2_out1(25) <= to_signed(-16#0052029#, 27);
  coeffs_2_out1(26) <= to_signed(-16#005BFD8#, 27);
  coeffs_2_out1(27) <= to_signed(-16#0066BE1#, 27);
  coeffs_2_out1(28) <= to_signed(-16#00724B6#, 27);
  coeffs_2_out1(29) <= to_signed(-16#007EAC6#, 27);
  coeffs_2_out1(30) <= to_signed(-16#008BE82#, 27);
  coeffs_2_out1(31) <= to_signed(-16#009A057#, 27);
  coeffs_2_out1(32) <= to_signed(-16#00A90B4#, 27);
  coeffs_2_out1(33) <= to_signed(-16#00B9007#, 27);
  coeffs_2_out1(34) <= to_signed(-16#00C9EBA#, 27);
  coeffs_2_out1(35) <= to_signed(-16#00DBD3A#, 27);
  coeffs_2_out1(36) <= to_signed(-16#00EEBF1#, 27);
  coeffs_2_out1(37) <= to_signed(-16#0102B49#, 27);
  coeffs_2_out1(38) <= to_signed(-16#0117BAA#, 27);
  coeffs_2_out1(39) <= to_signed(-16#012DD7D#, 27);
  coeffs_2_out1(40) <= to_signed(-16#0145128#, 27);
  coeffs_2_out1(41) <= to_signed(-16#015D712#, 27);
  coeffs_2_out1(42) <= to_signed(-16#0176F9E#, 27);
  coeffs_2_out1(43) <= to_signed(-16#0191B30#, 27);
  coeffs_2_out1(44) <= to_signed(-16#01ADA2C#, 27);
  coeffs_2_out1(45) <= to_signed(-16#01CACF3#, 27);
  coeffs_2_out1(46) <= to_signed(-16#01E93E5#, 27);
  coeffs_2_out1(47) <= to_signed(-16#0208F62#, 27);
  coeffs_2_out1(48) <= to_signed(-16#0229FC9#, 27);
  coeffs_2_out1(49) <= to_signed(-16#024C575#, 27);
  coeffs_2_out1(50) <= to_signed(-16#02700C4#, 27);
  coeffs_2_out1(51) <= to_signed(-16#029520F#, 27);
  coeffs_2_out1(52) <= to_signed(-16#02BB9B1#, 27);
  coeffs_2_out1(53) <= to_signed(-16#02E3801#, 27);
  coeffs_2_out1(54) <= to_signed(-16#030CD56#, 27);
  coeffs_2_out1(55) <= to_signed(-16#0337A06#, 27);
  coeffs_2_out1(56) <= to_signed(-16#0363E65#, 27);
  coeffs_2_out1(57) <= to_signed(-16#0391AC7#, 27);
  coeffs_2_out1(58) <= to_signed(-16#03C0F7C#, 27);
  coeffs_2_out1(59) <= to_signed(-16#03F1CD6#, 27);
  coeffs_2_out1(60) <= to_signed(-16#0424322#, 27);
  coeffs_2_out1(61) <= to_signed(-16#04582AF#, 27);
  coeffs_2_out1(62) <= to_signed(-16#048DBC8#, 27);
  coeffs_2_out1(63) <= to_signed(-16#04C4EB8#, 27);
  coeffs_2_out1(64) <= to_signed(-16#04FDBC9#, 27);
  coeffs_2_out1(65) <= to_signed(-16#0538341#, 27);
  coeffs_2_out1(66) <= to_signed(-16#0574567#, 27);
  coeffs_2_out1(67) <= to_signed(-16#05B227F#, 27);
  coeffs_2_out1(68) <= to_signed(-16#05F1ACE#, 27);
  coeffs_2_out1(69) <= to_signed(-16#0632E93#, 27);
  coeffs_2_out1(70) <= to_signed(-16#0675E0F#, 27);
  coeffs_2_out1(71) <= to_signed(-16#06BA981#, 27);
  coeffs_2_out1(72) <= to_signed(-16#0701125#, 27);
  coeffs_2_out1(73) <= to_signed(-16#0749537#, 27);
  coeffs_2_out1(74) <= to_signed(-16#07935EF#, 27);
  coeffs_2_out1(75) <= to_signed(-16#07DF387#, 27);
  coeffs_2_out1(76) <= to_signed(-16#082CE34#, 27);
  coeffs_2_out1(77) <= to_signed(-16#087C62A#, 27);
  coeffs_2_out1(78) <= to_signed(-16#08CDB9D#, 27);
  coeffs_2_out1(79) <= to_signed(-16#0920EBE#, 27);
  coeffs_2_out1(80) <= to_signed(-16#0975FBD#, 27);
  coeffs_2_out1(81) <= to_signed(-16#09CCEC6#, 27);
  coeffs_2_out1(82) <= to_signed(-16#0A25C07#, 27);
  coeffs_2_out1(83) <= to_signed(-16#0A807A9#, 27);
  coeffs_2_out1(84) <= to_signed(-16#0ADD1D5#, 27);
  coeffs_2_out1(85) <= to_signed(-16#0B3BAB2#, 27);
  coeffs_2_out1(86) <= to_signed(-16#0B9C264#, 27);
  coeffs_2_out1(87) <= to_signed(-16#0BFE90F#, 27);
  coeffs_2_out1(88) <= to_signed(-16#0C62ED4#, 27);
  coeffs_2_out1(89) <= to_signed(-16#0CC93D3#, 27);
  coeffs_2_out1(90) <= to_signed(-16#0D31829#, 27);
  coeffs_2_out1(91) <= to_signed(-16#0D9BBF2#, 27);
  coeffs_2_out1(92) <= to_signed(-16#0E07F48#, 27);
  coeffs_2_out1(93) <= to_signed(-16#0E76244#, 27);
  coeffs_2_out1(94) <= to_signed(-16#0EE64FB#, 27);
  coeffs_2_out1(95) <= to_signed(-16#0F58782#, 27);
  coeffs_2_out1(96) <= to_signed(-16#0FCC9EB#, 27);
  coeffs_2_out1(97) <= to_signed(-16#1042C48#, 27);
  coeffs_2_out1(98) <= to_signed(-16#10BAEA7#, 27);
  coeffs_2_out1(99) <= to_signed(-16#1135114#, 27);
  coeffs_2_out1(100) <= to_signed(-16#11B139A#, 27);
  coeffs_2_out1(101) <= to_signed(-16#122F644#, 27);
  coeffs_2_out1(102) <= to_signed(-16#12AF916#, 27);
  coeffs_2_out1(103) <= to_signed(-16#1331C18#, 27);
  coeffs_2_out1(104) <= to_signed(-16#13B5F4C#, 27);
  coeffs_2_out1(105) <= to_signed(-16#143C2B2#, 27);
  coeffs_2_out1(106) <= to_signed(-16#14C464B#, 27);
  coeffs_2_out1(107) <= to_signed(-16#154EA14#, 27);
  coeffs_2_out1(108) <= to_signed(-16#15DAE08#, 27);
  coeffs_2_out1(109) <= to_signed(-16#1669221#, 27);
  coeffs_2_out1(110) <= to_signed(-16#16F9656#, 27);
  coeffs_2_out1(111) <= to_signed(-16#178BA9D#, 27);
  coeffs_2_out1(112) <= to_signed(-16#181FEE8#, 27);
  coeffs_2_out1(113) <= to_signed(-16#18B632A#, 27);
  coeffs_2_out1(114) <= to_signed(-16#194E753#, 27);
  coeffs_2_out1(115) <= to_signed(-16#19E8B4F#, 27);
  coeffs_2_out1(116) <= to_signed(-16#1A84F0B#, 27);
  coeffs_2_out1(117) <= to_signed(-16#1B23271#, 27);
  coeffs_2_out1(118) <= to_signed(-16#1BC3567#, 27);
  coeffs_2_out1(119) <= to_signed(-16#1C657D3#, 27);
  coeffs_2_out1(120) <= to_signed(-16#1D0999A#, 27);
  coeffs_2_out1(121) <= to_signed(-16#1DAFA9D#, 27);
  coeffs_2_out1(122) <= to_signed(-16#1E57ABC#, 27);
  coeffs_2_out1(123) <= to_signed(-16#1F019D4#, 27);
  coeffs_2_out1(124) <= to_signed(-16#1FAD7C2#, 27);
  coeffs_2_out1(125) <= to_signed(-16#205B45F#, 27);
  coeffs_2_out1(126) <= to_signed(-16#210AF84#, 27);
  coeffs_2_out1(127) <= to_signed(-16#21BC905#, 27);

  
  Selector1_out1 <= coeffs_2_out1(0) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#00#, 8) ELSE
      coeffs_2_out1(1) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#01#, 8) ELSE
      coeffs_2_out1(2) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#02#, 8) ELSE
      coeffs_2_out1(3) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#03#, 8) ELSE
      coeffs_2_out1(4) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#04#, 8) ELSE
      coeffs_2_out1(5) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#05#, 8) ELSE
      coeffs_2_out1(6) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#06#, 8) ELSE
      coeffs_2_out1(7) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#07#, 8) ELSE
      coeffs_2_out1(8) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#08#, 8) ELSE
      coeffs_2_out1(9) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#09#, 8) ELSE
      coeffs_2_out1(10) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0A#, 8) ELSE
      coeffs_2_out1(11) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0B#, 8) ELSE
      coeffs_2_out1(12) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0C#, 8) ELSE
      coeffs_2_out1(13) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0D#, 8) ELSE
      coeffs_2_out1(14) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0E#, 8) ELSE
      coeffs_2_out1(15) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0F#, 8) ELSE
      coeffs_2_out1(16) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#10#, 8) ELSE
      coeffs_2_out1(17) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#11#, 8) ELSE
      coeffs_2_out1(18) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#12#, 8) ELSE
      coeffs_2_out1(19) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#13#, 8) ELSE
      coeffs_2_out1(20) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#14#, 8) ELSE
      coeffs_2_out1(21) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#15#, 8) ELSE
      coeffs_2_out1(22) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#16#, 8) ELSE
      coeffs_2_out1(23) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#17#, 8) ELSE
      coeffs_2_out1(24) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#18#, 8) ELSE
      coeffs_2_out1(25) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#19#, 8) ELSE
      coeffs_2_out1(26) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1A#, 8) ELSE
      coeffs_2_out1(27) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1B#, 8) ELSE
      coeffs_2_out1(28) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1C#, 8) ELSE
      coeffs_2_out1(29) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1D#, 8) ELSE
      coeffs_2_out1(30) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1E#, 8) ELSE
      coeffs_2_out1(31) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1F#, 8) ELSE
      coeffs_2_out1(32) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#20#, 8) ELSE
      coeffs_2_out1(33) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#21#, 8) ELSE
      coeffs_2_out1(34) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#22#, 8) ELSE
      coeffs_2_out1(35) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#23#, 8) ELSE
      coeffs_2_out1(36) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#24#, 8) ELSE
      coeffs_2_out1(37) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#25#, 8) ELSE
      coeffs_2_out1(38) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#26#, 8) ELSE
      coeffs_2_out1(39) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#27#, 8) ELSE
      coeffs_2_out1(40) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#28#, 8) ELSE
      coeffs_2_out1(41) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#29#, 8) ELSE
      coeffs_2_out1(42) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2A#, 8) ELSE
      coeffs_2_out1(43) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2B#, 8) ELSE
      coeffs_2_out1(44) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2C#, 8) ELSE
      coeffs_2_out1(45) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2D#, 8) ELSE
      coeffs_2_out1(46) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2E#, 8) ELSE
      coeffs_2_out1(47) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2F#, 8) ELSE
      coeffs_2_out1(48) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#30#, 8) ELSE
      coeffs_2_out1(49) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#31#, 8) ELSE
      coeffs_2_out1(50) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#32#, 8) ELSE
      coeffs_2_out1(51) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#33#, 8) ELSE
      coeffs_2_out1(52) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#34#, 8) ELSE
      coeffs_2_out1(53) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#35#, 8) ELSE
      coeffs_2_out1(54) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#36#, 8) ELSE
      coeffs_2_out1(55) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#37#, 8) ELSE
      coeffs_2_out1(56) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#38#, 8) ELSE
      coeffs_2_out1(57) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#39#, 8) ELSE
      coeffs_2_out1(58) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3A#, 8) ELSE
      coeffs_2_out1(59) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3B#, 8) ELSE
      coeffs_2_out1(60) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3C#, 8) ELSE
      coeffs_2_out1(61) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3D#, 8) ELSE
      coeffs_2_out1(62) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3E#, 8) ELSE
      coeffs_2_out1(63) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3F#, 8) ELSE
      coeffs_2_out1(64) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#40#, 8) ELSE
      coeffs_2_out1(65) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#41#, 8) ELSE
      coeffs_2_out1(66) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#42#, 8) ELSE
      coeffs_2_out1(67) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#43#, 8) ELSE
      coeffs_2_out1(68) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#44#, 8) ELSE
      coeffs_2_out1(69) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#45#, 8) ELSE
      coeffs_2_out1(70) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#46#, 8) ELSE
      coeffs_2_out1(71) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#47#, 8) ELSE
      coeffs_2_out1(72) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#48#, 8) ELSE
      coeffs_2_out1(73) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#49#, 8) ELSE
      coeffs_2_out1(74) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4A#, 8) ELSE
      coeffs_2_out1(75) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4B#, 8) ELSE
      coeffs_2_out1(76) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4C#, 8) ELSE
      coeffs_2_out1(77) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4D#, 8) ELSE
      coeffs_2_out1(78) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4E#, 8) ELSE
      coeffs_2_out1(79) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4F#, 8) ELSE
      coeffs_2_out1(80) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#50#, 8) ELSE
      coeffs_2_out1(81) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#51#, 8) ELSE
      coeffs_2_out1(82) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#52#, 8) ELSE
      coeffs_2_out1(83) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#53#, 8) ELSE
      coeffs_2_out1(84) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#54#, 8) ELSE
      coeffs_2_out1(85) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#55#, 8) ELSE
      coeffs_2_out1(86) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#56#, 8) ELSE
      coeffs_2_out1(87) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#57#, 8) ELSE
      coeffs_2_out1(88) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#58#, 8) ELSE
      coeffs_2_out1(89) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#59#, 8) ELSE
      coeffs_2_out1(90) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5A#, 8) ELSE
      coeffs_2_out1(91) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5B#, 8) ELSE
      coeffs_2_out1(92) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5C#, 8) ELSE
      coeffs_2_out1(93) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5D#, 8) ELSE
      coeffs_2_out1(94) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5E#, 8) ELSE
      coeffs_2_out1(95) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5F#, 8) ELSE
      coeffs_2_out1(96) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#60#, 8) ELSE
      coeffs_2_out1(97) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#61#, 8) ELSE
      coeffs_2_out1(98) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#62#, 8) ELSE
      coeffs_2_out1(99) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#63#, 8) ELSE
      coeffs_2_out1(100) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#64#, 8) ELSE
      coeffs_2_out1(101) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#65#, 8) ELSE
      coeffs_2_out1(102) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#66#, 8) ELSE
      coeffs_2_out1(103) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#67#, 8) ELSE
      coeffs_2_out1(104) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#68#, 8) ELSE
      coeffs_2_out1(105) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#69#, 8) ELSE
      coeffs_2_out1(106) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6A#, 8) ELSE
      coeffs_2_out1(107) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6B#, 8) ELSE
      coeffs_2_out1(108) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6C#, 8) ELSE
      coeffs_2_out1(109) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6D#, 8) ELSE
      coeffs_2_out1(110) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6E#, 8) ELSE
      coeffs_2_out1(111) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6F#, 8) ELSE
      coeffs_2_out1(112) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#70#, 8) ELSE
      coeffs_2_out1(113) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#71#, 8) ELSE
      coeffs_2_out1(114) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#72#, 8) ELSE
      coeffs_2_out1(115) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#73#, 8) ELSE
      coeffs_2_out1(116) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#74#, 8) ELSE
      coeffs_2_out1(117) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#75#, 8) ELSE
      coeffs_2_out1(118) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#76#, 8) ELSE
      coeffs_2_out1(119) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#77#, 8) ELSE
      coeffs_2_out1(120) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#78#, 8) ELSE
      coeffs_2_out1(121) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#79#, 8) ELSE
      coeffs_2_out1(122) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7A#, 8) ELSE
      coeffs_2_out1(123) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7B#, 8) ELSE
      coeffs_2_out1(124) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7C#, 8) ELSE
      coeffs_2_out1(125) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7D#, 8) ELSE
      coeffs_2_out1(126) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7E#, 8) ELSE
      coeffs_2_out1(127);

  Add1_add_cast <= resize(Data_Type_Conversion2_out1_1(53 DOWNTO 23), 32);
  Add1_add_cast_1 <= resize(Selector1_out1 & '0' & '0' & '0' & '0', 32);
  Add1_add_temp <= Add1_add_cast + Add1_add_cast_1;
  Add1_out1 <= Add1_add_temp(30 DOWNTO 4);

  Data_Type_Conversion3_out1 <= Add1_out1;

  Data_Type_Conversion10_out1 <= Data_Type_Conversion_out1_6;

  Product1_cast_1 <= signed(resize(Data_Type_Conversion10_out1, 28));
  Product1_mul_temp_1 <= Data_Type_Conversion3_out1 * Product1_cast_1;
  Product1_out1_1 <= Product1_mul_temp_1(53 DOWNTO 0);

  Data_Type_Conversion7_out1 <= Product1_out1_1;

  coeffs_1_out1(0) <= to_signed(16#3243F6B#, 27);
  coeffs_1_out1(1) <= to_signed(16#3243F6B#, 27);
  coeffs_1_out1(2) <= to_signed(16#3243F6C#, 27);
  coeffs_1_out1(3) <= to_signed(16#3243F6F#, 27);
  coeffs_1_out1(4) <= to_signed(16#3243F77#, 27);
  coeffs_1_out1(5) <= to_signed(16#3243F86#, 27);
  coeffs_1_out1(6) <= to_signed(16#3243FA0#, 27);
  coeffs_1_out1(7) <= to_signed(16#3243FC9#, 27);
  coeffs_1_out1(8) <= to_signed(16#3244006#, 27);
  coeffs_1_out1(9) <= to_signed(16#324405D#, 27);
  coeffs_1_out1(10) <= to_signed(16#32440D5#, 27);
  coeffs_1_out1(11) <= to_signed(16#3244174#, 27);
  coeffs_1_out1(12) <= to_signed(16#3244242#, 27);
  coeffs_1_out1(13) <= to_signed(16#3244348#, 27);
  coeffs_1_out1(14) <= to_signed(16#324448F#, 27);
  coeffs_1_out1(15) <= to_signed(16#3244621#, 27);
  coeffs_1_out1(16) <= to_signed(16#3244809#, 27);
  coeffs_1_out1(17) <= to_signed(16#3244A52#, 27);
  coeffs_1_out1(18) <= to_signed(16#3244D07#, 27);
  coeffs_1_out1(19) <= to_signed(16#3245036#, 27);
  coeffs_1_out1(20) <= to_signed(16#32453EC#, 27);
  coeffs_1_out1(21) <= to_signed(16#3245837#, 27);
  coeffs_1_out1(22) <= to_signed(16#3245D25#, 27);
  coeffs_1_out1(23) <= to_signed(16#32462C6#, 27);
  coeffs_1_out1(24) <= to_signed(16#324692A#, 27);
  coeffs_1_out1(25) <= to_signed(16#3247062#, 27);
  coeffs_1_out1(26) <= to_signed(16#324787E#, 27);
  coeffs_1_out1(27) <= to_signed(16#3248191#, 27);
  coeffs_1_out1(28) <= to_signed(16#3248BAD#, 27);
  coeffs_1_out1(29) <= to_signed(16#32496E5#, 27);
  coeffs_1_out1(30) <= to_signed(16#324A34D#, 27);
  coeffs_1_out1(31) <= to_signed(16#324B0FA#, 27);
  coeffs_1_out1(32) <= to_signed(16#324C000#, 27);
  coeffs_1_out1(33) <= to_signed(16#324D075#, 27);
  coeffs_1_out1(34) <= to_signed(16#324E270#, 27);
  coeffs_1_out1(35) <= to_signed(16#324F606#, 27);
  coeffs_1_out1(36) <= to_signed(16#3250B4F#, 27);
  coeffs_1_out1(37) <= to_signed(16#3252263#, 27);
  coeffs_1_out1(38) <= to_signed(16#3253B5B#, 27);
  coeffs_1_out1(39) <= to_signed(16#325564F#, 27);
  coeffs_1_out1(40) <= to_signed(16#3257359#, 27);
  coeffs_1_out1(41) <= to_signed(16#3259292#, 27);
  coeffs_1_out1(42) <= to_signed(16#325B416#, 27);
  coeffs_1_out1(43) <= to_signed(16#325D800#, 27);
  coeffs_1_out1(44) <= to_signed(16#325FE6A#, 27);
  coeffs_1_out1(45) <= to_signed(16#3262771#, 27);
  coeffs_1_out1(46) <= to_signed(16#3265331#, 27);
  coeffs_1_out1(47) <= to_signed(16#32681C8#, 27);
  coeffs_1_out1(48) <= to_signed(16#326B352#, 27);
  coeffs_1_out1(49) <= to_signed(16#326E7ED#, 27);
  coeffs_1_out1(50) <= to_signed(16#3271FB8#, 27);
  coeffs_1_out1(51) <= to_signed(16#3275AD2#, 27);
  coeffs_1_out1(52) <= to_signed(16#3279959#, 27);
  coeffs_1_out1(53) <= to_signed(16#327DB6D#, 27);
  coeffs_1_out1(54) <= to_signed(16#328212D#, 27);
  coeffs_1_out1(55) <= to_signed(16#3286ABB#, 27);
  coeffs_1_out1(56) <= to_signed(16#328B836#, 27);
  coeffs_1_out1(57) <= to_signed(16#32909BF#, 27);
  coeffs_1_out1(58) <= to_signed(16#3295F78#, 27);
  coeffs_1_out1(59) <= to_signed(16#329B983#, 27);
  coeffs_1_out1(60) <= to_signed(16#32A1800#, 27);
  coeffs_1_out1(61) <= to_signed(16#32A7B13#, 27);
  coeffs_1_out1(62) <= to_signed(16#32AE2DE#, 27);
  coeffs_1_out1(63) <= to_signed(16#32B4F83#, 27);
  coeffs_1_out1(64) <= to_signed(16#32BC126#, 27);
  coeffs_1_out1(65) <= to_signed(16#32C37E9#, 27);
  coeffs_1_out1(66) <= to_signed(16#32CB3F0#, 27);
  coeffs_1_out1(67) <= to_signed(16#32D3560#, 27);
  coeffs_1_out1(68) <= to_signed(16#32DBC5B#, 27);
  coeffs_1_out1(69) <= to_signed(16#32E4906#, 27);
  coeffs_1_out1(70) <= to_signed(16#32EDB84#, 27);
  coeffs_1_out1(71) <= to_signed(16#32F73FB#, 27);
  coeffs_1_out1(72) <= to_signed(16#330128F#, 27);
  coeffs_1_out1(73) <= to_signed(16#330B764#, 27);
  coeffs_1_out1(74) <= to_signed(16#331629F#, 27);
  coeffs_1_out1(75) <= to_signed(16#3321466#, 27);
  coeffs_1_out1(76) <= to_signed(16#332CCDC#, 27);
  coeffs_1_out1(77) <= to_signed(16#3338C27#, 27);
  coeffs_1_out1(78) <= to_signed(16#334526D#, 27);
  coeffs_1_out1(79) <= to_signed(16#3351FD1#, 27);
  coeffs_1_out1(80) <= to_signed(16#335F479#, 27);
  coeffs_1_out1(81) <= to_signed(16#336D08B#, 27);
  coeffs_1_out1(82) <= to_signed(16#337B42B#, 27);
  coeffs_1_out1(83) <= to_signed(16#3389F7E#, 27);
  coeffs_1_out1(84) <= to_signed(16#33992AA#, 27);
  coeffs_1_out1(85) <= to_signed(16#33A8DD4#, 27);
  coeffs_1_out1(86) <= to_signed(16#33B911F#, 27);
  coeffs_1_out1(87) <= to_signed(16#33C9CB2#, 27);
  coeffs_1_out1(88) <= to_signed(16#33DB0B1#, 27);
  coeffs_1_out1(89) <= to_signed(16#33ECD40#, 27);
  coeffs_1_out1(90) <= to_signed(16#33FF283#, 27);
  coeffs_1_out1(91) <= to_signed(16#34120A0#, 27);
  coeffs_1_out1(92) <= to_signed(16#34257BB#, 27);
  coeffs_1_out1(93) <= to_signed(16#34397F6#, 27);
  coeffs_1_out1(94) <= to_signed(16#344E176#, 27);
  coeffs_1_out1(95) <= to_signed(16#346345F#, 27);
  coeffs_1_out1(96) <= to_signed(16#34790D4#, 27);
  coeffs_1_out1(97) <= to_signed(16#348F6F7#, 27);
  coeffs_1_out1(98) <= to_signed(16#34A66EC#, 27);
  coeffs_1_out1(99) <= to_signed(16#34BE0D4#, 27);
  coeffs_1_out1(100) <= to_signed(16#34D64D3#, 27);
  coeffs_1_out1(101) <= to_signed(16#34EF30A#, 27);
  coeffs_1_out1(102) <= to_signed(16#3508B9B#, 27);
  coeffs_1_out1(103) <= to_signed(16#3522EA7#, 27);
  coeffs_1_out1(104) <= to_signed(16#353DC4E#, 27);
  coeffs_1_out1(105) <= to_signed(16#35594B1#, 27);
  coeffs_1_out1(106) <= to_signed(16#35757F0#, 27);
  coeffs_1_out1(107) <= to_signed(16#359262B#, 27);
  coeffs_1_out1(108) <= to_signed(16#35AFF82#, 27);
  coeffs_1_out1(109) <= to_signed(16#35CE412#, 27);
  coeffs_1_out1(110) <= to_signed(16#35ED3FA#, 27);
  coeffs_1_out1(111) <= to_signed(16#360CF57#, 27);
  coeffs_1_out1(112) <= to_signed(16#362D649#, 27);
  coeffs_1_out1(113) <= to_signed(16#364E8EA#, 27);
  coeffs_1_out1(114) <= to_signed(16#3670758#, 27);
  coeffs_1_out1(115) <= to_signed(16#36931AD#, 27);
  coeffs_1_out1(116) <= to_signed(16#36B6807#, 27);
  coeffs_1_out1(117) <= to_signed(16#36DAA7E#, 27);
  coeffs_1_out1(118) <= to_signed(16#36FF92D#, 27);
  coeffs_1_out1(119) <= to_signed(16#372542E#, 27);
  coeffs_1_out1(120) <= to_signed(16#374BB99#, 27);
  coeffs_1_out1(121) <= to_signed(16#3772F87#, 27);
  coeffs_1_out1(122) <= to_signed(16#379B00F#, 27);
  coeffs_1_out1(123) <= to_signed(16#37C3D48#, 27);
  coeffs_1_out1(124) <= to_signed(16#37ED748#, 27);
  coeffs_1_out1(125) <= to_signed(16#3817E25#, 27);
  coeffs_1_out1(126) <= to_signed(16#38431F3#, 27);
  coeffs_1_out1(127) <= to_signed(16#386F2C8#, 27);

  
  Selector2_out1_1 <= coeffs_1_out1(0) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#00#, 8) ELSE
      coeffs_1_out1(1) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#01#, 8) ELSE
      coeffs_1_out1(2) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#02#, 8) ELSE
      coeffs_1_out1(3) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#03#, 8) ELSE
      coeffs_1_out1(4) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#04#, 8) ELSE
      coeffs_1_out1(5) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#05#, 8) ELSE
      coeffs_1_out1(6) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#06#, 8) ELSE
      coeffs_1_out1(7) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#07#, 8) ELSE
      coeffs_1_out1(8) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#08#, 8) ELSE
      coeffs_1_out1(9) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#09#, 8) ELSE
      coeffs_1_out1(10) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0A#, 8) ELSE
      coeffs_1_out1(11) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0B#, 8) ELSE
      coeffs_1_out1(12) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0C#, 8) ELSE
      coeffs_1_out1(13) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0D#, 8) ELSE
      coeffs_1_out1(14) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0E#, 8) ELSE
      coeffs_1_out1(15) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#0F#, 8) ELSE
      coeffs_1_out1(16) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#10#, 8) ELSE
      coeffs_1_out1(17) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#11#, 8) ELSE
      coeffs_1_out1(18) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#12#, 8) ELSE
      coeffs_1_out1(19) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#13#, 8) ELSE
      coeffs_1_out1(20) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#14#, 8) ELSE
      coeffs_1_out1(21) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#15#, 8) ELSE
      coeffs_1_out1(22) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#16#, 8) ELSE
      coeffs_1_out1(23) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#17#, 8) ELSE
      coeffs_1_out1(24) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#18#, 8) ELSE
      coeffs_1_out1(25) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#19#, 8) ELSE
      coeffs_1_out1(26) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1A#, 8) ELSE
      coeffs_1_out1(27) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1B#, 8) ELSE
      coeffs_1_out1(28) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1C#, 8) ELSE
      coeffs_1_out1(29) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1D#, 8) ELSE
      coeffs_1_out1(30) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1E#, 8) ELSE
      coeffs_1_out1(31) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#1F#, 8) ELSE
      coeffs_1_out1(32) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#20#, 8) ELSE
      coeffs_1_out1(33) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#21#, 8) ELSE
      coeffs_1_out1(34) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#22#, 8) ELSE
      coeffs_1_out1(35) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#23#, 8) ELSE
      coeffs_1_out1(36) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#24#, 8) ELSE
      coeffs_1_out1(37) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#25#, 8) ELSE
      coeffs_1_out1(38) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#26#, 8) ELSE
      coeffs_1_out1(39) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#27#, 8) ELSE
      coeffs_1_out1(40) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#28#, 8) ELSE
      coeffs_1_out1(41) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#29#, 8) ELSE
      coeffs_1_out1(42) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2A#, 8) ELSE
      coeffs_1_out1(43) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2B#, 8) ELSE
      coeffs_1_out1(44) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2C#, 8) ELSE
      coeffs_1_out1(45) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2D#, 8) ELSE
      coeffs_1_out1(46) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2E#, 8) ELSE
      coeffs_1_out1(47) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#2F#, 8) ELSE
      coeffs_1_out1(48) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#30#, 8) ELSE
      coeffs_1_out1(49) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#31#, 8) ELSE
      coeffs_1_out1(50) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#32#, 8) ELSE
      coeffs_1_out1(51) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#33#, 8) ELSE
      coeffs_1_out1(52) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#34#, 8) ELSE
      coeffs_1_out1(53) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#35#, 8) ELSE
      coeffs_1_out1(54) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#36#, 8) ELSE
      coeffs_1_out1(55) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#37#, 8) ELSE
      coeffs_1_out1(56) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#38#, 8) ELSE
      coeffs_1_out1(57) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#39#, 8) ELSE
      coeffs_1_out1(58) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3A#, 8) ELSE
      coeffs_1_out1(59) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3B#, 8) ELSE
      coeffs_1_out1(60) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3C#, 8) ELSE
      coeffs_1_out1(61) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3D#, 8) ELSE
      coeffs_1_out1(62) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3E#, 8) ELSE
      coeffs_1_out1(63) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#3F#, 8) ELSE
      coeffs_1_out1(64) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#40#, 8) ELSE
      coeffs_1_out1(65) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#41#, 8) ELSE
      coeffs_1_out1(66) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#42#, 8) ELSE
      coeffs_1_out1(67) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#43#, 8) ELSE
      coeffs_1_out1(68) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#44#, 8) ELSE
      coeffs_1_out1(69) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#45#, 8) ELSE
      coeffs_1_out1(70) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#46#, 8) ELSE
      coeffs_1_out1(71) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#47#, 8) ELSE
      coeffs_1_out1(72) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#48#, 8) ELSE
      coeffs_1_out1(73) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#49#, 8) ELSE
      coeffs_1_out1(74) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4A#, 8) ELSE
      coeffs_1_out1(75) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4B#, 8) ELSE
      coeffs_1_out1(76) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4C#, 8) ELSE
      coeffs_1_out1(77) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4D#, 8) ELSE
      coeffs_1_out1(78) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4E#, 8) ELSE
      coeffs_1_out1(79) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#4F#, 8) ELSE
      coeffs_1_out1(80) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#50#, 8) ELSE
      coeffs_1_out1(81) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#51#, 8) ELSE
      coeffs_1_out1(82) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#52#, 8) ELSE
      coeffs_1_out1(83) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#53#, 8) ELSE
      coeffs_1_out1(84) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#54#, 8) ELSE
      coeffs_1_out1(85) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#55#, 8) ELSE
      coeffs_1_out1(86) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#56#, 8) ELSE
      coeffs_1_out1(87) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#57#, 8) ELSE
      coeffs_1_out1(88) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#58#, 8) ELSE
      coeffs_1_out1(89) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#59#, 8) ELSE
      coeffs_1_out1(90) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5A#, 8) ELSE
      coeffs_1_out1(91) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5B#, 8) ELSE
      coeffs_1_out1(92) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5C#, 8) ELSE
      coeffs_1_out1(93) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5D#, 8) ELSE
      coeffs_1_out1(94) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5E#, 8) ELSE
      coeffs_1_out1(95) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#5F#, 8) ELSE
      coeffs_1_out1(96) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#60#, 8) ELSE
      coeffs_1_out1(97) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#61#, 8) ELSE
      coeffs_1_out1(98) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#62#, 8) ELSE
      coeffs_1_out1(99) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#63#, 8) ELSE
      coeffs_1_out1(100) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#64#, 8) ELSE
      coeffs_1_out1(101) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#65#, 8) ELSE
      coeffs_1_out1(102) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#66#, 8) ELSE
      coeffs_1_out1(103) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#67#, 8) ELSE
      coeffs_1_out1(104) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#68#, 8) ELSE
      coeffs_1_out1(105) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#69#, 8) ELSE
      coeffs_1_out1(106) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6A#, 8) ELSE
      coeffs_1_out1(107) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6B#, 8) ELSE
      coeffs_1_out1(108) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6C#, 8) ELSE
      coeffs_1_out1(109) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6D#, 8) ELSE
      coeffs_1_out1(110) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6E#, 8) ELSE
      coeffs_1_out1(111) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#6F#, 8) ELSE
      coeffs_1_out1(112) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#70#, 8) ELSE
      coeffs_1_out1(113) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#71#, 8) ELSE
      coeffs_1_out1(114) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#72#, 8) ELSE
      coeffs_1_out1(115) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#73#, 8) ELSE
      coeffs_1_out1(116) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#74#, 8) ELSE
      coeffs_1_out1(117) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#75#, 8) ELSE
      coeffs_1_out1(118) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#76#, 8) ELSE
      coeffs_1_out1(119) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#77#, 8) ELSE
      coeffs_1_out1(120) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#78#, 8) ELSE
      coeffs_1_out1(121) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#79#, 8) ELSE
      coeffs_1_out1(122) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7A#, 8) ELSE
      coeffs_1_out1(123) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7B#, 8) ELSE
      coeffs_1_out1(124) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7C#, 8) ELSE
      coeffs_1_out1(125) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7D#, 8) ELSE
      coeffs_1_out1(126) WHEN Data_Type_Conversion1_out1_2 = to_unsigned(16#7E#, 8) ELSE
      coeffs_1_out1(127);

  Add2_add_cast <= resize(Data_Type_Conversion7_out1(53 DOWNTO 24), 32);
  Add2_add_cast_1 <= resize(Selector2_out1_1 & '0' & '0' & '0' & '0', 32);
  Add2_add_temp <= Add2_add_cast + Add2_add_cast_1;
  Add2_out1 <= unsigned(Add2_add_temp(29 DOWNTO 3));

  Bit_Slice_out1_2 <= Add2_out1;

  Bit_Slice1_out1_4 <= Data_Type_Conversion_out1_5(53 DOWNTO 27);

  Product1_out1_2 <= Bit_Slice2_out1_3 * Bit_Slice_out1_2;

  Product1_out1_3 <= Bit_Slice1_out1_4 * Bit_Slice_out1_2;

  Data_Type_Conversion_out1_7 <= resize(Product1_out1_3, 82);

  Bit_Shift_out1_2 <= Data_Type_Conversion_out1_7 sll 27;

  Sum_out1_2 <= resize(Product1_out1_2, 96) + resize(Bit_Shift_out1_2, 96);

  Data_Type_Conversion4_out1 <= Sum_out1_2;

  Data_Type_Conversion3_out1_1 <= Data_Type_Conversion4_out1(78 DOWNTO 24);

  Data_Type_Conversion_out1_8 <= Data_Type_Conversion3_out1_1;

  Bit_Slice35_out1 <= Data_Type_Conversion_out1_8(1);

  Constant45_out1 <= to_unsigned(16#36#, 8);

  Bit_Slice34_out1 <= Data_Type_Conversion_out1_8(2);

  Constant44_out1 <= to_unsigned(16#35#, 8);

  
  Switch46_out1 <= Constant45_out1 WHEN Bit_Slice35_out1 = '0' ELSE
      Constant44_out1;

  Bit_Slice33_out1 <= Data_Type_Conversion_out1_8(3);

  Constant43_out1 <= to_unsigned(16#34#, 8);

  
  Switch45_out1 <= Switch46_out1 WHEN Bit_Slice34_out1 = '0' ELSE
      Constant43_out1;

  Bit_Slice32_out1 <= Data_Type_Conversion_out1_8(4);

  Constant42_out1 <= to_unsigned(16#33#, 8);

  
  Switch44_out1 <= Switch45_out1 WHEN Bit_Slice33_out1 = '0' ELSE
      Constant42_out1;

  Bit_Slice31_out1 <= Data_Type_Conversion_out1_8(5);

  Constant41_out1 <= to_unsigned(16#32#, 8);

  
  Switch43_out1 <= Switch44_out1 WHEN Bit_Slice32_out1 = '0' ELSE
      Constant41_out1;

  Bit_Slice42_out1 <= Data_Type_Conversion_out1_8(6);

  Constant39_out1 <= to_unsigned(16#31#, 8);

  
  Switch42_out1 <= Switch43_out1 WHEN Bit_Slice31_out1 = '0' ELSE
      Constant39_out1;

  Bit_Slice41_out1 <= Data_Type_Conversion_out1_8(7);

  Constant38_out1 <= to_unsigned(16#30#, 8);

  
  Switch41_out1 <= Switch42_out1 WHEN Bit_Slice42_out1 = '0' ELSE
      Constant38_out1;

  Bit_Slice40_out1 <= Data_Type_Conversion_out1_8(8);

  Constant37_out1 <= to_unsigned(16#2F#, 8);

  
  Switch40_out1 <= Switch41_out1 WHEN Bit_Slice41_out1 = '0' ELSE
      Constant37_out1;

  Bit_Slice39_out1 <= Data_Type_Conversion_out1_8(9);

  Constant36_out1 <= to_unsigned(16#2E#, 8);

  
  Switch39_out1 <= Switch40_out1 WHEN Bit_Slice40_out1 = '0' ELSE
      Constant36_out1;

  Bit_Slice37_out1 <= Data_Type_Conversion_out1_8(10);

  Constant35_out1 <= to_unsigned(16#2D#, 8);

  
  Switch34_out1 <= Switch39_out1 WHEN Bit_Slice39_out1 = '0' ELSE
      Constant35_out1;

  Bit_Slice36_out1 <= Data_Type_Conversion_out1_8(11);

  Constant34_out1 <= to_unsigned(16#2C#, 8);

  
  Switch33_out1 <= Switch34_out1 WHEN Bit_Slice37_out1 = '0' ELSE
      Constant34_out1;

  Bit_Slice30_out1 <= Data_Type_Conversion_out1_8(12);

  Constant33_out1 <= to_unsigned(16#2B#, 8);

  
  Switch32_out1 <= Switch33_out1 WHEN Bit_Slice36_out1 = '0' ELSE
      Constant33_out1;

  Bit_Slice29_out1 <= Data_Type_Conversion_out1_8(13);

  Constant32_out1 <= to_unsigned(16#2A#, 8);

  
  Switch31_out1 <= Switch32_out1 WHEN Bit_Slice30_out1 = '0' ELSE
      Constant32_out1;

  Bit_Slice53_out1 <= Data_Type_Conversion_out1_8(14);

  Constant31_out1 <= to_unsigned(16#29#, 8);

  
  Switch30_out1 <= Switch31_out1 WHEN Bit_Slice29_out1 = '0' ELSE
      Constant31_out1;

  Bit_Slice52_out1 <= Data_Type_Conversion_out1_8(15);

  Constant30_out1 <= to_unsigned(16#28#, 8);

  
  Switch29_out1 <= Switch30_out1 WHEN Bit_Slice53_out1 = '0' ELSE
      Constant30_out1;

  Bit_Slice51_out1 <= Data_Type_Conversion_out1_8(16);

  Constant55_out1 <= to_unsigned(16#27#, 8);

  
  Switch53_out1 <= Switch29_out1 WHEN Bit_Slice52_out1 = '0' ELSE
      Constant55_out1;

  Bit_Slice49_out1 <= Data_Type_Conversion_out1_8(17);

  Constant54_out1 <= to_unsigned(16#26#, 8);

  
  Switch52_out1 <= Switch53_out1 WHEN Bit_Slice51_out1 = '0' ELSE
      Constant54_out1;

  Bit_Slice48_out1 <= Data_Type_Conversion_out1_8(18);

  Constant53_out1 <= to_unsigned(16#25#, 8);

  
  Switch51_out1 <= Switch52_out1 WHEN Bit_Slice49_out1 = '0' ELSE
      Constant53_out1;

  Bit_Slice47_out1 <= Data_Type_Conversion_out1_8(19);

  Constant52_out1 <= to_unsigned(16#24#, 8);

  
  Switch50_out1 <= Switch51_out1 WHEN Bit_Slice48_out1 = '0' ELSE
      Constant52_out1;

  Bit_Slice38_out1 <= Data_Type_Conversion_out1_8(20);

  Constant51_out1 <= to_unsigned(16#23#, 8);

  
  Switch49_out1 <= Switch50_out1 WHEN Bit_Slice47_out1 = '0' ELSE
      Constant51_out1;

  Bit_Slice28_out1 <= Data_Type_Conversion_out1_8(21);

  Constant50_out1 <= to_unsigned(16#22#, 8);

  
  Switch48_out1 <= Switch49_out1 WHEN Bit_Slice38_out1 = '0' ELSE
      Constant50_out1;

  Bit_Slice17_out1 <= Data_Type_Conversion_out1_8(22);

  Constant49_out1 <= to_unsigned(16#21#, 8);

  
  Switch47_out1 <= Switch48_out1 WHEN Bit_Slice28_out1 = '0' ELSE
      Constant49_out1;

  Bit_Slice45_out1 <= Data_Type_Conversion_out1_8(23);

  Constant40_out1 <= to_unsigned(16#20#, 8);

  
  Switch38_out1 <= Switch47_out1 WHEN Bit_Slice17_out1 = '0' ELSE
      Constant40_out1;

  Bit_Slice44_out1 <= Data_Type_Conversion_out1_8(24);

  Constant29_out1 <= to_unsigned(16#1F#, 8);

  
  Switch28_out1 <= Switch38_out1 WHEN Bit_Slice45_out1 = '0' ELSE
      Constant29_out1;

  Bit_Slice43_out1 <= Data_Type_Conversion_out1_8(25);

  Constant27_out1 <= to_unsigned(16#1E#, 8);

  
  Switch19_out1 <= Switch28_out1 WHEN Bit_Slice44_out1 = '0' ELSE
      Constant27_out1;

  Bit_Slice46_out1 <= Data_Type_Conversion_out1_8(26);

  Constant56_out1 <= to_unsigned(16#1D#, 8);

  
  Switch55_out1 <= Switch19_out1 WHEN Bit_Slice43_out1 = '0' ELSE
      Constant56_out1;

  Bit_Slice16_out1 <= Data_Type_Conversion_out1_8(27);

  Constant28_out1 <= to_unsigned(16#1C#, 8);

  
  Switch54_out1 <= Switch55_out1 WHEN Bit_Slice46_out1 = '0' ELSE
      Constant28_out1;

  Bit_Slice15_out1 <= Data_Type_Conversion_out1_8(28);

  Constant26_out1 <= to_unsigned(16#1B#, 8);

  
  Switch18_out1 <= Switch54_out1 WHEN Bit_Slice16_out1 = '0' ELSE
      Constant26_out1;

  Bit_Slice14_out1 <= Data_Type_Conversion_out1_8(29);

  Constant25_out1 <= to_unsigned(16#1A#, 8);

  
  Switch17_out1 <= Switch18_out1 WHEN Bit_Slice15_out1 = '0' ELSE
      Constant25_out1;

  Bit_Slice13_out1 <= Data_Type_Conversion_out1_8(30);

  Constant24_out1 <= to_unsigned(16#19#, 8);

  
  Switch16_out1 <= Switch17_out1 WHEN Bit_Slice14_out1 = '0' ELSE
      Constant24_out1;

  Bit_Slice12_out1 <= Data_Type_Conversion_out1_8(31);

  Constant23_out1 <= to_unsigned(16#18#, 8);

  
  Switch27_out1 <= Switch16_out1 WHEN Bit_Slice13_out1 = '0' ELSE
      Constant23_out1;

  Bit_Slice23_out1 <= Data_Type_Conversion_out1_8(32);

  Constant22_out1 <= to_unsigned(16#17#, 8);

  
  Switch26_out1 <= Switch27_out1 WHEN Bit_Slice12_out1 = '0' ELSE
      Constant22_out1;

  Bit_Slice22_out1 <= Data_Type_Conversion_out1_8(33);

  Constant21_out1 <= to_unsigned(16#16#, 8);

  
  Switch25_out1 <= Switch26_out1 WHEN Bit_Slice23_out1 = '0' ELSE
      Constant21_out1;

  Bit_Slice21_out1 <= Data_Type_Conversion_out1_8(34);

  Constant20_out1 <= to_unsigned(16#15#, 8);

  
  Switch24_out1_1 <= Switch25_out1 WHEN Bit_Slice22_out1 = '0' ELSE
      Constant20_out1;

  Bit_Slice20_out1 <= Data_Type_Conversion_out1_8(35);

  Constant19_out1 <= to_unsigned(16#14#, 8);

  
  Switch23_out1 <= Switch24_out1_1 WHEN Bit_Slice21_out1 = '0' ELSE
      Constant19_out1;

  Bit_Slice19_out1 <= Data_Type_Conversion_out1_8(36);

  Constant18_out1 <= to_unsigned(16#13#, 8);

  
  Switch22_out1 <= Switch23_out1 WHEN Bit_Slice20_out1 = '0' ELSE
      Constant18_out1;

  Bit_Slice18_out1 <= Data_Type_Conversion_out1_8(37);

  Constant17_out1 <= to_unsigned(16#12#, 8);

  
  Switch21_out1 <= Switch22_out1 WHEN Bit_Slice19_out1 = '0' ELSE
      Constant17_out1;

  Bit_Slice11_out1 <= Data_Type_Conversion_out1_8(38);

  Constant16_out1 <= to_unsigned(16#11#, 8);

  
  Switch20_out1 <= Switch21_out1 WHEN Bit_Slice18_out1 = '0' ELSE
      Constant16_out1;

  Bit_Slice10_out1 <= Data_Type_Conversion_out1_8(39);

  Constant15_out1 <= to_unsigned(16#10#, 8);

  
  Switch15_out1 <= Switch20_out1 WHEN Bit_Slice11_out1 = '0' ELSE
      Constant15_out1;

  Bit_Slice9_out1 <= Data_Type_Conversion_out1_8(40);

  Constant14_out1 <= to_unsigned(16#0F#, 8);

  
  Switch14_out1 <= Switch15_out1 WHEN Bit_Slice10_out1 = '0' ELSE
      Constant14_out1;

  Bit_Slice8_out1 <= Data_Type_Conversion_out1_8(41);

  Constant13_out1 <= to_unsigned(16#0E#, 8);

  
  Switch13_out1 <= Switch14_out1 WHEN Bit_Slice9_out1 = '0' ELSE
      Constant13_out1;

  Bit_Slice7_out1 <= Data_Type_Conversion_out1_8(42);

  Constant12_out1 <= to_unsigned(16#0D#, 8);

  
  Switch12_out1 <= Switch13_out1 WHEN Bit_Slice8_out1 = '0' ELSE
      Constant12_out1;

  Bit_Slice6_out1 <= Data_Type_Conversion_out1_8(43);

  Constant11_out1 <= to_unsigned(16#0C#, 8);

  
  Switch11_out1 <= Switch12_out1 WHEN Bit_Slice7_out1 = '0' ELSE
      Constant11_out1;

  Bit_Slice5_out1 <= Data_Type_Conversion_out1_8(44);

  Constant10_out1 <= to_unsigned(16#0B#, 8);

  
  Switch10_out1 <= Switch11_out1 WHEN Bit_Slice6_out1 = '0' ELSE
      Constant10_out1;

  Bit_Slice4_out1 <= Data_Type_Conversion_out1_8(45);

  Constant9_out1 <= to_unsigned(16#0A#, 8);

  
  Switch9_out1 <= Switch10_out1 WHEN Bit_Slice5_out1 = '0' ELSE
      Constant9_out1;

  Bit_Slice3_out1 <= Data_Type_Conversion_out1_8(46);

  Constant8_out1_1 <= to_unsigned(16#09#, 8);

  
  Switch8_out1 <= Switch9_out1 WHEN Bit_Slice4_out1 = '0' ELSE
      Constant8_out1_1;

  Bit_Slice2_out1_5 <= Data_Type_Conversion_out1_8(47);

  Constant7_out1 <= to_unsigned(16#08#, 8);

  
  Switch7_out1_1 <= Switch8_out1 WHEN Bit_Slice3_out1 = '0' ELSE
      Constant7_out1;

  Bit_Slice1_out1_5 <= Data_Type_Conversion_out1_8(48);

  Constant6_out1_1 <= to_unsigned(16#07#, 8);

  
  Switch6_out1 <= Switch7_out1_1 WHEN Bit_Slice2_out1_5 = '0' ELSE
      Constant6_out1_1;

  Bit_Slice_out1_3 <= Data_Type_Conversion_out1_8(49);

  Constant5_out1_1 <= to_unsigned(16#06#, 8);

  
  Switch5_out1 <= Switch6_out1 WHEN Bit_Slice1_out1_5 = '0' ELSE
      Constant5_out1_1;

  Bit_Slice26_out1 <= Data_Type_Conversion_out1_8(50);

  Constant4_out1_2 <= to_unsigned(16#05#, 8);

  
  Switch4_out1 <= Switch5_out1 WHEN Bit_Slice_out1_3 = '0' ELSE
      Constant4_out1_2;

  Bit_Slice25_out1 <= Data_Type_Conversion_out1_8(51);

  Constant3_out1 <= to_unsigned(16#04#, 8);

  
  Switch3_out1_2 <= Switch4_out1 WHEN Bit_Slice26_out1 = '0' ELSE
      Constant3_out1;

  Bit_Slice24_out1 <= Data_Type_Conversion_out1_8(52);

  Constant2_out1 <= to_unsigned(16#03#, 8);

  
  Switch2_out1_2 <= Switch3_out1_2 WHEN Bit_Slice25_out1 = '0' ELSE
      Constant2_out1;

  Bit_Slice27_out1 <= Data_Type_Conversion_out1_8(53);

  Constant1_out1_2 <= to_unsigned(16#02#, 8);

  
  Switch1_out1_2 <= Switch2_out1_2 WHEN Bit_Slice24_out1 = '0' ELSE
      Constant1_out1_2;

  Bit_Slice50_out1 <= Data_Type_Conversion_out1_8(54);

  Constant124_out1 <= to_unsigned(16#01#, 8);

  
  Switch116_out1 <= Switch1_out1_2 WHEN Bit_Slice27_out1 = '0' ELSE
      Constant124_out1;

  Constant46_out1 <= to_unsigned(16#00#, 8);

  
  Switch35_out1 <= Switch116_out1 WHEN Bit_Slice50_out1 = '0' ELSE
      Constant46_out1;

  Sum_out1_3 <= alpha127_out1_1 - Switch35_out1;

  Constant1_out1_3 <= to_unsigned(16#7F#, 8);

  Delay7_out1_dtc <= X_E;

  
  Switch4_out1_1 <= Constant1_out1_3 WHEN IsSin_out1 = '0' ELSE
      Delay7_out1_dtc;

  
  Switch1_out1_3 <= Sum_out1_3 WHEN RelOp_relop1 = '0' ELSE
      Switch4_out1_1;

  Constant5_out1_2 <= to_unsigned(16#FF#, 8);

  
  Switch8_out1_1 <= Switch1_out1_3 WHEN Compare_To_Constant_out1 = '0' ELSE
      Constant5_out1_2;

  
  Switch1_out1_4 <= Constant_out1_4 WHEN Constant8_out1 = '0' ELSE
      Switch8_out1_1;

  Constant1_out1_4 <= to_unsigned(16#000000#, 23);

  Shift_Arithmetic_out1 <= Data_Type_Conversion_out1_8 sll to_integer(Switch35_out1);

  Bit_Slice1_out1_6 <= Shift_Arithmetic_out1(53 DOWNTO 31);

  Constant3_out1_1 <= to_unsigned(16#000000#, 23);

  
  Switch5_out1_1 <= Constant3_out1_1 WHEN IsSin_out1 = '0' ELSE
      X_M;

  
  Switch2_out1_3 <= Bit_Slice1_out1_6 WHEN RelOp_relop1 = '0' ELSE
      Switch5_out1_1;

  Constant2_out1_1 <= to_unsigned(16#400000#, 23);

  
  Switch6_out1_1 <= Switch2_out1_3 WHEN Compare_To_Constant_out1 = '0' ELSE
      Constant2_out1_1;

  
  Switch_out1_2 <= Constant1_out1_4 WHEN Constant8_out1 = '0' ELSE
      Switch6_out1_1;

  -- Combine FP sign, exponent, mantissa into 32 bit word
  nfp_out_pack <= Switch7_out1 & Switch1_out1_4 & Switch_out1_2;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

